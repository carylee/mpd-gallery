<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd version="phpcpd 1.3.2">
  <duplication lines="313" tokens="729">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Controller/Component/upload.php" line="3"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/controllers/components/upload.php" line="3"/>
    <codefragment>	class UploadComponent extends Object {
	
		/**
		  *	Private Vars
		  */
		  
		var $_file;
		var $_filepath;
		var $_destination;
		var $_name;
		var $_short;
		var $_rules;
		var $_allowed;
		
		/**
		  *	Public Vars
		  */
		var $errors;
		
		function startup (&amp;$controller) {
			// This method takes a reference to the controller which is loading it.
			// Perform controller initialization here.
		}
		
		/**
		  * upload
		  * - handle uploads of any type
		  *		@ file - a file (file to upload) $_FILES[FILE_NAME]
		  *		@ path - string (where to upload to)
		  *		@ name [optional] - override saved filename
		  *		@ rules [optional] - how to handle file types
		  *			- rules['type'] = string ('resize','resizemin','resizecrop','crop')
		  *			- rules['size'] = array (x, y) or single number
		  *			- rules['output'] = string ('gif','png','jpg')
		  *			- rules['quality'] = integer (quality of output image)
		  *		@ allowed [optional] - allowed filetypes
		  *			- defaults to 'jpg','jpeg','gif','png'
		  *	ex:
		  * 	$upload = new upload($_FILES['MyFile'], 'uploads');
		  *
		  */
		
		function upload ($file, $destination, $name = NULL, $rules = NULL, $allowed = NULL) {

			$this-&gt;result = false;
			$this-&gt;error = false;
			
			// -- save parameters
			$this-&gt;_file = $file;
			$this-&gt;_destination = $destination;
			if (!is_null($rules)) $this-&gt;_rules = $rules;
			
			if (!is_null($allowed)) { $this-&gt;_allowed = $allowed; } else { $this-&gt;_allowed = array('jpg','jpeg','gif','png'); }
			
			// -- hack dir if / not provided
			if (substr($this-&gt;_destination,-1) != '/') {
				$this-&gt;_destination .= '/';
			}
			
			// -- check that FILE array is even set
			if (isset($file) &amp;&amp; is_array($file) &amp;&amp; !$this-&gt;upload_error($file['error'])) {
			
				// -- cool, now set some variables
				$fileName = ($name == NULL) ? $this-&gt;uniquename($destination . $file['name']) : $destination . $name;
				$fileTmp = $file['tmp_name'];
				$fileSize = $file['size'];
				$fileType = $file['type'];
				$fileError = $file['error'];
								
				// -- update name
				$this-&gt;_name = $fileName;
				
				// -- error if not correct extension
				if(!in_array($this-&gt;ext($fileName),$this-&gt;_allowed)){
					$this-&gt;error("File type not allowed.");
				} else { 
				
					// -- it's been uploaded with php
					if (is_uploaded_file($fileTmp)) {
				
						// -- how are we handling this file
						if ($rules == NULL) {
							// -- where to put the file?
							$output = $fileName;
							// -- just upload it
							if (move_uploaded_file($fileTmp, $output)) {
								chmod($output, 0644);
								$this-&gt;result = basename($this-&gt;_name);
							} else {
								$this-&gt;error("Could not move '$fileName' to '$destination'");
							}
						} else {
							// -- gd lib check
							if (function_exists("imagecreatefromjpeg")) {
								if (!isset($rules['output'])) $rules['output'] = NULL;
								if (!isset($rules['quality'])) $rules['quality'] = NULL;
								// -- handle it based on rules
								if (isset($rules['type']) &amp;&amp; isset($rules['size'])) {
									$this-&gt;image($this-&gt;_file, $rules['type'], $rules['size'], $rules['output'], $rules['quality']);
								} else {
									$this-&gt;error("Invalid \"rules\" parameter");
								}
							} else {
								$this-&gt;error("GD library is not installed");
							}
						}
					} else {
						$this-&gt;error("Possible file upload attack on '$fileName'");
					}
				}
				
			} else {
				$this-&gt;error("Possible file upload attack");
			}
			
		}

		// -- return the extension of a file	
		function ext ($file) {
			$ext = trim(substr($file,strrpos($file,".")+1,strlen($file)));
			return $ext;
		}
		
		// -- add a message to stack (for outside checking)
		function error ($message) {
			if (!is_array($this-&gt;errors)) $this-&gt;errors = array();
			array_push($this-&gt;errors, $message);
		}	
		
		function image ($file, $type, $size, $output = NULL, $quality = NULL) {
			
			if (is_null($type)) $type = 'resize';
			if (is_null($size)) $size = 100;
			if (is_null($output)) $output = 'jpg';
			if (is_null($quality)) $quality = 75;
			
			// -- format variables
			$type = strtolower($type);
			$output = strtolower($output);
			if (is_array($size)) {
				$maxW = intval($size[0]);
				$maxH = intval($size[1]);
			} else {
				$maxScale = intval($size);
			}
			
			// -- check sizes
			if (isset($maxScale)) {
				if (!$maxScale) {
					$this-&gt;error("Max scale must be set");
				}
			} else {
				if (!$maxW || !$maxH) {
					$this-&gt;error("Size width and height must be set");
					return;
				}
				if ($type == 'resize') {
					$this-&gt;error("Provide only one number for size");
				}
			}
			
			// -- check output
			if ($output != 'jpg' &amp;&amp; $output != 'png' &amp;&amp; $output != 'gif') {
				$this-&gt;error("Cannot output file as " . strtoupper($output));
			}
			
			if (is_numeric($quality)) {
				$quality = intval($quality);
				if ($quality &gt; 100 || $quality &lt; 1) {
					$quality = 75;
				}
			} else {
				$quality = 75;
			}
			
			// -- get some information about the file
			$uploadSize = getimagesize($file['tmp_name']);
			$uploadWidth  = $uploadSize[0];
			$uploadHeight = $uploadSize[1];
			$uploadType = $uploadSize[2];
			
			if ($uploadType != 1 &amp;&amp; $uploadType != 2 &amp;&amp; $uploadType != 3) {
				$this-&gt;error ("File type must be GIF, PNG, or JPG to resize");
			}
			
			switch ($uploadType) {
				case 1: $srcImg = imagecreatefromgif($file['tmp_name']); break;
				case 2: $srcImg = imagecreatefromjpeg($file['tmp_name']); break;
				case 3: $srcImg = imagecreatefrompng($file['tmp_name']); break;
				default: $this-&gt;error ("File type must be GIF, PNG, or JPG to resize");
			}
						
			switch ($type) {
			
				case 'resize':
					# Maintains the aspect ration of the image and makes sure that it fits
					# within the maxW and maxH (thus some side will be smaller)
					// -- determine new size
					if ($uploadWidth &gt; $maxScale || $uploadHeight &gt; $maxScale) {
						if ($uploadWidth &gt; $uploadHeight) {
							$newX = $maxScale;
							$newY = ($uploadHeight*$newX)/$uploadWidth;
						} else if ($uploadWidth &lt; $uploadHeight) {
							$newY = $maxScale;
							$newX = ($newY*$uploadWidth)/$uploadHeight;
						} else if ($uploadWidth == $uploadHeight) {
							$newX = $newY = $maxScale;
						}
					} else {
						$newX = $uploadWidth;
						$newY = $uploadHeight;
					}
					
					$dstImg = imagecreatetruecolor($newX, $newY);
					imagecopyresampled($dstImg, $srcImg, 0, 0, 0, 0, $newX, $newY, $uploadWidth, $uploadHeight);
					
					break;
					
				case 'resizemin':
					# Maintains aspect ratio but resizes the image so that once
					# one side meets its maxW or maxH condition, it stays at that size
					# (thus one side will be larger)
					#get ratios
					$ratioX = $maxW / $uploadWidth;
					$ratioY = $maxH / $uploadHeight;

					#figure out new dimensions
					if (($uploadWidth == $maxW) &amp;&amp; ($uploadHeight == $maxH)) {
						$newX = $uploadWidth;
						$newY = $uploadHeight;
					} else if (($ratioX * $uploadHeight) &gt; $maxH) {
						$newX = $maxW;
						$newY = ceil($ratioX * $uploadHeight);
					} else {
						$newX = ceil($ratioY * $uploadWidth);		
						$newY = $maxH;
					}

					$dstImg = imagecreatetruecolor($newX,$newY);
					imagecopyresampled($dstImg, $srcImg, 0, 0, 0, 0, $newX, $newY, $uploadWidth, $uploadHeight);
				
					break;
				
				case 'resizecrop':
					// -- resize to max, then crop to center
					$ratioX = $maxW / $uploadWidth;
					$ratioY = $maxH / $uploadHeight;

					if ($ratioX &lt; $ratioY) { 
						$newX = round(($uploadWidth - ($maxW / $ratioY))/2);
						$newY = 0;
						$uploadWidth = round($maxW / $ratioY);
						$uploadHeight = $uploadHeight;
					} else { 
						$newX = 0;
						$newY = round(($uploadHeight - ($maxH / $ratioX))/2);
						$uploadWidth = $uploadWidth;
						$uploadHeight = round($maxH / $ratioX);
					}
					
					$dstImg = imagecreatetruecolor($maxW, $maxH);
					imagecopyresampled($dstImg, $srcImg, 0, 0, $newX, $newY, $maxW, $maxH, $uploadWidth, $uploadHeight);
					
					break;
				
				case 'crop':
					// -- a straight centered crop
					$startY = ($uploadHeight - $maxH)/2;
					$startX = ($uploadWidth - $maxW)/2;

					$dstImg = imageCreateTrueColor($maxW, $maxH);
					ImageCopyResampled($dstImg, $srcImg, 0, 0, $startX, $startY, $maxW, $maxH, $maxW, $maxH);
				
					break;
				
				default: $this-&gt;error ("Resize function \"$type\" does not exist");
			}	
		
			// -- try to write
			switch ($output) {
				case 'jpg':
					$write = imagejpeg($dstImg, $this-&gt;_name, $quality);
					break;
				case 'png':
					$write = imagepng($dstImg, $this-&gt;_name . ".png", $quality);
					break;
				case 'gif':
					$write = imagegif($dstImg, $this-&gt;_name . ".gif", $quality);
					break;
			}
			
			// -- clean up
			imagedestroy($dstImg);
			
			if ($write) {
				$this-&gt;result = basename($this-&gt;_name);
			} else {
				$this-&gt;error("Could not write " . $this-&gt;_name . " to " . $this-&gt;_destination);
			}
		}
		
		function newname ($file) {
			return time() . "." . $this-&gt;ext($file);
		}
		
		function uniquename ($file) {
			$parts = pathinfo($file);
			$dir = $parts['dirname'];
			$file = ereg_replace('[^[:alnum:]_.-]','',$parts['basename']);
			$ext = $parts['extension'];
			if ($ext) {
				$ext = '.'.$ext;
				$file = substr($file,0,-strlen($ext));
</codefragment>
  </duplication>
  <duplication lines="136" tokens="597">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Controller/participants_controller.php" line="2"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/controllers/participants_controller.php" line="2"/>
    <codefragment>class ParticipantsController extends AppController {

	var $name = 'Participants';
  var $components = array('Email');
	function index() {
		$this-&gt;Participant-&gt;recursive = 0;
		$this-&gt;set('participants', $this-&gt;paginate());
	}

	function view($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid participant', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		$this-&gt;set('participant', $this-&gt;Participant-&gt;read(null, $id));
	}

	function add() {
		if (!empty($this-&gt;data)) {
			$this-&gt;Participant-&gt;create();
			if ($this-&gt;Participant-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The participant has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The participant could not be saved. Please, try again.', true));
			}
		}
		$projects = $this-&gt;Participant-&gt;Project-&gt;find('list');
		$this-&gt;set(compact('projects'));
	}

	function edit($id = null) {
		if (!$id &amp;&amp; empty($this-&gt;data)) {
			$this-&gt;Session-&gt;setFlash(__('Invalid participant', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		if (!empty($this-&gt;data)) {
			if ($this-&gt;Participant-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The participant has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The participant could not be saved. Please, try again.', true));
			}
		}
		if (empty($this-&gt;data)) {
			$this-&gt;data = $this-&gt;Participant-&gt;read(null, $id);
		}
		$projects = $this-&gt;Participant-&gt;Project-&gt;find('list');
		$this-&gt;set(compact('projects'));
	}

	function delete($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid id for participant', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		if ($this-&gt;Participant-&gt;delete($id)) {
			$this-&gt;Session-&gt;setFlash(__('Participant deleted', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		$this-&gt;Session-&gt;setFlash(__('Participant was not deleted', true));
		$this-&gt;redirect(array('action' =&gt; 'index'));
	}
	function admin_index() {
		$this-&gt;Participant-&gt;recursive = 0;
		$this-&gt;set('participants', $this-&gt;paginate());
	}

	function admin_view($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid participant', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		$this-&gt;set('participant', $this-&gt;Participant-&gt;read(null, $id));
	}

	function admin_add() {
		if (!empty($this-&gt;data)) {
			$this-&gt;Participant-&gt;create();
			if ($this-&gt;Participant-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The participant has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The participant could not be saved. Please, try again.', true));
			}
		}
		$projects = $this-&gt;Participant-&gt;Project-&gt;find('list');
		$this-&gt;set(compact('projects'));
	}

	function admin_edit($id = null) {
		if (!$id &amp;&amp; empty($this-&gt;data)) {
			$this-&gt;Session-&gt;setFlash(__('Invalid participant', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		if (!empty($this-&gt;data)) {
			if ($this-&gt;Participant-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The participant has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The participant could not be saved. Please, try again.', true));
			}
		}
		if (empty($this-&gt;data)) {
			$this-&gt;data = $this-&gt;Participant-&gt;read(null, $id);
		}
		$projects = $this-&gt;Participant-&gt;Project-&gt;find('list');
		$this-&gt;set(compact('projects'));
	}

	function admin_delete($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid id for participant', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		if ($this-&gt;Participant-&gt;delete($id)) {
			$this-&gt;Session-&gt;setFlash(__('Participant deleted', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		$this-&gt;Session-&gt;setFlash(__('Participant was not deleted', true));
		$this-&gt;redirect(array('action' =&gt; 'index'));
	}
	function email($id=null){
    if (!empty($this-&gt;data)) {
      //pr($this-&gt;data);
      $participant = $this-&gt;Participant-&gt;findById($this-&gt;data['Participant']['id']);
      $this-&gt;Email-&gt;to = $participant['Participant']['email'];
      $this-&gt;Email-&gt;subject = $this-&gt;data['Participant']['subject'];
      $this-&gt;Email-&gt;replyTo = $this-&gt;data['Participant']['email'];
      $this-&gt;Email-&gt;from = $this-&gt;data['Participant']['name'];
      //$this-&gt;Email-&gt;delivery = 'debug';  // This is for message debugging
      //Set the body of the mail as we send it. 
      //Note: the text can be an array, each element will appear as a 
      //seperate line in the message body. 
      if ( $this-&gt;Email-&gt;send($this-&gt;data['Participant']['message']) ) { 
        $this-&gt;Session-&gt;setFlash('Simple email sent'); 
</codefragment>
  </duplication>
  <duplication lines="114" tokens="403">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Controller/pictures_controller.php" line="2"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/controllers/pictures_controller.php" line="2"/>
    <codefragment>class PicturesController extends AppController {

	var $name = 'Pictures';
	//var $helpers = array('Html', 'Form');
	var $components = array('Upload');


	/*function add() {
		if (!empty($this-&gt;data)) {
      //pr($this-&gt;data);
      $this-&gt;Picture-&gt;create();
			if ($this-&gt;Picture-&gt;save($this-&gt;data)) {
        $this-&gt;Session-&gt;setFlash(__('The picture has been saved', true));
        $this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
        $this-&gt;Session-&gt;setFlash(__('The picture could not be saved. Please, try again.', true));
			}
		}
		$projects = $this-&gt;Picture-&gt;Project-&gt;find('list');
		$this-&gt;set(compact('projects'));
  }*/

	function index() {
		$this-&gt;Picture-&gt;recursive = 0;
		$this-&gt;set('pictures', $this-&gt;paginate());
	}

	function view($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid picture', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		$this-&gt;set('picture', $this-&gt;Picture-&gt;read(null, $id));
	}



	function edit($id = null) {
		if (!$id &amp;&amp; empty($this-&gt;data)) {
			$this-&gt;Session-&gt;setFlash(__('Invalid picture', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		if (!empty($this-&gt;data)) {
			if ($this-&gt;Picture-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The picture has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The picture could not be saved. Please, try again.', true));
			}
		}
		if (empty($this-&gt;data)) {
			$this-&gt;data = $this-&gt;Picture-&gt;read(null, $id);
		}
		$projects = $this-&gt;Picture-&gt;Project-&gt;find('list');
		$this-&gt;set(compact('projects'));
	}

	function delete($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid id for picture', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		if ($this-&gt;Picture-&gt;delete($id)) {
			$this-&gt;Session-&gt;setFlash(__('Picture deleted', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		$this-&gt;Session-&gt;setFlash(__('Picture was not deleted', true));
		$this-&gt;redirect(array('action' =&gt; 'index'));
	}
	function admin_index() {
		$this-&gt;Picture-&gt;recursive = 0;
		$this-&gt;set('pictures', $this-&gt;paginate());
	}

	function admin_view($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid picture', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		$this-&gt;set('picture', $this-&gt;Picture-&gt;read(null, $id));
	}

	function add() {
		if (!empty($this-&gt;data)) {
			$this-&gt;Picture-&gt;create();
			if ($this-&gt;Picture-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The picture has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
        pr($this-&gt;data);
				$this-&gt;Session-&gt;setFlash(__('The picture could not be saved. Please, try again.', true));
			}
		}
		$projects = $this-&gt;Picture-&gt;Project-&gt;find('list');
		$this-&gt;set(compact('projects'));
	}

	function admin_edit($id = null) {
		if (!$id &amp;&amp; empty($this-&gt;data)) {
			$this-&gt;Session-&gt;setFlash(__('Invalid picture', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		if (!empty($this-&gt;data)) {
			if ($this-&gt;Picture-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The picture has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The picture could not be saved. Please, try again.', true));
			}
		}
		if (empty($this-&gt;data)) {
			$this-&gt;data = $this-&gt;Picture-&gt;read(null, $id);
		}
		$projects = $this-&gt;Picture-&gt;Project-&gt;find('list');
</codefragment>
  </duplication>
  <duplication lines="149" tokens="542">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Controller/projects_controller.php" line="2"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/controllers/projects_controller.php" line="2"/>
    <codefragment>class ProjectsController extends AppController {

	var $name = 'Projects';

	function index() {
    date_default_timezone_set('America/Chicago');
		//$this-&gt;Project-&gt;recursive = 1;
		//$this-&gt;set('projects', $this-&gt;paginate());
    $projects = $this-&gt;Project-&gt;find('all', array(
      'recursive'=&gt;1,
      'order'=&gt;array('Project.date_presented DESC'),
    ));
    foreach($projects as $index=&gt;$project) {
      $timestamp = strtotime($project['Project']['date_presented']);
      $projects[$index]['Project']['prettyDate'] = date('F jS, Y', $timestamp);
    }
    $this-&gt;set('projects', $projects);
	}

	function view($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid project', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
    $this-&gt;set('liked', $this-&gt;Session-&gt;check("liked-project-" . $id));
		$this-&gt;set('project', $this-&gt;Project-&gt;read(null, $id));
	}

	function add() {
		if (!empty($this-&gt;data)) {
			$this-&gt;Project-&gt;create();
      $this-&gt;stripEmptyParticipants($this-&gt;data);
      $this-&gt;stripEmptyFiles($this-&gt;data);
      //pr($this-&gt;data);
			if ($this-&gt;Project-&gt;saveAll($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The project has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The project could not be saved. Please, try again.', true));
			}
		}
	}

  
  function stripEmptyParticipants( &amp;$data ) {
    if(isset($data['Participant'])) {
      foreach($data['Participant'] as $index=&gt;$participant) {
        if($participant['name'] == "") {
          unset($data['Participant'][$index]);
        }
      }
    }
  }

  function stripEmptyFiles( &amp;$data ) {
    if(isset($data['Picture'])) {
      foreach($data['Picture'] as $index=&gt;$picture) {
        if(!$picture['filename']['name']) {
          unset($data['Picture'][$index]);
        }
      }
    }
  }

  function addFile($number = null) {
    $this-&gt;layout = 'ajax';
    $this-&gt;set('number', $number);
  }

  function addParticipant($number = 0) {
    $this-&gt;layout = 'ajax';
    $this-&gt;set('number', $number);
  }

	function edit($id = null) {
		if (!$id &amp;&amp; empty($this-&gt;data)) {
			$this-&gt;Session-&gt;setFlash(__('Invalid project', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		if (!empty($this-&gt;data)) {
      $this-&gt;stripEmptyParticipants($this-&gt;data);
      $this-&gt;stripEmptyFiles($this-&gt;data);
			if ($this-&gt;Project-&gt;saveAll($this-&gt;data,array('validate'=&gt;'first'))) {
				$this-&gt;Session-&gt;setFlash(__('The project has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'view', $this-&gt;data['Project']['id']));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The project could not be saved. Please, try again.', true));
			}
		}
		if (empty($this-&gt;data)) {
      $this-&gt;Project-&gt;recursive = 1;
			$this-&gt;data = $this-&gt;Project-&gt;read(null, $id);
      $this-&gt;set('project', $this-&gt;data);
		}
	}

	function delete($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid id for project', true));
			$this-&gt;redirect(array('action'=&gt;'manage'));
		}
		if ($this-&gt;Project-&gt;delete($id)) {
			$this-&gt;Session-&gt;setFlash(__('Project deleted', true));
			$this-&gt;redirect(array('action'=&gt;'manage'));
		}
		$this-&gt;Session-&gt;setFlash(__('Project was not deleted', true));
		$this-&gt;redirect(array('action' =&gt; 'manage'));
	}
	function manage() {
		$this-&gt;Project-&gt;recursive = 0;
		$this-&gt;set('projects', $this-&gt;paginate());
	}

	function admin_view($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid project', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		$this-&gt;set('project', $this-&gt;Project-&gt;read(null, $id));
	}

	function admin_add() {
		if (!empty($this-&gt;data)) {
			$this-&gt;Project-&gt;create();
			if ($this-&gt;Project-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The project has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The project could not be saved. Please, try again.', true));
			}
		}
	}
		function setCover($id=null,$picid=null)
	{
	  
		 if (   $this-&gt;Project-&gt;saveField('cover',$picid)){
			$this-&gt;Session-&gt;setFlash(__('Project Cover Updated!', true));
			$this-&gt;redirect(array('action'=&gt;'edit',$id));
		}
		else
		{
		     $this-&gt;Session-&gt;setFlash(__('Set Cover failed. Please, try again', true));
			 $this-&gt;redirect(array('action'=&gt;'edit',$id));
		}
	}
	
  function like($id=null) {
    if(!$id) {
      $this-&gt;Session-&gt;setFlash(__('Invalid project', true));
</codefragment>
  </duplication>
  <duplication lines="107" tokens="354">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Controller/users_controller.php" line="2"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/controllers/users_controller.php" line="2"/>
    <codefragment>class UsersController extends AppController {

	var $name = 'Users';
  var $components = array('Acl');

  function login() {
  }

  function logout() {
    $this-&gt;redirect($this-&gt;Auth-&gt;logout());
  }

  function createAros() {
    $aro =&amp; $this-&gt;Acl-&gt;Aro;
    
    //Here's all of our group info in an array we can iterate through
    $groups = array(
      0 =&gt; array(
        'alias' =&gt; 'admins'
      ),
      1 =&gt; array(
        'alias' =&gt; 'students'
      ),
      2 =&gt; array(
        'alias' =&gt; 'visitors'
      ),
    );
    
    //Iterate and create ARO groups
    foreach($groups as $data)
    {
      $aro-&gt;create();
      
      //Save data
      $aro-&gt;save($data);
    }
  }


	function index() {
		$this-&gt;User-&gt;recursive = 0;
		$this-&gt;set('users', $this-&gt;paginate());
	}

	function view($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid user', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		$this-&gt;set('user', $this-&gt;User-&gt;read(null, $id));
	}

	function add() {
		if (!empty($this-&gt;data)) {
			$this-&gt;User-&gt;create();
			if ($this-&gt;User-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The user has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The user could not be saved. Please, try again.', true));
			}
		}
	}

	function edit($id = null) {
		if (!$id &amp;&amp; empty($this-&gt;data)) {
			$this-&gt;Session-&gt;setFlash(__('Invalid user', true));
			$this-&gt;redirect(array('action' =&gt; 'index'));
		}
		if (!empty($this-&gt;data)) {
			if ($this-&gt;User-&gt;save($this-&gt;data)) {
				$this-&gt;Session-&gt;setFlash(__('The user has been saved', true));
				$this-&gt;redirect(array('action' =&gt; 'index'));
			} else {
				$this-&gt;Session-&gt;setFlash(__('The user could not be saved. Please, try again.', true));
			}
		}
		if (empty($this-&gt;data)) {
			$this-&gt;data = $this-&gt;User-&gt;read(null, $id);
		}
	}

	function delete($id = null) {
		if (!$id) {
			$this-&gt;Session-&gt;setFlash(__('Invalid id for user', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		if ($this-&gt;User-&gt;delete($id)) {
			$this-&gt;Session-&gt;setFlash(__('User deleted', true));
			$this-&gt;redirect(array('action'=&gt;'index'));
		}
		$this-&gt;Session-&gt;setFlash(__('User was not deleted', true));
		$this-&gt;redirect(array('action' =&gt; 'index'));
	}
	function changePassword($id=null) { 
                if (!$id &amp;&amp; empty($this-&gt;data)) {
			        $this-&gt;Session-&gt;setFlash(__('Invalid user', true));
			        $this-&gt;redirect(array('action' =&gt; 'index'));
	            	}
                if (!empty($this-&gt;data)) { 
                // 	$this-&gt;User-&gt;id = $this-&gt;Session-&gt;read('user_id'); 
                   $user = $this-&gt;User-&gt;findById($id); 
                   if( (($this-&gt;data['User']['password']) )!= $user['User']['password']) 
                        { 
                            $this-&gt;Session-&gt;setFlash(__("Your old Password field didn't match",true)); 
                        } 
                       else if($this-&gt;data['User']['new_password'] !=($this-&gt;data['User'] ['confirm_password'] ))
</codefragment>
  </duplication>
  <duplication lines="60" tokens="89">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Model/project.php" line="2"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/models/project.php" line="2"/>
    <codefragment>class Project extends AppModel {
	var $name = 'Project';
	var $displayField = 'title';
	var $validate = array(
		'title' =&gt; array(
			'notempty' =&gt; array(
				'rule' =&gt; array('notempty'),
				//'message' =&gt; 'Your custom message here',
				//'allowEmpty' =&gt; false,
				//'required' =&gt; false,
				//'last' =&gt; false, // Stop validation after this rule
				//'on' =&gt; 'create', // Limit validation to 'create' or 'update' operations
			),
		),
		'date_presented' =&gt; array(
			'date' =&gt; array(
				'rule' =&gt; array('date'),
				//'message' =&gt; 'Your custom message here',
				'allowEmpty' =&gt; false,
				'required' =&gt; false,
				//'last' =&gt; false, // Stop validation after this rule
				//'on' =&gt; 'create', // Limit validation to 'create' or 'update' operations
			),
		),
		'patent_number' =&gt; array(
			'alphanumeric' =&gt; array(
				'rule' =&gt; array('alphanumeric'),
				//'message' =&gt; 'Your custom message here',
				'allowEmpty' =&gt; true,
				'required' =&gt; false,
				//'last' =&gt; false, // Stop validation after this rule
				//'on' =&gt; 'create', // Limit validation to 'create' or 'update' operations
			),
		),
		'cover' =&gt; array(
			'alphanumeric' =&gt; array(
				'rule' =&gt; array('alphanumeric'),
				//'message' =&gt; 'Your custom message here',
				'allowEmpty' =&gt; true,
				'required' =&gt; false,
				//'last' =&gt; false, // Stop validation after this rule
				//'on' =&gt; 'create', // Limit validation to 'create' or 'update' operations
			),
		),
		'like' =&gt; array(
			'alphanumeric' =&gt; array(
				'rule' =&gt; array('alphanumeric'),
				//'message' =&gt; 'Your custom message here',
				//'allowEmpty' =&gt; false,
				//'required' =&gt; true,
				//'last' =&gt; false, // Stop validation after this rule
				//'on' =&gt; 'create', // Limit validation to 'create' or 'update' operations
			),
		),
	);
	//The Associations below have been created with all possible keys, those that are not needed can be removed

	var $hasMany = array(
		'Participant' =&gt; array(
			'className' =&gt; 'Participant',
</codefragment>
  </duplication>
  <duplication lines="1255" tokens="2880">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Plugin/meio_upload/models/behaviors/meio_upload.php" line="18"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/plugins/meio_upload/models/behaviors/meio_upload.php" line="18"/>
    <codefragment>App::import('Core', array('File', 'Folder'));

/**
 * MeioUpload Behavior
 *
 */
class MeioUploadBehavior extends ModelBehavior {
/**
 * The default options for the behavior
 *
 * @var array
 * @access public
 */
	var $defaultOptions = array(
		'useTable' =&gt; true,
		'createDirectory' =&gt; true,
		'encryptedFolder' =&gt; false,
		'dir' =&gt; 'uploads{DS}{ModelName}{DS}{fieldName}',
		'folderAsField' =&gt; null, // Can be the name of any field in $this-&gt;data
		'uploadName' =&gt; null, // Can also be the tokens {ModelName} or {fieldName}
		'removeOriginal' =&gt; false,
		'maxSize' =&gt; 2097152, // 2MB
		'allowedMime' =&gt; array('image/jpeg', 'image/pjpeg', 'image/png', 'image/gif', 'image/bmp', 'image/x-icon', 'image/vnd.microsoft.icon'),
		'allowedExt' =&gt; array('.jpg', '.jpeg', '.png', '.gif', '.bmp', '.ico'),
		'default' =&gt; false, // Not sure what this does
		'zoomCrop' =&gt; false, // Whether to use ZoomCrop or not with PHPThumb
		'thumbnails' =&gt; true,
		'thumbsizes' =&gt; array(
			// Place any custom thumbsize in model config instead,
		),
		'thumbnailQuality' =&gt; 75, // Global Thumbnail Quality
		'thumbnailDir' =&gt; 'thumb',
		'useImageMagick' =&gt; false,
		'imageMagickPath' =&gt; '/usr/bin/convert', // Path to imageMagick on your server
		'fields' =&gt; array(
			'dir' =&gt; 'dir',
			'filesize' =&gt; 'filesize',
			'mimetype' =&gt; 'mimetype'
		),
		'length' =&gt; array(
			'minWidth' =&gt; 0, // 0 for not validates
			'maxWidth' =&gt; 0,
			'minHeight' =&gt; 0,
			'maxHeight' =&gt; 0
		),
		'validations' =&gt; array()
	);

/**
 * Default validations
 *
 * @var array
 * @access public
 */
	var $defaultValidations = array(
		'FieldName' =&gt; array(
			'rule' =&gt; array('uploadCheckFieldName'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'Dir' =&gt; array(
			'rule' =&gt; array('uploadCheckDir'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'Empty' =&gt; array(
			'rule' =&gt; array('uploadCheckEmpty'),
			'check' =&gt; true,
			'on' =&gt; 'create',
			'last' =&gt; true
		),
		'UploadError' =&gt; array(
			'rule' =&gt; array('uploadCheckUploadError'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'MaxSize' =&gt; array(
			'rule' =&gt; array('uploadCheckMaxSize'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'InvalidMime' =&gt; array(
			'rule' =&gt; array('uploadCheckInvalidMime'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'InvalidExt' =&gt; array(
			'rule' =&gt; array('uploadCheckInvalidExt'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'MinWidth' =&gt; array(
			'rule' =&gt; array('uploadCheckMinWidth'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'MaxWidth' =&gt; array(
			'rule' =&gt; array('uploadCheckMaxWidth'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'MinHeight' =&gt; array(
			'rule' =&gt; array('uploadCheckMinHeight'),
			'check' =&gt; true,
			'last' =&gt; true
		),
		'MaxHeight' =&gt; array(
			'rule' =&gt; array('uploadCheckMaxHeight'),
			'check' =&gt; true,
			'last' =&gt; true
		),
	);

/**
 * The array that saves the $options for the behavior
 *
 * @var array
 * @access private
 */
	var $__fields = array();

/**
 * Patterns of reserved words
 *
 * @var array
 * @access public
 */
	var $patterns = array(
		'thumb',
		'default'
	);

/**
 * Words to replace the patterns of reserved words
 *
 * @var array
 * @access public
 */
	var $replacements = array(
		't_umb',
		'd_fault'
	);

/**
 * Array of files to be removed on the afterSave callback
 *
 * @var array
 * @access private
 */
	var $__filesToRemove = array();

/**
 * Array of all possible images that can be converted to thumbnails
 *
 * @var array
 * @access protected
 */
	var $_imageTypes = array('image/jpeg', 'image/pjpeg', 'image/png', 'image/gif', 'image/bmp', 'image/x-icon', 'image/vnd.microsoft.icon');

/**
 * Constructor
 *
 */
	function __construct() {
		$messages = array(
			'FieldName' =&gt; array(
				'message' =&gt; __d('meio_upload', 'This field has not been defined between the parameters of MeioUploadBehavior.', true)
			),
			'Dir' =&gt; array(
				'message' =&gt; __d('meio_upload', 'The directory where the file would be placed there or is protected against writing.', true)
			),
			'Empty' =&gt; array(
				'message' =&gt; __d('meio_upload', 'The file can not be empty.', true)
			),
			'UploadError' =&gt; array(
				'message' =&gt; __d('meio_upload', 'There were problems in uploading the file.', true)
			),
			'MaxSize' =&gt; array(
				'message' =&gt; __d('meio_upload', 'The maximum file size is exceeded.', true)
			),
			'InvalidMime' =&gt; array(
				'message' =&gt; __d('meio_upload', 'Invalid file type.', true)
			),
			'InvalidExt' =&gt; array(
				'message' =&gt; __d('meio_upload', 'Invalid file extension.', true)
			),
			'MinWidth' =&gt; array(
				'message' =&gt; __d('meio_upload', 'Image width is smaller than minimum allowed.', true)
			),
			'MinHeight' =&gt; array(
				'message' =&gt; __d('meio_upload', 'Image height is smaller than minimum allowed.', true)
			),
			'MaxWidth' =&gt; array(
				'message' =&gt; __d('meio_upload', 'Image width is larger than maximum allowed.', true)
			),
			'MaxHeight' =&gt; array(
				'message' =&gt; __d('meio_upload', 'Image height is larger than maximum allowed.', true)
			)
		);
		$this-&gt;defaultValidations = $this-&gt;_arrayMerge($this-&gt;defaultValidations, $messages);
		$this-&gt;defaultOptions['validations'] = $this-&gt;defaultValidations;
	}

/**
 * Setup the behavior. It stores a reference to the model, merges the default options with the options for each field, and setup the validation rules.
 *
 * @param object $model Reference to model
 * @param array $settings Settings (optional)
 * @return void
 * @access public
 */
	function setup(&amp;$model, $settings = array()) {
		$this-&gt;__fields[$model-&gt;alias] = array();
		foreach ($settings as $field =&gt; $options) {
			// Check if they even PASSED IN parameters
			if (!is_array($options)) {
				// You jerks!
				$field = $options;
				$options = array();
			}

			// Inherit model's lack of table use if not set in options
			// regardless of whether or not we set the table option
			if (!$model-&gt;useTable) {
				$options['useTable'] = false;
			}

			// Merge given options with defaults
			$options = $this-&gt;_arrayMerge($this-&gt;defaultOptions, $options);

			// Check if given field exists
			if ($options['useTable'] &amp;&amp; !$model-&gt;hasField($field)) {
				trigger_error(sprintf(__d('meio_upload', 'MeioUploadBehavior Error: The field "%s" doesn\'t exists in the model "%s".', true), $field, $model-&gt;alias), E_USER_WARNING);
			}

			// Including the default name to the replacements
			if ($options['default']) {
				if (strpos($options['default'], '.') === false) {
					trigger_error(__d('meio_upload', 'MeioUploadBehavior Error: The default option must be the filename with extension.', true), E_USER_ERROR);
				}
				$this-&gt;_includeDefaultReplacement($options['default']);
			}

			// Verifies if the thumbsizes names is alphanumeric
			if ($options['thumbnails'] == true) {
				foreach ($options['thumbsizes'] as $name =&gt; $size) {
					if (empty($name) || !ctype_alnum($name)) {
						trigger_error(__d('meio_upload', 'MeioUploadBehavior Error: The thumbsizes names must be alphanumeric.', true), E_USER_ERROR);
					}
				}
			}

			// Process the max_size if it is not numeric
			$options['maxSize'] = $this-&gt;_sizeToBytes($options['maxSize']);

			// Replace tokens of the dir and field, check it doesn't have a DS on the end
			$tokens = array('{ModelName}', '{fieldName}', '{DS}', '/', '\\');
			$options['dir'] = rtrim($this-&gt;_replaceTokens($model, $options['dir'], $field, $tokens), DS);
			$options['uploadName'] = rtrim($this-&gt;_replaceTokens($model, $options['uploadName'], $field, $tokens), DS);

			// Create the folders for the uploads only if you want
			if($options['createDirectory']) {
				// Create the folders for the uploads
				if (!empty($options['thumbsizes'])) {
					$this-&gt;_createFolders($options['dir'], $options['thumbnailDir'], array_keys($options['thumbsizes']));
				} else {
					$this-&gt;_createFolders($options['dir'], $options['thumbnailDir'], array());
				}
			}

			// Replace tokens in the fields names
			if ($options['useTable']) {
				foreach ($options['fields'] as $fieldToken =&gt; $fieldName) {
					$options['fields'][$fieldToken] = $this-&gt;_replaceTokens($model, $fieldName, $field, $tokens);
				}
			}
			$this-&gt;__fields[$model-&gt;alias][$field] = $options;
		}
	}

/**
 * Sets the validation rules for each field.
 *
 * @param object $model Reference to model
 * @return boolean Always true
 * @access public
 */
	function beforeValidate(&amp;$model) {
		foreach ($this-&gt;__fields[$model-&gt;alias] as $fieldName =&gt; $options) {
			$this-&gt;_setupValidation($model, $fieldName, $options);
		}
		return true;
	}

/**
 * Initializes the upload
 *
 * @param object $model Reference to model
 * @return boolean Whether the upload completed
 * @access public
 */
	function beforeSave(&amp;$model) {
		return $this-&gt;upload($model, null);
	}

/**
 * Deletes the files marked to be deleted in the save method.
 * A file can be marked to be deleted if it is overwriten by
 * another or if the user mark it to be deleted.
 *
 * @param object $model Reference to model
 * @return void
 * @access protected
 */
	function _deleteFilesList(&amp;$model) {
		foreach ($this-&gt;__filesToRemove as $file) {
			if (!empty($file['name'])) {
				$this-&gt;_deleteFiles($model, $file['field'], $file['name'], $file['dir']);
			}
		}
		// Reset the filesToRemove array
		$this-&gt;__filesToRemove = array();
	}

/**
 * After save (callback)
 *
 * @param object $model Reference to model
 * @return void
 * @access public
 */
	function afterSave(&amp;$model) {
		$this-&gt;_deleteFilesList($model);
	}

/**
 * After delete (callback)
 *
 * @param object $model Reference to model
 * @return void
 * @access public
 */
	function afterDelete(&amp;$model) {
		$this-&gt;_deleteFilesList($model);
	}
/**
 * Performs a manual upload
 *
 * @param object $model Reference to model
 * @param array $data Array data to be saved
 * @return boolean Whether the upload completed
 * @access public
 */
	function upload(&amp;$model, $data) {
		$result = $this-&gt;_uploadFile($model, $data);
		if (is_bool($result)) {
			return $result;
		} elseif (is_array($result)) {
			if ($result['return'] === false) {
				// Upload failed, lets see why
				switch($result['reason']) {
					case 'validation':
						$model-&gt;validationErrors[$result['extra']['field']] = $result['extra']['error'];
						break;
				}
				return false;
			} else {
				$this-&gt;data = $result['data'];
				return true;
			}
		} else {
			return false;
		}
	}

/**
 * Deletes all files associated with the record beforing delete it.
 *
 * @param object $model Reference to model
 * @return boolean Always true
 * @access public
 */
	function beforeDelete(&amp;$model) {
		$model-&gt;read(null, $model-&gt;id);
		if (isset($model-&gt;data)) {
			foreach ($this-&gt;__fields[$model-&gt;alias] as $field =&gt; $options) {
				$this-&gt;_setFileToRemove($model, $field, $options['thumbnailDir']);
			}
		}
		return true;
	}

/**
 * Checks if the field was declared in the MeioUpload Behavior setup
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckFieldName(&amp;$model, $data) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName]['FieldName']['check']) {
				continue;
			}
			if (isset($this-&gt;__fields[$model-&gt;alias][$fieldName])) {
				continue;
			} else {
				$this-&gt;log(sprintf(__d('meio_upload', 'MeioUploadBehavior Error: The field "%s" wasn\'t declared as part of the MeioUploadBehavior in model "%s".', true), $fieldName, $model-&gt;alias));
				return false;
			}
		}
		return true;
	}

/**
 * Checks if the folder exists or can be created or writable.
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckDir(&amp;$model, $data) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName]['Dir']['check']) {
				continue;
			}
			$options = $this-&gt;__fields[$model-&gt;alias][$fieldName];
			if (empty($field['remove']) || empty($field['name'])) {
				// Check if directory exists and create it if required
				if (!is_dir($options['dir'])) {
					if ($options['createDirectory']) {
						$folder = &amp;new Folder();
						if (!$folder-&gt;create($options['dir'])) {
							trigger_error(sprintf(__d('meio_upload', 'MeioUploadBehavior Error: The directory %s does not exist and cannot be created.', true), $options['dir']), E_USER_WARNING);
							return false;
						}
					} else {
						trigger_error(sprintf(__d('meio_upload', 'MeioUploadBehavior Error: The directory %s does not exist.', true), $options['dir']), E_USER_WARNING);
						return false;
					}
				}

				// Check if directory is writable
				if (!is_writable($options['dir'])) {
					trigger_error(sprintf(__d('meio_upload', 'MeioUploadBehavior Error: The directory %s isn\'t writable.', true), $options['dir']), E_USER_WARNING);
					return false;
				}
			}
		}
		return true;
	}

/**
 * Checks if the filename is not empty.
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckEmpty(&amp;$model, $data) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName]['Empty']['check']) {
				continue;
			}
			if (empty($field['remove'])) {
				if (!is_array($field) || empty($field['name'])) {
					return false;
				}
			}
		}
		return true;
	}

/**
 * Checks if ocurred erros in the upload.
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckUploadError(&amp;$model, $data) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName]['UploadError']['check']) {
				continue;
			}
			if (!empty($field['name']) &amp;&amp; $field['error'] &gt; 0) {
				return false;
			}
		}
		return true;
	}

/**
 * Checks if the file isn't bigger then the max file size option.
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckMaxSize(&amp;$model, $data) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName]['MaxSize']['check']) {
				continue;
			}
			$options = $this-&gt;__fields[$model-&gt;alias][$fieldName];
			if (!empty($field['name']) &amp;&amp; $field['size'] &gt; $options['maxSize']) {
				return false;
			}
		}
		return true;
	}

/**
 * Checks if the file is of an allowed mime-type.
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckInvalidMime(&amp;$model, $data) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName]['InvalidMime']['check']) {
				continue;
			}
			$options = $this-&gt;__fields[$model-&gt;alias][$fieldName];
			if (!empty($field['name']) &amp;&amp; count($options['allowedMime']) &gt; 0 &amp;&amp; !in_array($field['type'], $options['allowedMime'])) {
				$info = @getimagesize($field['tmp_name']);
				if ($info !== false &amp;&amp; in_array($info['mime'], $options['allowedMime'])) {
					continue;
				}
				if (function_exists('finfo_open')) {
					$finfo = finfo_open(FILEINFO_MIME_TYPE);
					$info = finfo_file($finfo, $field['tmp_name']);
					if ($info !== false &amp;&amp; in_array($info, $options['allowedMime'])) {
						continue;
					}
				}
				if (function_exists('mime_content_type')) { // @deprecated
					$info = mime_content_type($field['tmp_name']);
					if ($info !== false &amp;&amp; in_array($info, $options['allowedMime'])) {
						continue;
					}
				}
				return false;
			}
		}
		return true;
	}

/**
 * Checks if the file has an allowed extension.
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckInvalidExt(&amp;$model, $data) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName]['InvalidExt']['check']) {
				continue;
			}
			$options = $this-&gt;__fields[$model-&gt;alias][$fieldName];
			if (!empty($field['name'])) {
				if (count($options['allowedExt']) &gt; 0) {
					$matches = 0;
					foreach ($options['allowedExt'] as $extension) {
						if (strtolower(substr($field['name'], -strlen($extension))) == strtolower($extension)) {
							$matches++;
						}
					}

					if ($matches == 0) {
						return false;
					}
				}
			}
		}
		return true;
	}

/**
 * Checks if the min width is allowed
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckMinWidth(&amp;$model, $data) {
		return $this-&gt;_uploadCheckSize($model, $data, 'minWidth');
	}

/**
 * Checks if the max width is allowed
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckMaxWidth(&amp;$model, $data) {
		return $this-&gt;_uploadCheckSize($model, $data, 'maxWidth');
	}

/**
 * Checks if the min height is allowed
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckMinHeight(&amp;$model, $data) {
		return $this-&gt;_uploadCheckSize($model, $data, 'minHeight');
	}

/**
 * Checks if the max height is allowed
 *
 * @param object $model Reference to model
 * @param array $data
 * @return boolean
 * @access public
 */
	function uploadCheckMaxHeight(&amp;$model, $data) {
		return $this-&gt;_uploadCheckSize($model, $data, 'maxHeight');
	}

/**
 * Check generic to size of image
 *
 * @param object $model Reference to model
 * @param array $data Reference to data
 * @param string $type Type of check: minHeight, minWidth, maxHeight, maxWidth
 * @return boolean
 * @access protected
 */
	function _uploadCheckSize(&amp;$model, &amp;$data, $type) {
		foreach ($data as $fieldName =&gt; $field) {
			if (!$model-&gt;validate[$fieldName][ucfirst($type)]['check'] || empty($field['tmp_name'])) {
				continue;
			}
			$options = $this-&gt;__fields[$model-&gt;alias][$fieldName];
			list($imgWidth, $imgHeight) = getimagesize($field['tmp_name']);
			$imgType = 'img' . substr($type, 3);
			if (substr($type, 0, 3) === 'min') {
				if (!empty($field['name']) &amp;&amp; $options['length'][$type] &gt; 0 &amp;&amp; $$imgType &lt; $options['length'][$type]) {
					return false;
				}
			} else {
				if (!empty($field['name']) &amp;&amp; $options['length'][$type] &gt; 0 &amp;&amp; $$imgType &gt; $options['length'][$type]) {
					return false;
				}
			}
		}
		return true;
	}

/**
 * Uploads the files
 *
 * @param object $model Reference to model
 * @param array $data Optional Containing data to be saved
 * @return mixed
 * @access protected
 */
	function _uploadFile(&amp;$model, $data = null) {
		if (!isset($data) || !is_array($data)) {
			$data =&amp; $model-&gt;data;
		}
		foreach ($this-&gt;__fields[$model-&gt;alias] as $fieldName =&gt; $options) {
			// Take care of removal flagged field
			// However, this seems to be kind of code duplicating, see line ~711
			if (!empty($data[$model-&gt;alias][$fieldName]['remove'])) {
				$this-&gt;_markForDeletion($model, $fieldName, $data, $options['default'], $options['thumbnailDir']);
				$data = $this-&gt;_nullifyDataFields($model, $fieldName, $data, $options);
				$result = array('return' =&gt; true, 'data' =&gt; $data);
				continue;
			}
			// If no file was selected we do not need to proceed
			if (empty($data[$model-&gt;alias][$fieldName]['name'])) {
				unset($data[$model-&gt;alias][$fieldName]);
				$result = array('return' =&gt; true, 'data' =&gt; $data);
				continue;
			}
			$pos = strrpos($data[$model-&gt;alias][$fieldName]['type'], '/');
			$sub = substr($data[$model-&gt;alias][$fieldName]['type'], $pos+1);
			list(,$ext) = $this-&gt;_splitFilenameAndExt($data[$model-&gt;alias][$fieldName]['name']);

			// Put in a subfolder if the user wishes it
			if (isset($options['folderAsField']) &amp;&amp; !empty($options['folderAsField']) &amp;&amp; is_string($options['folderAsField'])) {
				$options['dir'] = $options['dir'] . DS . $data[$model-&gt;alias][$options['folderAsField']];
				$this-&gt;__fields[$model-&gt;alias][$fieldName]['dir'] = $options['dir'];
			}

			// Check whether or not the behavior is in useTable mode
			if ($options['useTable'] == false) {
				$this-&gt;_includeDefaultReplacement($options['default']);
				$this-&gt;_fixName($model, $fieldName, false);
				$saveAs = $options['dir'] . DS . $data[$model-&gt;alias][$options['uploadName']] . '.' . $sub;

				// Attempt to move uploaded file
				$copyResults = $this-&gt;_copyFileFromTemp($data[$model-&gt;alias][$fieldName]['tmp_name'], $saveAs);
				if ($copyResults !== true) {
					$result = array('return' =&gt; false, 'reason' =&gt; 'validation', 'extra' =&gt; array('field' =&gt; $fieldName, 'error' =&gt; $copyResults));
					continue;
				}

				// If the file is an image, try to make the thumbnails
				if ((count($options['thumbsizes']) &gt; 0) &amp;&amp; count($options['allowedExt']) &gt; 0 &amp;&amp; in_array($data[$model-&gt;alias][$fieldName]['type'], $this-&gt;_imageTypes)) {
					$this-&gt;_createThumbnails($model, $data, $fieldName, $saveAs, $ext, $options);
				}
				if ($options['removeOriginal']) {
					$this-&gt;_removeOriginal($saveAs);
				}

				$data = $this-&gt;_unsetDataFields($model-&gt;alias, $fieldName, $model-&gt;data, $options);
				$result = array('return' =&gt; true, 'data' =&gt; $data);
				continue;
			} else {
				// if the file is marked to be deleted, use the default or set the field to null
				if (!empty($data[$model-&gt;alias][$fieldName]['remove'])) {
					if ($options['default']) {
						$data[$model-&gt;alias][$fieldName] = $options['default'];
					} else {
						$data[$model-&gt;alias][$fieldName] = null;
					}
					//if the record is already saved in the database, set the existing file to be removed after the save is sucessfull
					if (!empty($data[$model-&gt;alias][$model-&gt;primaryKey])) {
						$this-&gt;_setFileToRemove($model, $fieldName, $options['thumbnailDir']);
					}
				}

				// If no file has been upload, then unset the field to avoid overwriting existant file
				if (!isset($data[$model-&gt;alias][$fieldName]) || !is_array($data[$model-&gt;alias][$fieldName]) || empty($data[$model-&gt;alias][$fieldName]['name'])) {
					if (!empty($data[$model-&gt;alias][$model-&gt;primaryKey]) || !$options['default']) {
						unset($data[$model-&gt;alias][$fieldName]);
					} else {
						$data[$model-&gt;alias][$fieldName] = $options['default'];
					}
				}

				//if the record is already saved in the database, set the existing file to be removed after the save is sucessfull
				if (!empty($data[$model-&gt;alias][$model-&gt;primaryKey])) {
					$this-&gt;_setFileToRemove($model, $fieldName, $options['thumbnailDir']);
				}

				// save in encrypted folder if specified
				if ($options['encryptedFolder']) {
					// setup UUID as a unique folder name
					$options['dir'] .= DS . String::uuid();
				}

				// Fix the filename, removing bad characters and avoiding from overwriting existing ones
				if ($options['default'] == true) {
					$this-&gt;_includeDefaultReplacement($options['default']);
				}
				$this-&gt;_fixName($model, $fieldName);
				// Also save the original image as uploadName if that option is not empty
				if (isset($options['uploadName']) &amp;&amp; !empty($options['uploadName'])) {
					$saveAs = $options['dir'] . DS . $data[$model-&gt;alias][$options['uploadName']].'.'.$ext;
				} else {
					$saveAs = $options['dir'] . DS . $data[$model-&gt;alias][$fieldName]['name'];
				}

				// Attempt to move uploaded file
				$copyResults = $this-&gt;_copyFileFromTemp($data[$model-&gt;alias][$fieldName]['tmp_name'], $saveAs);
				if ($copyResults !== true) {
					$result = array('return' =&gt; false, 'reason' =&gt; 'validation', 'extra' =&gt; array('field' =&gt; $fieldName, 'error' =&gt; $copyResults));
					continue;
				}

				// If the file is an image, try to make the thumbnails
				if ((count($options['thumbsizes']) &gt; 0) &amp;&amp; count($options['allowedExt']) &gt; 0 &amp;&amp; in_array($data[$model-&gt;alias][$fieldName]['type'], $this-&gt;_imageTypes)) {
					$this-&gt;_createThumbnails($model, $data, $fieldName, $saveAs, $ext, $options);
				}

				// Update model data
				$data[$model-&gt;alias][$options['fields']['dir']] = $options['dir'];
				$data[$model-&gt;alias][$options['fields']['mimetype']] = $data[$model-&gt;alias][$fieldName]['type'];
				$data[$model-&gt;alias][$options['fields']['filesize']] = $data[$model-&gt;alias][$fieldName]['size'];
				if (isset($options['uploadName']) &amp;&amp; !empty($options['uploadName'])) {
					$data[$model-&gt;alias][$fieldName] = $data[$model-&gt;alias][$options['uploadName']].'.'.$ext;
				} else {
					$data[$model-&gt;alias][$fieldName] = $data[$model-&gt;alias][$fieldName]['name'];
				}
				$result = array('return' =&gt; true, 'data' =&gt; $data);
				continue;
			}
		}
		if (isset($result)) {
			return $result;
		} else {
			return true;
		}
	}

/**
 * Create all the thumbnails
 *
 * @param object $model Reference to model
 * @param array $data
 * @param string $fieldName
 * @param string $ext
 * @param array $options
 * @return void
 * @access protected
 */
	function _createThumbnails(&amp;$model, $data, $fieldName, $saveAs, $ext, $options) {
		foreach ($options['thumbsizes'] as $key =&gt; $value) {
			// Generate the name for the thumbnail
			if (isset($options['uploadName']) &amp;&amp; !empty($options['uploadName'])) {
				$thumbSaveAs = $this-&gt;_getThumbnailName($saveAs, $options['dir'], $options['thumbnailDir'], $key, $data[$model-&gt;alias][$options['uploadName']], $ext);
			} else {
				$thumbSaveAs = $this-&gt;_getThumbnailName($saveAs, $options['dir'], $options['thumbnailDir'], $key, $data[$model-&gt;alias][$fieldName]['name']);
			}
			$params = array();
			if (isset($value['width'])) {
				$params['thumbWidth'] = $value['width'];
			}
			if (isset($value['height'])) {
				$params['thumbHeight'] = $value['height'];
			}
			if (isset($value['maxDimension'])) {
				$params['maxDimension'] = $value['maxDimension'];
			}
			if (isset($value['thumbnailQuality'])) {
				$params['thumbnailQuality'] = $value['thumbnailQuality'];
			}
			if (isset($value['zoomCrop'])) {
				$params['zoomCrop'] = $value['zoomCrop'];
			}
			if (isset($value['watermark'])) {
				$params['watermark'] = $value['watermark'];
			}
			$this-&gt;_createThumbnail($model, $saveAs, $thumbSaveAs, $fieldName, $params);
		}
	}

/**
 * Function to create Thumbnail images
 *
 * @param object $model Reference to model
 * @param string $source File name (without path)
 * @param string $target File name (without path)
 * @param string $fieldName
 * @param array $params
 * @return void
 * @access protected
 */
	function _createThumbnail(&amp;$model, $source, $target, $fieldName, $params = array()) {
		$params = array_merge(
			array(
				'thumbWidth' =&gt; 150,
				'thumbHeight' =&gt; 225,
				'maxDimension' =&gt; '',
				'thumbnailQuality' =&gt; $this-&gt;__fields[$model-&gt;alias][$fieldName]['thumbnailQuality'],
				'zoomCrop' =&gt; false
			),
			$params);

		// Import phpThumb class
		App::import('Vendor','phpthumb', array('file' =&gt; 'phpThumb'.DS.'phpthumb.class.php'));

		// Configuring thumbnail settings
		$phpThumb = new phpthumb;
		$phpThumb-&gt;setSourceFilename($source);

		if ($params['maxDimension'] == 'w') {
			$phpThumb-&gt;w = $params['thumbWidth'];
		} else if ($params['maxDimension'] == 'h') {
			$phpThumb-&gt;h = $params['thumbHeight'];
		} else {
			$phpThumb-&gt;w = $params['thumbWidth'];
			$phpThumb-&gt;h = $params['thumbHeight'];
		}

		$phpThumb-&gt;setParameter('zc', $this-&gt;__fields[$model-&gt;alias][$fieldName]['zoomCrop']);
		if (isset($params['zoomCrop'])){
			$phpThumb-&gt;setParameter('zc', $params['zoomCrop']);
		}
		if (isset($params['watermark'])){
			$phpThumb-&gt;fltr = array("wmi|". IMAGES . $params['watermark']."|BR|50|5");
		}
		$phpThumb-&gt;q = $params['thumbnailQuality'];

		$imageArray = explode(".", $source);
		$phpThumb-&gt;config_output_format = $imageArray[1];
		unset($imageArray);

		$phpThumb-&gt;config_prefer_imagemagick = $this-&gt;__fields[$model-&gt;alias][$fieldName]['useImageMagick'];
		$phpThumb-&gt;config_imagemagick_path = $this-&gt;__fields[$model-&gt;alias][$fieldName]['imageMagickPath'];

		// Setting whether to die upon error
		$phpThumb-&gt;config_error_die_on_error = true;
		// Creating thumbnail
		if ($phpThumb-&gt;GenerateThumbnail()) {
			if (!$phpThumb-&gt;RenderToFile($target)) {
				$this-&gt;_addError('Could not render image to: '.$target);
			}
		}
	}

/**
 * Merges two arrays recursively
 *
 * These values will remain intact even if the passed options were shorter.
 * Solved that with array_splice to keep intact the previous indexes (already merged)
 *
 * @param array $arr
 * @param array $ins
 * @return array
 * @access protected
 */
	function _arrayMerge($arr, $ins) {
		if (is_array($arr)) {
			if (is_array($ins)) {
				foreach ($ins as $k =&gt; $v) {
					if (isset($arr[$k]) &amp;&amp; is_array($v) &amp;&amp; is_array($arr[$k])) {
						$arr[$k] = $this-&gt;_arrayMerge($arr[$k], $v);
					} elseif (is_numeric($k)) {
						array_splice($arr, $k, count($arr));
						$arr[$k] = $v;
					} else {
						$arr[$k] = $v;
					}
				}
			}
		} elseif (!is_array($arr) &amp;&amp; (strlen($arr) == 0 || $arr == 0)) {
			$arr = $ins;
		}
		return $arr;
	}

/**
 * Replaces some tokens. {ModelName} to the underscore version of the model name
 * {fieldName} to the field name, {DS}. / or \ to DS constant value.
 *
 * @param object $model Reference to model
 * @param string $string
 * @param string $fieldName
 * @param array $tokens
 * @return string
 * @access protected
 */
	function _replaceTokens(&amp;$model, $string, $fieldName, $tokens = array()) {
		return str_replace(
			$tokens,
			array(Inflector::underscore($model-&gt;name), $fieldName, DS, DS, DS),
			$string
		);
	}

/**
 * Removes the bad characters from the $filename and replace reserved words. It updates the $model-&gt;data.
 *
 * @param object $model Reference to model
 * @param string $fieldName
 * @param boolean $checkFile
 * @return void
 * @access protected
 */
	function _fixName(&amp;$model, $fieldName, $checkFile = true) {
		// updates the filename removing the keywords thumb and default name for the field.
		list ($filename, $ext) = $this-&gt;_splitFilenameAndExt($model-&gt;data[$model-&gt;alias][$fieldName]['name']);
		$filename = str_replace($this-&gt;patterns, $this-&gt;replacements, $filename);
		$filename = Inflector::slug($filename);
		$i = 0;
		$newFilename = $filename;
		if ($checkFile) {
			while (file_exists($this-&gt;__fields[$model-&gt;alias][$fieldName]['dir'] . DS . $newFilename . '.' . $ext)) {
				$newFilename = $filename . '-' . $i++;
			}
		}
		$model-&gt;data[$model-&gt;alias][$fieldName]['name'] = $newFilename . '.' . $ext;
	}

/**
 * Include a pattern of reserved word based on a filename, and it's replacement.
 *
 * @param string $default
 * @return void
 * @access protected
 */
	function _includeDefaultReplacement($default) {
		$replacements = $this-&gt;replacements;
		list ($newPattern, $ext) = $this-&gt;_splitFilenameAndExt($default);
		if (!in_array($newPattern, $this-&gt;patterns)) {
			$this-&gt;patterns[] = $newPattern;
			$newReplacement = $newPattern;
			if (isset($newReplacement[1])) {
				if ($newReplacement[1] != '_') {
					$newReplacement[1] = '_';
				} else {
					$newReplacement[1] = 'a';
				}
			} elseif ($newReplacement != '_') {
				$newReplacement = '_';
			} else {
				$newReplacement = 'a';
			}
			$this-&gt;replacements[] = $newReplacement;
		}
	}

/**
 * Splits a filename in two parts: the name and the extension. Returns an array with it respectively.
 *
 * @param string $filename
 * @return array
 * @access protected
 */
	function _splitFilenameAndExt($filename) {
		extract(pathinfo($filename));
		if (!isset($filename)) {
			$filename = substr($basename, 0, -1 - count($extension)); // Remove extension and .
		}
		return array($filename, $extension);
	}

/**
 * Generate the name for the thumbnail
 * If a 'normal' thumbnail is set, then it will overwrite the original file
 *
 * @param string $saveAs name for original file
 * @param string $dir directory for all uploads
 * @param string $thumbDir Path to thumbnails
 * @param string $key thumbnail size
 * @param string $fieldToSaveAs field in model to save as
 * @param string $sub substring to append to directory for naming
 * @return string
 * @access protected
 */
	function _getThumbnailName($saveAs, $dir, $thumbDir, $key, $fieldToSaveAs, $sub = null) {
		if ($key == 'normal') {
			return $saveAs;
		}
		// Otherwise, set the thumb filename to thumb.$key.$filename.$ext
		$result = $dir . DS . $thumbDir . DS . $key . DS . $fieldToSaveAs;
		if (isset($sub)) {
			return $result . '.' . $sub;
		}
		return $result;
	}

/**
 * Convert a size value to bytes. For example: 2 MB to 2097152.
 *
 * @param string $size
 * @return integer
 * @access protected
 */
	function _sizeToBytes($size) {
		if (is_numeric($size)) {
			return $size;
		}
		if (!preg_match('/^([1-9][0-9]*) (kb|mb|gb|tb)$/i', $size, $matches)) {
			trigger_error(__d('meio_upload', 'MeioUploadBehavior Error: The max_size option format is invalid.', true), E_USER_ERROR);
			return 0;
		}
		switch (strtolower($matches[2])) {
			case 'kb':
				return $matches[1] * 1024;
			case'mb':
				return $matches[1] * 1048576;
			case 'gb':
				return $matches[1] * 1073741824;
			case 'tb':
				return $matches[1] * 1099511627776;
			default:
				trigger_error(__d('meio_upload', 'MeioUploadBehavior Error: The max_size unit is invalid.', true), E_USER_ERROR);
		}
		return 0;
	}

/**
 * Sets the validation for each field, based on the options.
 *
 * @param object $model Reference to model
 * @param string $fieldName
 * @param array $options
 * @return void
 * @access protected
 */
	function _setupValidation(&amp;$model, $fieldName, $options) {
		$options = $this-&gt;__fields[$model-&gt;alias][$fieldName];

		if (isset($model-&gt;validate[$fieldName])) {
			if (isset($model-&gt;validate[$fieldName]['rule'])) {
				$model-&gt;validate[$fieldName] = array(
					'oldValidation' =&gt; $model-&gt;validates[$fieldName]
				);
			}
		} else {
			$model-&gt;validate[$fieldName] = array();
		}
		$model-&gt;validate[$fieldName] = $this-&gt;_arrayMerge($this-&gt;defaultValidations, $model-&gt;validate[$fieldName]);
		$model-&gt;validate[$fieldName] = $this-&gt;_arrayMerge($options['validations'], $model-&gt;validate[$fieldName]);
	}


/**
 * Creates thumbnail folders if they do not already exist
 *
 * @param string $dir Path to uploads
 * @param string $thumbDir Path to thumbnails
 * @param array $thumbsizes
 * @return void
 * @access protected
 */
	function _createFolders($dir, $thumbDir, $thumbsizes) {
		if ($dir[0] !== '/') {
			$dir = WWW_ROOT . $dir;
		}
		$folder = new Folder();

		if (!$folder-&gt;cd($dir)) {
			$folder-&gt;create($dir);
		}
		if (!$folder-&gt;cd($dir. DS . $thumbDir)) {
			$folder-&gt;create($dir . DS . $thumbDir);
		}
		foreach ($thumbsizes as $thumbsize) {
			if ($thumbsize != 'normal' &amp;&amp; !$folder-&gt;cd($dir . DS . $thumbDir . DS . $thumbsize)) {
				$folder-&gt;create($dir . DS . $thumbDir . DS . $thumbsize);
			}
		}
	}

/**
 * Copies file from temporary directory to final destination
 *
 * @param string $tmpName full path to temporary file
 * @param string $saveAs full path to move the file to
 * @return mixed true is successful, error message if not
 * @access protected
 */
	function _copyFileFromTemp($tmpName, $saveAs) {
		$results = true;
		if (!is_uploaded_file($tmpName)) {
			return false;
		}
		$file = new File($tmpName, $saveAs);
		$temp = new File($saveAs, true);
		if (!$temp-&gt;write($file-&gt;read())) {
			$results = __d('meio_upload', 'Problems in the copy of the file.', true);
		}
		$file-&gt;close();
		$temp-&gt;close();
		return $results;
	}

/**
 * Set a file to be removed in afterSave() callback
 *
 * @param object $model Reference to model
 * @param sting $fieldName
 * @param string $thumbDir Path to thumbnails
 * @return void
 * @access protected
 */
	function _setFileToRemove(&amp;$model, $fieldName, $thumbDir) {
		$filename = $model-&gt;field($fieldName);
		if (!empty($filename) &amp;&amp; $filename != $this-&gt;__fields[$model-&gt;alias][$fieldName]['default']) {
			$this-&gt;__filesToRemove[] = array(
				'field' =&gt; $fieldName,
				'dir' =&gt; $this-&gt;__fields[$model-&gt;alias][$fieldName]['dir'],
				'name' =&gt; $filename
			);
			if ($this-&gt;__fields[$model-&gt;alias][$fieldName]['thumbnails'] &amp;&amp; !empty($this-&gt;__fields[$model-&gt;alias][$fieldName]['thumbsizes'])) {
				foreach($this-&gt;__fields[$model-&gt;alias][$fieldName]['thumbsizes'] as $key =&gt; $sizes){
					if ($key === 'normal') {
						$subpath = '';
					} else {
						$subpath = DS . $thumbDir . DS . $key;
					}
					$this-&gt;__filesToRemove[] = array(
						'field' =&gt; $fieldName,
						'dir' =&gt; $this-&gt;__fields[$model-&gt;alias][$fieldName]['dir'] . $subpath,
						'name' =&gt; $filename
					);
				}
			}
		}
	}

/**
 * Marks files for deletion in the beforeSave() callback
 *
 * @param object $model Reference to model
 * @param string $fieldName name of field that holds a reference to the file
 * @param array $data
 * @param strng $default
 * @param string $thumbDir Thumb directory
 * @return void
 * @access protected
 */
	function _markForDeletion(&amp;$model, $fieldName, $data, $default, $thumbDir) {
		if (!empty($data[$model-&gt;alias][$fieldName]['remove'])) {
			if ($default) {
				$data[$model-&gt;alias][$fieldName] = $default;
			} else {
				$data[$model-&gt;alias][$fieldName] = '';
			}
			//if the record is already saved in the database, set the existing file to be removed after the save is sucessfull
			if (!empty($data[$model-&gt;alias][$model-&gt;primaryKey])) {
				$this-&gt;_setFileToRemove($model, $fieldName, $thumbDir);
			}
		}
	}

/**
 * Delete the $filename inside the $dir and the thumbnails.
 * Returns true if the file is deleted and false otherwise.
 *
 * @param object $model Reference to model
 * @param string $field
 * @param string $filename
 * @param stirng $dir
 * @return boolean
 * @access protected
 */
	function _deleteFiles(&amp;$model, $field, $filename, $dir) {
		$saveAs = $dir . DS . $filename;
		if (is_file($saveAs) &amp;&amp; !unlink($saveAs)) {
			return false;
		}
		if ($this-&gt;__fields[$model-&gt;alias][$field]['thumbnails'] &amp;&amp; !empty($this-&gt;__fields[$model-&gt;alias][$field]['thumbsizes'])) {
			$sizes = array_keys($this-&gt;__fields[$model-&gt;alias][$field]['thumbsizes']);
			foreach ($sizes as $size) {
				$file =&amp; new File($dir . DS . $size . DS . $filename);
				$file-&gt;delete();
			}
		}
		return true;
	}

/**
 * Remove original file
 *
 * @param string $saveAs
 * @return boolean
 */
	function _removeOriginal($saveAs) {
		if (is_file($saveAs) &amp;&amp; unlink($saveAs)) {
			return true;
		}
		return false;
</codefragment>
  </duplication>
  <duplication lines="6" tokens="43">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Test/fixtures/mpd_class_fixture.php" line="5"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/tests/fixtures/mpd_class_fixture.php" line="5"/>
    <codefragment>class MpdClassFixture extends CakeTestFixture {
	var $name = 'MpdClass';

	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
		'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 20, 'key' =&gt; 'unique', 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
</codefragment>
  </duplication>
  <duplication lines="9" tokens="94">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Test/fixtures/participant_fixture.php" line="5"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/tests/fixtures/participant_fixture.php" line="5"/>
    <codefragment>class ParticipantFixture extends CakeTestFixture {
	var $name = 'Participant';

	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
		'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 100, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
		'email' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 100, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
		'company' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 40, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
		'project_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'index'),
</codefragment>
  </duplication>
  <duplication lines="6" tokens="46">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Test/fixtures/picture_fixture.php" line="5"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/tests/fixtures/picture_fixture.php" line="5"/>
    <codefragment>class PictureFixture extends CakeTestFixture {
	var $name = 'Picture';

	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
		'filename' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 50, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
</codefragment>
  </duplication>
  <duplication lines="9" tokens="100">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Test/fixtures/project_fixture.php" line="5"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/tests/fixtures/project_fixture.php" line="5"/>
    <codefragment>class ProjectFixture extends CakeTestFixture {
	var $name = 'Project';

	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
		'title' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 60, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
		'description' =&gt; array('type' =&gt; 'text', 'null' =&gt; true, 'default' =&gt; NULL, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
		'mpd_class' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 20, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
		'date_presented' =&gt; array('type' =&gt; 'date', 'null' =&gt; true, 'default' =&gt; NULL),
</codefragment>
  </duplication>
  <duplication lines="7" tokens="67">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Test/fixtures/user_fixture.php" line="5"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/tests/fixtures/user_fixture.php" line="5"/>
    <codefragment>class UserFixture extends CakeTestFixture {
	var $name = 'User';

	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'key' =&gt; 'primary'),
		'username' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 50, 'key' =&gt; 'unique', 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
		'password' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 40, 'collate' =&gt; 'latin1_swedish_ci', 'charset' =&gt; 'latin1'),
</codefragment>
  </duplication>
  <duplication lines="28" tokens="26">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/webroot/index.php" line="25"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/webroot/test.php" line="25"/>
    <codefragment>	if (!defined('DS')) {
		define('DS', DIRECTORY_SEPARATOR);
	}
/**
 * These defines should only be edited if you have cake installed in
 * a directory layout other than the way it is distributed.
 * When using custom settings be sure to use the DS and do not add a trailing DS.
 */

/**
 * The full path to the directory which holds "app", WITHOUT a trailing DS.
 *
 */
	if (!defined('ROOT')) {
		define('ROOT', dirname(dirname(dirname(__FILE__))));
	}
/**
 * The actual directory name for the "app".
 *
 */
	if (!defined('APP_DIR')) {
		define('APP_DIR', basename(dirname(dirname(__FILE__))));
	}
/**
 * The absolute path to the "cake" directory, WITHOUT a trailing DS.
 *
 */
	if (!defined('CAKE_CORE_INCLUDE_PATH')) {
</codefragment>
  </duplication>
  <duplication lines="38" tokens="303">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Config/Schema/db_acl.php" line="29"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/console/templates/skel/config/schema/db_acl.php" line="31"/>
    <codefragment>class DbAclSchema extends CakeSchema {

	var $name = 'DbAcl';

	function before($event = array()) {
		return true;
	}

	function after($event = array()) {
	}

	var $acos = array(
			'id' =&gt; array('type'=&gt;'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
			'parent_id' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'model' =&gt; array('type'=&gt;'string', 'null' =&gt; true),
			'foreign_key' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'alias' =&gt; array('type'=&gt;'string', 'null' =&gt; true),
			'lft' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'rght' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1))
		);

	var $aros = array(
			'id' =&gt; array('type'=&gt;'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
			'parent_id' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'model' =&gt; array('type'=&gt;'string', 'null' =&gt; true),
			'foreign_key' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'alias' =&gt; array('type'=&gt;'string', 'null' =&gt; true),
			'lft' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'rght' =&gt; array('type'=&gt;'integer', 'null' =&gt; true, 'default' =&gt; NULL, 'length' =&gt; 10),
			'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1))
		);

	var $aros_acos = array(
			'id' =&gt; array('type'=&gt;'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
			'aro_id' =&gt; array('type'=&gt;'integer', 'null' =&gt; false, 'length' =&gt; 10, 'key' =&gt; 'index'),
			'aco_id' =&gt; array('type'=&gt;'integer', 'null' =&gt; false, 'length' =&gt; 10),
			'_create' =&gt; array('type'=&gt;'string', 'null' =&gt; false, 'default' =&gt; '0', 'length' =&gt; 2),
</codefragment>
  </duplication>
  <duplication lines="17" tokens="85">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/Config/Schema/i18n.php" line="29"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/console/templates/skel/config/schema/i18n.php" line="31"/>
    <codefragment>class i18nSchema extends CakeSchema {

	var $name = 'i18n';

	function before($event = array()) {
		return true;
	}

	function after($event = array()) {
	}

	var $i18n = array(
			'id' =&gt; array('type'=&gt;'integer', 'null' =&gt; false, 'default' =&gt; NULL, 'length' =&gt; 10, 'key' =&gt; 'primary'),
			'locale' =&gt; array('type'=&gt;'string', 'null' =&gt; false, 'length' =&gt; 6, 'key' =&gt; 'index'),
			'model' =&gt; array('type'=&gt;'string', 'null' =&gt; false, 'key' =&gt; 'index'),
			'foreign_key' =&gt; array('type'=&gt;'integer', 'null' =&gt; false, 'length' =&gt; 10, 'key' =&gt; 'index'),
			'field' =&gt; array('type'=&gt;'string', 'null' =&gt; false, 'key' =&gt; 'index'),
</codefragment>
  </duplication>
  <duplication lines="41" tokens="44">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/webroot/index.php" line="25"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/console/templates/skel/webroot/index.php" line="25"/>
    <codefragment>	if (!defined('DS')) {
		define('DS', DIRECTORY_SEPARATOR);
	}
/**
 * These defines should only be edited if you have cake installed in
 * a directory layout other than the way it is distributed.
 * When using custom settings be sure to use the DS and do not add a trailing DS.
 */

/**
 * The full path to the directory which holds "app", WITHOUT a trailing DS.
 *
 */
	if (!defined('ROOT')) {
		define('ROOT', dirname(dirname(dirname(__FILE__))));
	}
/**
 * The actual directory name for the "app".
 *
 */
	if (!defined('APP_DIR')) {
		define('APP_DIR', basename(dirname(dirname(__FILE__))));
	}
/**
 * The absolute path to the "cake" directory, WITHOUT a trailing DS.
 *
 */
	if (!defined('CAKE_CORE_INCLUDE_PATH')) {
		define('CAKE_CORE_INCLUDE_PATH', ROOT);
	}

/**
 * Editing below this line should NOT be necessary.
 * Change at your own risk.
 *
 */
	if (!defined('WEBROOT_DIR')) {
		define('WEBROOT_DIR', basename(dirname(__FILE__)));
	}
	if (!defined('WWW_ROOT')) {
		define('WWW_ROOT', dirname(__FILE__) . DS);
</codefragment>
  </duplication>
  <duplication lines="50" tokens="71">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/app/webroot/test.php" line="20"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/console/templates/skel/webroot/test.php" line="20"/>
    <codefragment>set_time_limit(0);
ini_set('display_errors', 1);
/**
 * Use the DS to separate the directories in other defines
 */
	if (!defined('DS')) {
		define('DS', DIRECTORY_SEPARATOR);
	}
/**
 * These defines should only be edited if you have cake installed in
 * a directory layout other than the way it is distributed.
 * When using custom settings be sure to use the DS and do not add a trailing DS.
 */

/**
 * The full path to the directory which holds "app", WITHOUT a trailing DS.
 *
 */
	if (!defined('ROOT')) {
		define('ROOT', dirname(dirname(dirname(__FILE__))));
	}
/**
 * The actual directory name for the "app".
 *
 */
	if (!defined('APP_DIR')) {
		define('APP_DIR', basename(dirname(dirname(__FILE__))));
	}
/**
 * The absolute path to the "cake" directory, WITHOUT a trailing DS.
 *
 */
	if (!defined('CAKE_CORE_INCLUDE_PATH')) {
		define('CAKE_CORE_INCLUDE_PATH', ROOT);
	}

/**
 * Editing below this line should not be necessary.
 * Change at your own risk.
 *
 */
if (!defined('WEBROOT_DIR')) {
	define('WEBROOT_DIR', basename(dirname(__FILE__)));
}
if (!defined('WWW_ROOT')) {
	define('WWW_ROOT', dirname(__FILE__) . DS);
}
if (!defined('CORE_PATH')) {
	if (function_exists('ini_set') &amp;&amp; ini_set('include_path', CAKE_CORE_INCLUDE_PATH . PATH_SEPARATOR . ROOT . DS . APP_DIR . DS . PATH_SEPARATOR . ini_get('include_path'))) {
		define('APP_PATH', null);
</codefragment>
  </duplication>
  <duplication lines="12" tokens="42">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/model/behaviors/translate.php" line="418"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/model/behaviors/translate.php" line="497"/>
    <codefragment>		foreach ($fields as $key =&gt; $value) {
			if (is_numeric($key)) {
				$field = $value;
				$association = null;
			} else {
				$field = $key;
				$association = $value;
			}

			if (array_key_exists($field, $this-&gt;settings[$model-&gt;alias])) {
				unset($this-&gt;settings[$model-&gt;alias][$field]);
			} elseif (in_array($field, $this-&gt;settings[$model-&gt;alias])) {
</codefragment>
  </duplication>
  <duplication lines="11" tokens="28">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/model/behaviors/tree.php" line="445"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/model/behaviors/tree.php" line="504"/>
    <codefragment>	function movedown(&amp;$Model, $id = null, $number = 1) {
		if (is_array($id)) {
			extract (array_merge(array('id' =&gt; null), $id));
		}
		if (!$number) {
			return false;
		}
		if (empty ($id)) {
			$id = $Model-&gt;id;
		}
		extract($this-&gt;settings[$Model-&gt;alias]);
</codefragment>
  </duplication>
  <duplication lines="16" tokens="15">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/model/datasources/dbo/dbo_mysql.php" line="620"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/model/datasources/dbo/dbo_mysqli.php" line="148"/>
    <codefragment>			while ($line = mysql_fetch_row($result)) {
				$tables[] = $line[0];
			}
			parent::listSources($tables);
			return $tables;
		}
	}

/**
 * Returns a quoted and escaped string of $data for use in an SQL statement.
 *
 * @param string $data String to be prepared for use in an SQL statement
 * @param string $column The column into which this data will be inserted
 * @param boolean $safe Whether or not numeric data should be handled automagically if no column data is provided
 * @return string Quoted and escaped data
 */
</codefragment>
  </duplication>
  <duplication lines="15" tokens="58">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/multibyte.php" line="538"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/multibyte.php" line="602"/>
    <codefragment>		$needle = Multibyte::utf8($needle);
		$needleCount = count($needle);

		$parts = array();
		$position = 0;

		while (($found === false) &amp;&amp; ($position &lt; $haystackCount)) {
			if (isset($needle[0]) &amp;&amp; $needle[0] === $check[$position]) {
				for ($i = 1; $i &lt; $needleCount; $i++) {
					if ($needle[$i] !== $check[$position + $i]) {
						if ($needle[$i] === $check[($position + $i) -1]) {
							$found = true;
						}
						unset($parts[$position - 1]);
						$haystack = array_merge(array($haystack[$position]), $haystack);
</codefragment>
  </duplication>
  <duplication lines="7" tokens="20">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/multibyte.php" line="663"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/multibyte.php" line="715"/>
    <codefragment>			$needle = Multibyte::utf8($needle);
			$needleCount = count($needle);

			$position = $offset;

			while (($found === false) &amp;&amp; ($position &lt; $haystackCount)) {
				if (isset($needle[0]) &amp;&amp; $needle[0] === $haystack[$position]) {
</codefragment>
  </duplication>
  <duplication lines="7" tokens="19">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/multibyte.php" line="417"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/multibyte.php" line="769"/>
    <codefragment>			$needle = Multibyte::utf8($needle);
			$needleCount = count($needle);

			$parts = array();
			$position = 0;

			while (($found === false) &amp;&amp; ($position &lt; $haystackCount)) {
</codefragment>
  </duplication>
  <duplication lines="12" tokens="10">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/view/helpers/javascript.php" line="316"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/view/helpers/js.php" line="688"/>
    <codefragment>		return $this-&gt;_utf8ToHex($string);
	}

/**
 * Encode a string into JSON.  Converts and escapes necessary characters.
 *
 * @return void
 */
	function _utf8ToHex($string) {
		$length = strlen($string);
		$return = '';
		for ($i = 0; $i &lt; $length; ++$i) {
</codefragment>
  </duplication>
  <duplication lines="46" tokens="179">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/view/helpers/javascript.php" line="349"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/view/helpers/js.php" line="722"/>
    <codefragment>					$return .= '\\' . $string{$i};
					break;
				case (($ord &gt;= 0x20) &amp;&amp; ($ord &lt;= 0x7F)):
					$return .= $string{$i};
					break;
				case (($ord &amp; 0xE0) == 0xC0):
					if ($i + 1 &gt;= $length) {
						$i += 1;
						$return .= '?';
						break;
					}
					$charbits = $string{$i} . $string{$i + 1};
					$char = Multibyte::utf8($charbits);
					$return .= sprintf('\u%04s', dechex($char[0]));
					$i += 1;
					break;
				case (($ord &amp; 0xF0) == 0xE0):
					if ($i + 2 &gt;= $length) {
						$i += 2;
						$return .= '?';
						break;
					}
					$charbits = $string{$i} . $string{$i + 1} . $string{$i + 2};
					$char = Multibyte::utf8($charbits);
					$return .= sprintf('\u%04s', dechex($char[0]));
					$i += 2;
					break;
				case (($ord &amp; 0xF8) == 0xF0):
					if ($i + 3 &gt;= $length) {
					   $i += 3;
					   $return .= '?';
					   break;
					}
					$charbits = $string{$i} . $string{$i + 1} . $string{$i + 2} . $string{$i + 3};
					$char = Multibyte::utf8($charbits);
					$return .= sprintf('\u%04s', dechex($char[0]));
					$i += 3;
					break;
				case (($ord &amp; 0xFC) == 0xF8):
					if ($i + 4 &gt;= $length) {
					   $i += 4;
					   $return .= '?';
					   break;
					}
					$charbits = $string{$i} . $string{$i + 1} . $string{$i + 2} . $string{$i + 3} . $string{$i + 4};
					$char = Multibyte::utf8($charbits);
</codefragment>
  </duplication>
  <duplication lines="9" tokens="28">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/apc.test.php" line="76"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/memcache.test.php" line="195"/>
    <codefragment>	function testReadAndWriteCache() {
		Cache::set(array('duration' =&gt; 1));

		$result = Cache::read('test');
		$expecting = '';
		$this-&gt;assertEqual($result, $expecting);

		$data = 'this is a test of the emergency broadcasting system';
		$result = Cache::write('test', $data);
</codefragment>
  </duplication>
  <duplication lines="15" tokens="19">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/file.test.php" line="101"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/memcache.test.php" line="206"/>
    <codefragment>		$result = Cache::read('test');
		$expecting = $data;
		$this-&gt;assertEqual($result, $expecting);

		Cache::delete('test');
	}

/**
 * testExpiry method
 *
 * @access public
 * @return void
 */
	function testExpiry() {
		Cache::set(array('duration' =&gt; 1));
</codefragment>
  </duplication>
  <duplication lines="31" tokens="75">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/apc.test.php" line="76"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/xcache.test.php" line="96"/>
    <codefragment>	function testReadAndWriteCache() {
		Cache::set(array('duration' =&gt; 1));

		$result = Cache::read('test');
		$expecting = '';
		$this-&gt;assertEqual($result, $expecting);

		$data = 'this is a test of the emergency broadcasting system';
		$result = Cache::write('test', $data);
		$this-&gt;assertTrue($result);

		$result = Cache::read('test');
		$expecting = $data;
		$this-&gt;assertEqual($result, $expecting);

		Cache::delete('test');
	}

/**
 * testExpiry method
 *
 * @access public
 * @return void
 */
	function testExpiry() {
		Cache::set(array('duration' =&gt; 1));

		$result = Cache::read('test');
		$this-&gt;assertFalse($result);

		$data = 'this is a test of the emergency broadcasting system';
</codefragment>
  </duplication>
  <duplication lines="20" tokens="42">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/memcache.test.php" line="274"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cache/xcache.test.php" line="174"/>
    <codefragment>		$this-&gt;assertTrue($result);
	}

/**
 * testDecrement method
 *
 * @access public
 * @return void
 */
	function testDecrement() {
		$result = Cache::write('test_decrement', 5);
		$this-&gt;assertTrue($result);

		$result = Cache::decrement('test_decrement');
		$this-&gt;assertEqual(4, $result);

		$result = Cache::read('test_decrement');
		$this-&gt;assertEqual(4, $result);

		$result = Cache::decrement('test_decrement', 2);
</codefragment>
  </duplication>
  <duplication lines="13" tokens="69">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cake_session.test.php" line="370"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cake_session.test.php" line="407"/>
    <codefragment>		$this-&gt;setUp();

		$this-&gt;Session-&gt;write('SessionTestCase', 0);
		$this-&gt;assertEqual($this-&gt;Session-&gt;read('SessionTestCase'), 0);

		$this-&gt;Session-&gt;write('SessionTestCase', '0');
		$this-&gt;assertEqual($this-&gt;Session-&gt;read('SessionTestCase'), '0');
		$this-&gt;assertFalse($this-&gt;Session-&gt;read('SessionTestCase') === 0);

		$this-&gt;Session-&gt;write('SessionTestCase', false);
		$this-&gt;assertFalse($this-&gt;Session-&gt;read('SessionTestCase'));

		$this-&gt;Session-&gt;write('SessionTestCase', null);
</codefragment>
  </duplication>
  <duplication lines="7" tokens="36">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cake_session.test.php" line="370"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/cake_session.test.php" line="446"/>
    <codefragment>		$this-&gt;setUp();

		$this-&gt;Session-&gt;write('SessionTestCase', 0);
		$this-&gt;assertEqual($this-&gt;Session-&gt;read('SessionTestCase'), 0);

		$this-&gt;Session-&gt;write('SessionTestCase', '0');
		$this-&gt;assertEqual($this-&gt;Session-&gt;read('SessionTestCase'), '0');
</codefragment>
  </duplication>
  <duplication lines="10" tokens="45">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/components/auth.test.php" line="1326"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/components/auth.test.php" line="1562"/>
    <codefragment>		Router::reload();

		$this-&gt;AuthUserCustomField =&amp; new AuthUserCustomField();
		$user = array(
			'id' =&gt; 1, 'email' =&gt; 'harking@example.com',
			'password' =&gt; Security::hash(Configure::read('Security.salt') . 'cake'
		));
		$user = $this-&gt;AuthUserCustomField-&gt;save($user, false);

		Router::connect('/', array('controller' =&gt; 'people', 'action' =&gt; 'login'));
</codefragment>
  </duplication>
  <duplication lines="13" tokens="50">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/components/cookie.test.php" line="338"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/components/cookie.test.php" line="393"/>
    <codefragment>		$data = $this-&gt;Controller-&gt;Cookie-&gt;read('Encrytped_array');
		$expected = array();
		$this-&gt;assertEqual($data, $expected);

		$data = $this-&gt;Controller-&gt;Cookie-&gt;read('Encrytped_multi_cookies');
		$expected = array();
		$this-&gt;assertEqual($data, $expected);

		$data = $this-&gt;Controller-&gt;Cookie-&gt;read('Plain_array');
		$expected = array();
		$this-&gt;assertEqual($data, $expected);

		$data = $this-&gt;Controller-&gt;Cookie-&gt;read('Plain_multi_cookies');
</codefragment>
  </duplication>
  <duplication lines="6" tokens="43">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/components/cookie.test.php" line="367"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/components/cookie.test.php" line="421"/>
    <codefragment>		$data = $this-&gt;Controller-&gt;Cookie-&gt;read('Encrytped_array');
		$expected = array('name' =&gt; 'CakePHP', 'version' =&gt; '1.2.0.x', 'tag' =&gt;'CakePHP Rocks!');
		$this-&gt;assertEqual($data, $expected);

		$data = $this-&gt;Controller-&gt;Cookie-&gt;read('Encrytped_multi_cookies');
		$expected = array('name' =&gt; 'CakePHP', 'version' =&gt; '1.2.0.x', 'tag' =&gt;'CakePHP Rocks!');
</codefragment>
  </duplication>
  <duplication lines="7" tokens="27">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/scaffold.test.php" line="709"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/scaffold.test.php" line="740"/>
    <codefragment>		$this-&gt;Controller-&gt;action = 'admin_edit';
		$this-&gt;Controller-&gt;here = '/admin/scaffold_mock/edit';
		$this-&gt;Controller-&gt;webroot = '/';
		$params = array(
			'plugin' =&gt; null,
			'pass' =&gt; array(),
			'form' =&gt; array(),
</codefragment>
  </duplication>
  <duplication lines="7" tokens="29">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/scaffold.test.php" line="489"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/controller/scaffold.test.php" line="872"/>
    <codefragment>		$this-&gt;Controller-&gt;action = 'edit';
		$this-&gt;Controller-&gt;here = '/scaffold_mock';
		$this-&gt;Controller-&gt;webroot = '/';
		$params = array(
			'plugin' =&gt; null,
			'pass' =&gt; array(1),
			'form' =&gt; array(),
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="179"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="251"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 0 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 ends with any # (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 ends with any # (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 0 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 ends with any # (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 ends with any # (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="323"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="395"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 1 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 = 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 = 0 or &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 = 0 or &gt; 1 (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 1 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 = 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 = 0 or &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 = 0 or &gt; 1 (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="467"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="539"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 2 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 = 0 or 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 = 0 or 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 &gt; 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 &gt; 1 (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 2 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 = 0 or 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 = 0 or 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 &gt; 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 &gt; 1 (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="611"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="683"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 3 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 = 0 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 ends 1 but not 11 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 ends 1 but not 11 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 3 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 = 0 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 ends 1 but not 11 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="9" tokens="45">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="617"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="761"/>
    <codefragment>		$this-&gt;assertTrue(in_array('2 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
</codefragment>
  </duplication>
  <duplication lines="9" tokens="45">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="648"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="792"/>
    <codefragment>		$this-&gt;assertTrue(in_array('2 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="755"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="827"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 4 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 = 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 = 2 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 4 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 = 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 = 2 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="52" tokens="283">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="899"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="973"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 5 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('0 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 = 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 = 0 or ends in 01-19 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 5 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('0 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 = 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 = 0 or ends in 01-19 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 = 0 or ends in 01-19 (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1047"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1119"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 6 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 ends in 1, not 11 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 ends in 0 or ends in 10-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 ends in 1, not 11 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 6 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 ends in 0 or ends in 10-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 ends in 1, not 11 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 ends in 0 or ends in 10-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 ends in 0 or ends in 10-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 ends in 0 or ends in 10-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 ends in 0 or ends in 10-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 ends in 0 or ends in 10-20 (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="7" tokens="33">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="619"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1199"/>
    <codefragment>		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
</codefragment>
  </duplication>
  <duplication lines="7" tokens="33">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="650"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1230"/>
    <codefragment>		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1191"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1263"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 7 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 ends in 1, not 11 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 ends in 1, not 11 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 7 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 ends in 1, not 11 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="12" tokens="66">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="619"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1343"/>
    <codefragment>		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
</codefragment>
  </duplication>
  <duplication lines="11" tokens="60">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="650"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1374"/>
    <codefragment>		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1335"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1407"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 8 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 is 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 is 2-4 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 is 2-4 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 is 2-4 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 8 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 is 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 is 2-4 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 is 2-4 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 is 2-4 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="11" tokens="57">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1196"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1485"/>
    <codefragment>		$this-&gt;assertTrue(in_array('1 ends in 1, not 11 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
</codefragment>
  </duplication>
  <duplication lines="11" tokens="57">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1227"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1518"/>
    <codefragment>		$this-&gt;assertTrue(in_array('1 ends in 1, not 11 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="55" tokens="294">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1477"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1552"/>
    <codefragment>		Configure::write('Config.language', 'rule_9_po');

		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 9 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 is 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 ends in 2-4, not 12-14 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 9 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 is 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 ends in 2-4, not 12-14 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="12" tokens="66">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="619"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1638"/>
    <codefragment>		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
</codefragment>
  </duplication>
  <duplication lines="11" tokens="60">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="650"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1670"/>
    <codefragment>		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="52" tokens="283">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1629"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1703"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 10 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 ends in 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 ends in 2 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 ends in 03-04 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 ends in 03-04 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 10 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 ends in 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 ends in 2 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 ends in 03-04 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 ends in 03-04 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="6" tokens="30">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="769"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1791"/>
    <codefragment>		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1777"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1849"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 11 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 is 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 is 2 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 is 3-6 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 is 3-6 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 is 3-6 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 is 3-6 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 is 7-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 is 7-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 is 7-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 is 7-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 11 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 is 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 is 2 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 is 3-6 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 is 3-6 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 is 3-6 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 is 3-6 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 is 7-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 is 7-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 is 7-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 is 7-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="6" tokens="30">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="769"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1935"/>
    <codefragment>		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1921"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="1993"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 12 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 is 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 is 2 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 is 0 or 3-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 12 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 is 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 is 2 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 is 0 or 3-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="2065"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="2137"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 13 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 is 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 is 0 or ends in 01-10 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 ends in 11-20 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 13 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 is 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 is 0 or ends in 01-10 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 ends in 11-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 ends in 11-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 ends in 11-20 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 ends in 11-20 (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="50" tokens="271">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="2209"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/i18n.test.php" line="2281"/>
    <codefragment>		$singular = $this-&gt;__singular();
		$this-&gt;assertEqual('Plural Rule 14 (translated)', $singular);

		$plurals = $this-&gt;__plural();
		$this-&gt;assertTrue(in_array('0 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('1 ends in 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('2 ends in 2 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('3 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('4 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('5 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('6 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('7 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('8 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('9 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('10 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('11 ends in 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('12 ends in 2 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('13 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('14 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('15 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('16 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('17 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('18 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('19 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('20 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('21 ends in 1 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('22 ends in 2 (translated)', $plurals));
		$this-&gt;assertTrue(in_array('23 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('24 everything else (translated)', $plurals));
		$this-&gt;assertTrue(in_array('25 everything else (translated)', $plurals));

		$coreSingular = $this-&gt;__singularFromCore();
		$this-&gt;assertEqual('Plural Rule 14 (from core translated)', $coreSingular);

		$corePlurals = $this-&gt;__pluralFromCore();
		$this-&gt;assertTrue(in_array('0 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('1 ends in 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('2 ends in 2 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('3 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('4 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('5 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('6 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('7 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('8 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('9 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('10 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('11 ends in 1 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('12 ends in 2 (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('13 everything else (from core translated)', $corePlurals));
		$this-&gt;assertTrue(in_array('14 everything else (from core translated)', $corePlurals));
</codefragment>
  </duplication>
  <duplication lines="14" tokens="238">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/l10n.php" line="189"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/l10n.test.php" line="465"/>
    <codefragment>										'ar' =&gt; array('language' =&gt; 'Arabic', 'locale' =&gt; 'ara', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-ae' =&gt; array('language' =&gt; 'Arabic (U.A.E.)', 'locale' =&gt; 'ar_ae', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-bh' =&gt; array('language' =&gt; 'Arabic (Bahrain)', 'locale' =&gt; 'ar_bh', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-dz' =&gt; array('language' =&gt; 'Arabic (Algeria)', 'locale' =&gt; 'ar_dz', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-eg' =&gt; array('language' =&gt; 'Arabic (Egypt)', 'locale' =&gt; 'ar_eg', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-iq' =&gt; array('language' =&gt; 'Arabic (Iraq)', 'locale' =&gt; 'ar_iq', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-jo' =&gt; array('language' =&gt; 'Arabic (Jordan)', 'locale' =&gt; 'ar_jo', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-kw' =&gt; array('language' =&gt; 'Arabic (Kuwait)', 'locale' =&gt; 'ar_kw', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-lb' =&gt; array('language' =&gt; 'Arabic (Lebanon)', 'locale' =&gt; 'ar_lb', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-ly' =&gt; array('language' =&gt; 'Arabic (Libya)', 'locale' =&gt; 'ar_ly', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-ma' =&gt; array('language' =&gt; 'Arabic (Morocco)', 'locale' =&gt; 'ar_ma', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-om' =&gt; array('language' =&gt; 'Arabic (Oman)', 'locale' =&gt; 'ar_om', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-qa' =&gt; array('language' =&gt; 'Arabic (Qatar)', 'locale' =&gt; 'ar_qa', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
										'ar-sa' =&gt; array('language' =&gt; 'Arabic (Saudi Arabia)', 'locale' =&gt; 'ar_sa', 'localeFallback' =&gt; 'ara', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'rtl'),
</codefragment>
  </duplication>
  <duplication lines="8" tokens="130">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/l10n.php" line="220"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/l10n.test.php" line="541"/>
    <codefragment>										'en' =&gt; array('language' =&gt; 'English', 'locale' =&gt; 'eng', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'en-au' =&gt; array('language' =&gt; 'English (Australian)', 'locale' =&gt; 'en_au', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'en-bz' =&gt; array('language' =&gt; 'English (Belize)', 'locale' =&gt; 'en_bz', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'en-ca' =&gt; array('language' =&gt; 'English (Canadian)', 'locale' =&gt; 'en_ca', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'en-gb' =&gt; array('language' =&gt; 'English (British)', 'locale' =&gt; 'en_gb', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'en-ie' =&gt; array('language' =&gt; 'English (Ireland)', 'locale' =&gt; 'en_ie', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'en-jm' =&gt; array('language' =&gt; 'English (Jamaica)', 'locale' =&gt; 'en_jm', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'en-nz' =&gt; array('language' =&gt; 'English (New Zealand)', 'locale' =&gt; 'en_nz', 'localeFallback' =&gt; 'eng', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
</codefragment>
  </duplication>
  <duplication lines="17" tokens="292">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/libs/l10n.php" line="231"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/l10n.test.php" line="558"/>
    <codefragment>										'es' =&gt; array('language' =&gt; 'Spanish (Spain - Traditional)', 'locale' =&gt; 'spa', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-ar' =&gt; array('language' =&gt; 'Spanish (Argentina)', 'locale' =&gt; 'es_ar', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-bo' =&gt; array('language' =&gt; 'Spanish (Bolivia)', 'locale' =&gt; 'es_bo', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-cl' =&gt; array('language' =&gt; 'Spanish (Chile)', 'locale' =&gt; 'es_cl', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-co' =&gt; array('language' =&gt; 'Spanish (Colombia)', 'locale' =&gt; 'es_co', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-cr' =&gt; array('language' =&gt; 'Spanish (Costa Rica)', 'locale' =&gt; 'es_cr', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-do' =&gt; array('language' =&gt; 'Spanish (Dominican Republic)', 'locale' =&gt; 'es_do', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-ec' =&gt; array('language' =&gt; 'Spanish (Ecuador)', 'locale' =&gt; 'es_ec', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-es' =&gt; array('language' =&gt; 'Spanish (Spain)', 'locale' =&gt; 'es_es', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-gt' =&gt; array('language' =&gt; 'Spanish (Guatemala)', 'locale' =&gt; 'es_gt', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-hn' =&gt; array('language' =&gt; 'Spanish (Honduras)', 'locale' =&gt; 'es_hn', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-mx' =&gt; array('language' =&gt; 'Spanish (Mexican)', 'locale' =&gt; 'es_mx', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-ni' =&gt; array('language' =&gt; 'Spanish (Nicaragua)', 'locale' =&gt; 'es_ni', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-pa' =&gt; array('language' =&gt; 'Spanish (Panama)', 'locale' =&gt; 'es_pa', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-pe' =&gt; array('language' =&gt; 'Spanish (Peru)', 'locale' =&gt; 'es_pe', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-pr' =&gt; array('language' =&gt; 'Spanish (Puerto Rico)', 'locale' =&gt; 'es_pr', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
										'es-py' =&gt; array('language' =&gt; 'Spanish (Paraguay)', 'locale' =&gt; 'es_py', 'localeFallback' =&gt; 'spa', 'charset' =&gt; 'utf-8', 'direction' =&gt; 'ltr'),
</codefragment>
  </duplication>
  <duplication lines="15" tokens="68">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="281"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="389"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
</codefragment>
  </duplication>
  <duplication lines="45" tokens="210">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="317"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="424"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31'
					),
					array(
						'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31'
					),
					array(
						'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31'
					),
					array(
						'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
						'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31'
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
				),
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; 5, 'article_id' =&gt; 2, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for Second Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:53:23', 'updated' =&gt; '2007-03-18 10:55:31'
					),
					array(
						'id' =&gt; 6, 'article_id' =&gt; 2, 'user_id' =&gt; 2, 'comment' =&gt; 'Second Comment for Second Article',
</codefragment>
  </duplication>
  <duplication lines="6" tokens="35">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="573"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="635"/>
    <codefragment>		$result = $this-&gt;Article-&gt;find('all', array('recursive' =&gt; 2));
		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
</codefragment>
  </duplication>
  <duplication lines="14" tokens="66">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="642"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="693"/>
    <codefragment>				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
							'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
						),
						array(
							'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
						)
					),
					'Comment' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="8" tokens="41">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="573"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="726"/>
    <codefragment>		$result = $this-&gt;Article-&gt;find('all', array('recursive' =&gt; 2));
		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="57" tokens="263">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="497"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="843"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
						'User' =&gt; array(
							'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
							'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
						)
					),
					array(
						'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
						'User' =&gt; array(
							'id' =&gt; 4, 'user' =&gt; 'garrett', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
							'created' =&gt; '2007-03-17 01:22:23', 'updated' =&gt; '2007-03-17 01:24:31'
						)
					),
					array(
						'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31',
						'User' =&gt; array(
							'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
							'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
						)
					),
					array(
						'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
						'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31',
						'User' =&gt; array(
							'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
							'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
						)
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; 5, 'article_id' =&gt; 2, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for Second Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:53:23', 'updated' =&gt; '2007-03-18 10:55:31',
						'User' =&gt; array(
							'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
							'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
						)
					),
					array(
						'id' =&gt; 6, 'article_id' =&gt; 2, 'user_id' =&gt; 2, 'comment' =&gt; 'Second Comment for Second Article',
</codefragment>
  </duplication>
  <duplication lines="43" tokens="187">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="574"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="919"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
							'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
						),
						array(
							'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
						)
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
				),
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31',
					'ArticleFeatured' =&gt; array(
						array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
						)
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
				),
				'User' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="73" tokens="328">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="574"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="980"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
							'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
						),
						array(
							'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
						)
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
				),
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31',
					'ArticleFeatured' =&gt; array(
						array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
						)
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
							'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
						),
						array(
							'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
						)
					)
				)
			)
		);
		$this-&gt;assertEqual($result, $expected);

		$this-&gt;Article-&gt;contain(array('User' =&gt; array('ArticleFeatured', 'Comment')));
		$result = $this-&gt;Article-&gt;find('all', array('recursive' =&gt; 2));
		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
</codefragment>
  </duplication>
  <duplication lines="89" tokens="423">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="574"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1070"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
							'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
						),
						array(
							'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
						)
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
				),
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31',
					'ArticleFeatured' =&gt; array(
						array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
						)
					)
				)
			),
			array(
				'Article' =&gt; array(
					'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
							'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
						),
						array(
							'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
						)
					)
				)
			)
		);
		$this-&gt;assertEqual($result, $expected);

		$this-&gt;Article-&gt;contain(array('User' =&gt; array('ArticleFeatured', 'Comment')));
		$result = $this-&gt;Article-&gt;find('all', array('recursive' =&gt; 2));
		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31',
					'ArticleFeatured' =&gt; array(
						array(
							'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
						),
						array(
							'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
						)
					),
					'Comment' =&gt; array(
						array(
							'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
							'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31'
						),
						array(
							'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
							'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31'
</codefragment>
  </duplication>
  <duplication lines="6" tokens="31">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1186"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1251"/>
    <codefragment>		$result = $this-&gt;User-&gt;find('all', array('recursive' =&gt; 3));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
</codefragment>
  </duplication>
  <duplication lines="15" tokens="42">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1209"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1313"/>
    <codefragment>						'Featured' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
</codefragment>
  </duplication>
  <duplication lines="8" tokens="35">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="747"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1407"/>
    <codefragment>				'Comment' =&gt; array(
					array(
						'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
						'Attachment' =&gt; array()
					),
					array(
						'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
</codefragment>
  </duplication>
  <duplication lines="43" tokens="180">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1187"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1507"/>
    <codefragment>		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="104" tokens="498">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1187"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1571"/>
    <codefragment>		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						)
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 4, 'user' =&gt; 'garrett', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:22:23', 'updated' =&gt; '2007-03-17 01:24:31'
				),
				'ArticleFeatured' =&gt; array()
			)
		);
		$this-&gt;assertEqual($result, $expected);

		$this-&gt;User-&gt;contain(array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category', 'Comment' =&gt; array('Article', 'Attachment'))));
		$result = $this-&gt;User-&gt;find('all', array('recursive' =&gt; 3));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
</codefragment>
  </duplication>
  <duplication lines="96" tokens="433">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1379"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1697"/>
    <codefragment>		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'Article' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
					)
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
								'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31',
								'Attachment' =&gt; array()
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array(),
						'Comment' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'Article' =&gt; array(),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'Article' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
					)
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 5, 'article_id' =&gt; 2, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for Second Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:53:23', 'updated' =&gt; '2007-03-18 10:55:31',
								'Attachment' =&gt; array(
									'id' =&gt; 1, 'comment_id' =&gt; 5, 'attachment' =&gt; 'attachment.zip',
</codefragment>
  </duplication>
  <duplication lines="17" tokens="53">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1206"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1843"/>
    <codefragment>					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
</codefragment>
  </duplication>
  <duplication lines="7" tokens="21">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1891"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1912"/>
    <codefragment>					'Category' =&gt; array('id', 'name')
				)
			)
		)));

		$this-&gt;assertTrue(Set::matches('/User[id=1]', $r));
		$this-&gt;assertFalse(Set::matches('/Article', $r) || Set::matches('/Comment', $r));
</codefragment>
  </duplication>
  <duplication lines="10" tokens="28">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1958"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2028"/>
    <codefragment>			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
</codefragment>
  </duplication>
  <duplication lines="46" tokens="202">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1185"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2071"/>
    <codefragment>		$this-&gt;User-&gt;contain(array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category')));
		$result = $this-&gt;User-&gt;find('all', array('recursive' =&gt; 3));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
</codefragment>
  </duplication>
  <duplication lines="106" tokens="525">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1250"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2138"/>
    <codefragment>		$this-&gt;User-&gt;contain(array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category', 'Comment' =&gt; array('Article', 'Attachment'))));
		$result = $this-&gt;User-&gt;find('all', array('recursive' =&gt; 3));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
								'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array(),
						'Comment' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 5, 'article_id' =&gt; 2, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for Second Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:53:23', 'updated' =&gt; '2007-03-18 10:55:31',
								'Article' =&gt; array(
									'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
								),
								'Attachment' =&gt; array(
									'id' =&gt; 1, 'comment_id' =&gt; 5, 'attachment' =&gt; 'attachment.zip',
									'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31'
								)
							),
							array(
								'id' =&gt; 6, 'article_id' =&gt; 2, 'user_id' =&gt; 2, 'comment' =&gt; 'Second Comment for Second Article',
</codefragment>
  </duplication>
  <duplication lines="98" tokens="455">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1377"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2267"/>
    <codefragment>		$this-&gt;User-&gt;contain(array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category', 'Comment' =&gt; 'Attachment'), 'Article'));
		$result = $this-&gt;User-&gt;find('all', array('recursive' =&gt; 3));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'Article' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
					)
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
								'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31',
								'Attachment' =&gt; array()
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array(),
						'Comment' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'Article' =&gt; array(),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'Article' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
					)
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 5, 'article_id' =&gt; 2, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for Second Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:53:23', 'updated' =&gt; '2007-03-18 10:55:31',
								'Attachment' =&gt; array(
									'id' =&gt; 1, 'comment_id' =&gt; 5, 'attachment' =&gt; 'attachment.zip',
</codefragment>
  </duplication>
  <duplication lines="44" tokens="191">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1506"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2396"/>
    <codefragment>		$result = $this-&gt;User-&gt;find('all', array('contain' =&gt; array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category'))));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="105" tokens="514">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1570"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2471"/>
    <codefragment>		$result = $this-&gt;User-&gt;find('all', array('contain' =&gt; array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category', 'Comment' =&gt; array('Article', 'Attachment')))));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
								'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array(),
						'Comment' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 5, 'article_id' =&gt; 2, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for Second Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:53:23', 'updated' =&gt; '2007-03-18 10:55:31',
								'Article' =&gt; array(
									'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
								),
								'Attachment' =&gt; array(
									'id' =&gt; 1, 'comment_id' =&gt; 5, 'attachment' =&gt; 'attachment.zip',
									'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31'
								)
							),
							array(
								'id' =&gt; 6, 'article_id' =&gt; 2, 'user_id' =&gt; 2, 'comment' =&gt; 'Second Comment for Second Article',
</codefragment>
  </duplication>
  <duplication lines="133" tokens="661">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1187"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2609"/>
    <codefragment>		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						)
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 4, 'user' =&gt; 'garrett', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:22:23', 'updated' =&gt; '2007-03-17 01:24:31'
				),
				'ArticleFeatured' =&gt; array()
			)
		);
		$this-&gt;assertEqual($result, $expected);

		$this-&gt;User-&gt;contain(array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category', 'Comment' =&gt; array('Article', 'Attachment'))));
		$result = $this-&gt;User-&gt;find('all', array('recursive' =&gt; 3));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
								'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31',
								'Article' =&gt; array(
									'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
									'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
								),
								'Attachment' =&gt; array()
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array(),
						'Comment' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
</codefragment>
  </duplication>
  <duplication lines="97" tokens="445">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="1696"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2745"/>
    <codefragment>		$result = $this-&gt;User-&gt;find('all', array('contain' =&gt; array('ArticleFeatured' =&gt; array('Featured' =&gt; 'Category', 'Comment' =&gt; 'Attachment'), 'Article')));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; 1, 'user' =&gt; 'mariano', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				),
				'Article' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31'
					)
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
						'Featured' =&gt; array(
							'id' =&gt; 1, 'article_featured_id' =&gt; 1, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'First Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:45:23', 'updated' =&gt; '2007-03-18 10:47:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 4, 'comment' =&gt; 'Second Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 3, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Third Comment for First Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:49:23', 'updated' =&gt; '2007-03-18 10:51:31',
								'Attachment' =&gt; array()
							),
							array(
								'id' =&gt; 4, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'Fourth Comment for First Article',
								'published' =&gt; 'N', 'created' =&gt; '2007-03-18 10:51:23', 'updated' =&gt; '2007-03-18 10:53:31',
								'Attachment' =&gt; array()
							)
						)
					),
					array(
						'id' =&gt; 3, 'user_id' =&gt; 1, 'title' =&gt; 'Third Article', 'body' =&gt; 'Third Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:43:23', 'updated' =&gt; '2007-03-18 10:45:31',
						'Featured' =&gt; array(),
						'Comment' =&gt; array()
					)
				)
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 2, 'user' =&gt; 'nate', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:18:23', 'updated' =&gt; '2007-03-17 01:20:31'
				),
				'Article' =&gt; array(),
				'ArticleFeatured' =&gt; array()
			),
			array(
				'User' =&gt; array(
					'id' =&gt; 3, 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31'
				),
				'Article' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31'
					)
				),
				'ArticleFeatured' =&gt; array(
					array(
						'id' =&gt; 2, 'user_id' =&gt; 3, 'title' =&gt; 'Second Article', 'body' =&gt; 'Second Article Body',
						'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:41:23', 'updated' =&gt; '2007-03-18 10:43:31',
						'Featured' =&gt; array(
							'id' =&gt; 2, 'article_featured_id' =&gt; 2, 'category_id' =&gt; 1, 'published_date' =&gt; '2007-03-31 10:39:23',
							'end_date' =&gt; '2007-05-15 10:39:23', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31',
							'Category' =&gt; array(
								'id' =&gt; 1, 'parent_id' =&gt; 0, 'name' =&gt; 'Category 1',
								'created' =&gt; '2007-03-18 15:30:23', 'updated' =&gt; '2007-03-18 15:32:31'
							)
						),
						'Comment' =&gt; array(
							array(
								'id' =&gt; 5, 'article_id' =&gt; 2, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for Second Article',
								'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:53:23', 'updated' =&gt; '2007-03-18 10:55:31',
								'Attachment' =&gt; array(
									'id' =&gt; 1, 'comment_id' =&gt; 5, 'attachment' =&gt; 'attachment.zip',
</codefragment>
  </duplication>
  <duplication lines="7" tokens="33">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="3019"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="3048"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array('id' =&gt; 1, 'title' =&gt; 'First Article'),
				'User' =&gt; array('id' =&gt; 1, 'user' =&gt; 'mariano'),
				'Tag' =&gt; array(
					array('tag' =&gt; 'tag1', 'created' =&gt; '2007-03-18 12:22:23'),
					array('tag' =&gt; 'tag2', 'created' =&gt; '2007-03-18 12:24:23')
</codefragment>
  </duplication>
  <duplication lines="10" tokens="47">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="2992"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="3075"/>
    <codefragment>			'Tag' =&gt; array(
				'fields' =&gt; array('tag', 'created'),
				'conditions' =&gt; array('created &gt;=' =&gt; '2007-03-18 12:24')
			)
		));
		$result = $this-&gt;Article-&gt;find('all', array('fields' =&gt; array('title')));
		$expected = array(
			array(
				'Article' =&gt; array('id' =&gt; 1, 'title' =&gt; 'First Article'),
				'User' =&gt; array('id' =&gt; 1, 'user' =&gt; 'mariano'),
</codefragment>
  </duplication>
  <duplication lines="8" tokens="91">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/translate.test.php" line="139"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/translate.test.php" line="296"/>
    <codefragment>			'Title' =&gt; array(
				array('id' =&gt; 1, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'title', 'content' =&gt; 'Title #1'),
				array('id' =&gt; 3, 'locale' =&gt; 'deu', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'title', 'content' =&gt; 'Titel #1'),
				array('id' =&gt; 5, 'locale' =&gt; 'cze', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'title', 'content' =&gt; 'Titulek #1')
			),
			'Content' =&gt; array(
				array('id' =&gt; 2, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'content', 'content' =&gt; 'Content #1'),
				array('id' =&gt; 4, 'locale' =&gt; 'deu', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'content', 'content' =&gt; 'Inhalt #1'),
</codefragment>
  </duplication>
  <duplication lines="15" tokens="152">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="1074"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="1168"/>
    <codefragment>		$this-&gt;Tree-&gt;initialize(2, 2);

		$data = $this-&gt;Tree-&gt;find(array($modelClass . '.name' =&gt; '1. Root'));
		$this-&gt;Tree-&gt;id= $data[$modelClass]['id'];

		$direct = $this-&gt;Tree-&gt;children(null, true, array('id', 'name', $parentField, $leftField, $rightField));
		$expects = array(array($modelClass =&gt; array('id' =&gt; 2, 'name' =&gt; '1.1', $parentField =&gt; 1, $leftField =&gt; 2, $rightField =&gt; 7)),
			array($modelClass =&gt; array('id' =&gt; 5, 'name' =&gt; '1.2', $parentField =&gt; 1, $leftField =&gt; 8, $rightField =&gt; 13)));
		$this-&gt;assertEqual($direct, $expects);

		$total = $this-&gt;Tree-&gt;children(null, null, array('id', 'name', $parentField, $leftField, $rightField));
		$expects = array(array($modelClass =&gt; array('id' =&gt; 2, 'name' =&gt; '1.1', $parentField =&gt; 1, $leftField =&gt; 2, $rightField =&gt; 7)),
			array($modelClass =&gt; array('id' =&gt; 3, 'name' =&gt; '1.1.1', $parentField =&gt; 2, $leftField =&gt; 3, $rightField =&gt; 4)),
			array($modelClass =&gt; array('id' =&gt; 4, 'name' =&gt; '1.1.2', $parentField =&gt; 2, $leftField =&gt; 5, $rightField =&gt; 6)),
			array($modelClass =&gt; array('id' =&gt; 5, 'name' =&gt; '1.2', $parentField =&gt; 1, $leftField =&gt; 8, $rightField =&gt; 13)),
</codefragment>
  </duplication>
  <duplication lines="11" tokens="60">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="1308"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="1345"/>
    <codefragment>		$this-&gt;Tree =&amp; new FlagTree();
		$this-&gt;Tree-&gt;initialize(2, 3);

		$this-&gt;Tree-&gt;id = 1;
		$this-&gt;Tree-&gt;saveField('flag', 1);
		$this-&gt;Tree-&gt;id = 2;
		$this-&gt;Tree-&gt;saveField('flag', 1);

		$result = $this-&gt;Tree-&gt;children();
		$expected = array(
			array('FlagTree' =&gt; array('id' =&gt; '3', 'name' =&gt; '1.1.1', 'parent_id' =&gt; '2', 'lft' =&gt; '3', 'rght' =&gt; '4', 'flag' =&gt; '0')),
</codefragment>
  </duplication>
  <duplication lines="16" tokens="39">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="393"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="1694"/>
    <codefragment>			array($modelClass =&gt; array('id' =&gt; 3, 'name' =&gt; '1.1.1', $parentField =&gt; 1, $leftField =&gt; 12, $rightField =&gt; 13)));
		$this-&gt;assertEqual($direct, $expects);
		$validTree = $this-&gt;Tree-&gt;verify();
		$this-&gt;assertIdentical($validTree, true);
	}

/**
 * testMoveWithWhitelist method
 *
 * @access public
 * @return void
 */
	function testMoveWithWhitelist() {
		extract($this-&gt;settings);
		$this-&gt;Tree =&amp; new $modelClass();
		$this-&gt;Tree-&gt;initialize(2, 2);
</codefragment>
  </duplication>
  <duplication lines="12" tokens="94">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="1807"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/tree.test.php" line="1839"/>
    <codefragment>		$data = $this-&gt;Tree-&gt;find(array($modelClass . '.name' =&gt; '1. Root'));
		$this-&gt;Tree-&gt;id = $data[$modelClass]['id'];

		$direct = $this-&gt;Tree-&gt;children(null, true, array('name', $leftField, $rightField));
		$expects = array(array($modelClass =&gt; array('name' =&gt; '1.1', $leftField =&gt; 2, $rightField =&gt; 7)),
			array($modelClass =&gt; array('name' =&gt; '1.2', $leftField =&gt; 8, $rightField =&gt; 13)));
		$this-&gt;assertEqual($direct, $expects);

		$total = $this-&gt;Tree-&gt;children(null, null, array('name', $leftField, $rightField));
		$expects = array(array($modelClass =&gt; array('name' =&gt; '1.1', $leftField =&gt; 2, $rightField =&gt; 7)),
			array($modelClass =&gt; array('name' =&gt; '1.1.1', $leftField =&gt; 3, $rightField =&gt; 4)),
			array($modelClass =&gt; array('name' =&gt; '1.1.2', $leftField =&gt; 5, $rightField =&gt; 6)),
</codefragment>
  </duplication>
  <duplication lines="13" tokens="50">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/console/libs/schema.test.php" line="71"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/cake_schema.test.php" line="45"/>
    <codefragment>	var $connection = 'test_suite';

/**
 * comments property
 *
 * @var array
 * @access public
 */
	var $comments = array(
		'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0, 'key' =&gt; 'primary'),
		'post_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0),
		'user_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false),
		'title' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'length' =&gt; 100),
</codefragment>
  </duplication>
  <duplication lines="13" tokens="187">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mssql.test.php" line="164"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysql.test.php" line="135"/>
    <codefragment>		'client_id'	=&gt; array('type' =&gt; 'integer', 'null' =&gt; '', 'default' =&gt; '0', 'length' =&gt; '11'),
		'name'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
		'login'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
		'passwd'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
		'addr_1'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
		'addr_2'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '25'),
		'zip_code'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'city'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'country'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'phone'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'fax'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'url'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
		'email'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
</codefragment>
  </duplication>
  <duplication lines="16" tokens="207">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysql.test.php" line="132"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysqli.test.php" line="105"/>
    <codefragment>	function schema() {
		return array(
			'id'		=&gt; array('type' =&gt; 'integer', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '8'),
			'client_id'	=&gt; array('type' =&gt; 'integer', 'null' =&gt; '', 'default' =&gt; '0', 'length' =&gt; '11'),
			'name'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
			'login'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
			'passwd'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
			'addr_1'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
			'addr_2'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '25'),
			'zip_code'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'city'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'country'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'phone'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'fax'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'url'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
			'email'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
</codefragment>
  </duplication>
  <duplication lines="22" tokens="75">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysql.test.php" line="536"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysqli.test.php" line="243"/>
    <codefragment>	function testColumn() {
		$result = $this-&gt;db-&gt;column('varchar(50)');
		$expected = 'string';
		$this-&gt;assertEqual($result, $expected);

		$result = $this-&gt;db-&gt;column('text');
		$expected = 'text';
		$this-&gt;assertEqual($result, $expected);

		$result = $this-&gt;db-&gt;column('int(11)');
		$expected = 'integer';
		$this-&gt;assertEqual($result, $expected);

		$result = $this-&gt;db-&gt;column('int(11) unsigned');
		$expected = 'integer';
		$this-&gt;assertEqual($result, $expected);

		$result = $this-&gt;db-&gt;column('tinyint(1)');
		$expected = 'boolean';
		$this-&gt;assertEqual($result, $expected);

		$result = $this-&gt;db-&gt;column('boolean');
</codefragment>
  </duplication>
  <duplication lines="7" tokens="41">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysql.test.php" line="759"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysqli.test.php" line="319"/>
    <codefragment>	function testReadTableParameters() {
		$this-&gt;db-&gt;cacheSources = $this-&gt;db-&gt;testing = false;
		$this-&gt;db-&gt;query('CREATE TABLE ' . $this-&gt;db-&gt;fullTableName('tinyint') . ' (id int(11) AUTO_INCREMENT, bool tinyint(1), small_int tinyint(2), primary key(id)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;');
		$result = $this-&gt;db-&gt;readTableParameters('tinyint');
		$expected = array(
			'charset' =&gt; 'utf8',
			'collate' =&gt; 'utf8_unicode_ci',
</codefragment>
  </duplication>
  <duplication lines="40" tokens="231">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysql.test.php" line="108"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_postgres.test.php" line="109"/>
    <codefragment>	function find($conditions = null, $fields = null, $order = null, $recursive = null) {
		return $conditions;
	}

/**
 * findAll method
 *
 * @param mixed $conditions
 * @param mixed $fields
 * @param mixed $order
 * @param mixed $recursive
 * @access public
 * @return void
 */
	function findAll($conditions = null, $fields = null, $order = null, $recursive = null) {
		return $conditions;
	}

/**
 * schema method
 *
 * @access public
 * @return void
 */
	function schema() {
		return array(
			'id'		=&gt; array('type' =&gt; 'integer', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '8'),
			'client_id'	=&gt; array('type' =&gt; 'integer', 'null' =&gt; '', 'default' =&gt; '0', 'length' =&gt; '11'),
			'name'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
			'login'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
			'passwd'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
			'addr_1'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
			'addr_2'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '25'),
			'zip_code'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'city'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'country'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'phone'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'fax'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
			'url'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
			'email'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
</codefragment>
  </duplication>
  <duplication lines="41" tokens="212">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysql.test.php" line="586"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_postgres.test.php" line="711"/>
    <codefragment>		$this-&gt;db-&gt;cacheSources = $this-&gt;db-&gt;testing = false;

		$schema1 =&amp; new CakeSchema(array(
			'name' =&gt; 'AlterTest1',
			'connection' =&gt; 'test_suite',
			'altertest' =&gt; array(
				'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0),
				'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'length' =&gt; 50),
				'group1' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true),
				'group2' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true)
		)));
		$this-&gt;db-&gt;query($this-&gt;db-&gt;createSchema($schema1));

		$schema2 =&amp; new CakeSchema(array(
			'name' =&gt; 'AlterTest2',
			'connection' =&gt; 'test_suite',
			'altertest' =&gt; array(
				'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0),
				'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'length' =&gt; 50),
				'group1' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true),
				'group2' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true),
				'indexes' =&gt; array(
					'name_idx' =&gt; array('column' =&gt; 'name', 'unique' =&gt; 0),
					'group_idx' =&gt; array('column' =&gt; 'group1', 'unique' =&gt; 0),
					'compound_idx' =&gt; array('column' =&gt; array('group1', 'group2'), 'unique' =&gt; 0),
					'PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1))
		)));
		$this-&gt;db-&gt;query($this-&gt;db-&gt;alterSchema($schema2-&gt;compare($schema1)));

		$indexes = $this-&gt;db-&gt;index('altertest');
		$this-&gt;assertEqual($schema2-&gt;tables['altertest']['indexes'], $indexes);

		// Change three indexes, delete one and add another one
		$schema3 =&amp; new CakeSchema(array(
			'name' =&gt; 'AlterTest3',
			'connection' =&gt; 'test_suite',
			'altertest' =&gt; array(
				'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0),
				'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'length' =&gt; 50),
				'group1' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true),
				'group2' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true),
</codefragment>
  </duplication>
  <duplication lines="18" tokens="80">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mysql.test.php" line="724"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_postgres.test.php" line="854"/>
    <codefragment>	function testAlteringTwoTables() {
		$schema1 =&amp; new CakeSchema(array(
			'name' =&gt; 'AlterTest1',
			'connection' =&gt; 'test_suite',
			'altertest' =&gt; array(
				'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0),
				'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'length' =&gt; 50),
			),
			'other_table' =&gt; array(
				'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0),
				'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'length' =&gt; 50),
			)
		));
		$schema2 =&amp; new CakeSchema(array(
			'name' =&gt; 'AlterTest1',
			'connection' =&gt; 'test_suite',
			'altertest' =&gt; array(
				'id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; 0),
</codefragment>
  </duplication>
  <duplication lines="10" tokens="129">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo/dbo_mssql.test.php" line="164"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo_source.test.php" line="58"/>
    <codefragment>		'client_id'	=&gt; array('type' =&gt; 'integer', 'null' =&gt; '', 'default' =&gt; '0', 'length' =&gt; '11'),
		'name'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
		'login'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '', 'default' =&gt; '', 'length' =&gt; '255'),
		'passwd'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
		'addr_1'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '255'),
		'addr_2'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '25'),
		'zip_code'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'city'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'country'	=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
		'phone'		=&gt; array('type' =&gt; 'string', 'null' =&gt; '1', 'default' =&gt; '', 'length' =&gt; '155'),
</codefragment>
  </duplication>
  <duplication lines="6" tokens="22">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo_source.test.php" line="1696"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo_source.test.php" line="1728"/>
    <codefragment>		$resultSet = null;
		$null = null;

		$params = &amp;$this-&gt;_prepareAssociationQuery($this-&gt;Model, $queryData, $binding);

		$result = $this-&gt;testDb-&gt;generateAssociationQuery($this-&gt;Model, $params['linkModel'], $params['type'], $params['assoc'], $params['assocData'], $queryData, $params['external'], $resultSet);
</codefragment>
  </duplication>
  <duplication lines="6" tokens="14">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo_source.test.php" line="3099"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo_source.test.php" line="3143"/>
    <codefragment>					'id' =&gt; '2', 'comment' =&gt; 'Comment 2', 'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
				)
			)
		);
		$this-&gt;testDb-&gt;__mergeAssociation($data, $merge, 'Comment', 'hasMany');
		$this-&gt;assertEqual($data, $expected);
</codefragment>
  </duplication>
  <duplication lines="11" tokens="42">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo_source.test.php" line="3204"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/datasources/dbo_source.test.php" line="3245"/>
    <codefragment>		$this-&gt;assertEqual($data, $expected);

		$data = array(
			'Article' =&gt; array(
				'id' =&gt; '1', 'user_id' =&gt; '1', 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body', 'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
			)
		);
		$merge = array(
			array(
				'Tag' =&gt; array(
					'id' =&gt; '1', 'tag' =&gt; 'Tag 1', 'created' =&gt; '2007-03-17 01:16:23', 'updated' =&gt; '2007-03-17 01:18:31'
</codefragment>
  </duplication>
  <duplication lines="7" tokens="111">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_behavior.test.php" line="621"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_behavior.test.php" line="693"/>
    <codefragment>		$Apple-&gt;Behaviors-&gt;attach('Test', array('afterFind' =&gt; 'modify'));
		$expected = array(
			array('id' =&gt; '1', 'apple_id' =&gt; '2', 'color' =&gt; 'Red 1', 'name' =&gt; 'Red Apple 1', 'created' =&gt; '2006-11-22 10:38:58', 'date' =&gt; '1951-01-04', 'modified' =&gt; '2006-12-01 13:31:26', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '2', 'apple_id' =&gt; '1', 'color' =&gt; 'Bright Red 1', 'name' =&gt; 'Bright Red Apple', 'created' =&gt; '2006-11-22 10:43:13', 'date' =&gt; '2014-01-01', 'modified' =&gt; '2006-11-30 18:38:10', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '3', 'apple_id' =&gt; '2', 'color' =&gt; 'blue green', 'name' =&gt; 'green blue', 'created' =&gt; '2006-12-25 05:13:36', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:23:24', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '4', 'apple_id' =&gt; '2', 'color' =&gt; 'Blue Green', 'name' =&gt; 'Test Name', 'created' =&gt; '2006-12-25 05:23:36', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:23:36', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '5', 'apple_id' =&gt; '5', 'color' =&gt; 'Green', 'name' =&gt; 'Blue Green', 'created' =&gt; '2006-12-25 05:24:06', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:29:16', 'mytime' =&gt; '22:57:17'),
</codefragment>
  </duplication>
  <duplication lines="7" tokens="119">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_behavior.test.php" line="693"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_behavior.test.php" line="764"/>
    <codefragment>		$Apple-&gt;Child-&gt;Behaviors-&gt;attach('Test', array('after' =&gt; 'modify'));
		$expected = array(
			array('id' =&gt; '1', 'apple_id' =&gt; '2', 'color' =&gt; 'Red 1', 'name' =&gt; 'Red Apple 1', 'created' =&gt; '2006-11-22 10:38:58', 'date' =&gt; '1951-01-04', 'modified' =&gt; '2006-12-01 13:31:26', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '2', 'apple_id' =&gt; '1', 'color' =&gt; 'Bright Red 1', 'name' =&gt; 'Bright Red Apple', 'created' =&gt; '2006-11-22 10:43:13', 'date' =&gt; '2014-01-01', 'modified' =&gt; '2006-11-30 18:38:10', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '3', 'apple_id' =&gt; '2', 'color' =&gt; 'blue green', 'name' =&gt; 'green blue', 'created' =&gt; '2006-12-25 05:13:36', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:23:24', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '4', 'apple_id' =&gt; '2', 'color' =&gt; 'Blue Green', 'name' =&gt; 'Test Name', 'created' =&gt; '2006-12-25 05:23:36', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:23:36', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '5', 'apple_id' =&gt; '5', 'color' =&gt; 'Green', 'name' =&gt; 'Blue Green', 'created' =&gt; '2006-12-25 05:24:06', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:29:16', 'mytime' =&gt; '22:57:17'),
</codefragment>
  </duplication>
  <duplication lines="7" tokens="119">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_behavior.test.php" line="693"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_behavior.test.php" line="830"/>
    <codefragment>		$Apple-&gt;Child-&gt;Behaviors-&gt;attach('Test', array('after' =&gt; 'modify'));
		$expected = array(
			array('id' =&gt; '1', 'apple_id' =&gt; '2', 'color' =&gt; 'Red 1', 'name' =&gt; 'Red Apple 1', 'created' =&gt; '2006-11-22 10:38:58', 'date' =&gt; '1951-01-04', 'modified' =&gt; '2006-12-01 13:31:26', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '2', 'apple_id' =&gt; '1', 'color' =&gt; 'Bright Red 1', 'name' =&gt; 'Bright Red Apple', 'created' =&gt; '2006-11-22 10:43:13', 'date' =&gt; '2014-01-01', 'modified' =&gt; '2006-11-30 18:38:10', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '3', 'apple_id' =&gt; '2', 'color' =&gt; 'blue green', 'name' =&gt; 'green blue', 'created' =&gt; '2006-12-25 05:13:36', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:23:24', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '4', 'apple_id' =&gt; '2', 'color' =&gt; 'Blue Green', 'name' =&gt; 'Test Name', 'created' =&gt; '2006-12-25 05:23:36', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:23:36', 'mytime' =&gt; '22:57:17'),
			array('id' =&gt; '5', 'apple_id' =&gt; '5', 'color' =&gt; 'Green', 'name' =&gt; 'Blue Green', 'created' =&gt; '2006-12-25 05:24:06', 'date' =&gt; '2006-12-25', 'modified' =&gt; '2006-12-25 05:29:16', 'mytime' =&gt; '22:57:17'),
</codefragment>
  </duplication>
  <duplication lines="8" tokens="24">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_delete.test.php" line="131"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_delete.test.php" line="499"/>
    <codefragment>		$result = $TestModel-&gt;ArticlesTag-&gt;find('all');
		$expected = array(
			array('ArticlesTag' =&gt; array('article_id' =&gt; '1', 'tag_id' =&gt; '1')),
			array('ArticlesTag' =&gt; array('article_id' =&gt; '1', 'tag_id' =&gt; '2')),
			array('ArticlesTag' =&gt; array('article_id' =&gt; '2', 'tag_id' =&gt; '1')),
			array('ArticlesTag' =&gt; array('article_id' =&gt; '2', 'tag_id' =&gt; '3'))
			);
		$this-&gt;assertEqual($result, $expected);
</codefragment>
  </duplication>
  <duplication lines="28" tokens="74">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="428"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="489"/>
    <codefragment>				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26',
						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
</codefragment>
  </duplication>
  <duplication lines="6" tokens="15">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="555"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="601"/>
    <codefragment>				'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
</codefragment>
  </duplication>
  <duplication lines="32" tokens="84">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="426"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="700"/>
    <codefragment>					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26',
						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
</codefragment>
  </duplication>
  <duplication lines="26" tokens="84">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="426"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="782"/>
    <codefragment>					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26',
						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
</codefragment>
  </duplication>
  <duplication lines="9" tokens="24">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="890"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="940"/>
    <codefragment>				'Parent' =&gt; array(
					'id' =&gt; 5,
					'apple_id' =&gt; 5,
					'color' =&gt; 'Green',
					'name' =&gt; 'Blue Green',
					'created' =&gt; '2006-12-25 05:24:06',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:16',
					'mytime' =&gt; '22:57:17',
</codefragment>
  </duplication>
  <duplication lines="9" tokens="24">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="656"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="986"/>
    <codefragment>						array(
							'id' =&gt; 4,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Blue Green',
							'name' =&gt; 'Test Name',
							'created' =&gt; '2006-12-25 05:23:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:36',
							'mytime' =&gt; '22:57:17',
</codefragment>
  </duplication>
  <duplication lines="6" tokens="15">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="848"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1060"/>
    <codefragment>					array(
						'id' =&gt; 6,
						'apple_id' =&gt; 4,
						'color' =&gt; 'My new appleOrange',
						'name' =&gt; 'My new apple',
						'created' =&gt; '2006-12-25 05:29:39',
</codefragment>
  </duplication>
  <duplication lines="8" tokens="21">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="415"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1102"/>
    <codefragment>		$result = $TestModel-&gt;find('all');
		$expected = array(
			array(
				'Apple' =&gt; array (
					'id' =&gt; 1,
					'apple_id' =&gt; 2,
					'color' =&gt; 'Red 1',
					'name' =&gt; 'Red Apple 1',
</codefragment>
  </duplication>
  <duplication lines="98" tokens="249">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="452"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1133"/>
    <codefragment>					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 3,
							'apple_id' =&gt; 2,
							'color' =&gt; 'blue green',
							'name' =&gt; 'green blue',
							'created' =&gt; '2006-12-25 05:13:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:24',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 4,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Blue Green',
							'name' =&gt; 'Test Name',
							'created' =&gt; '2006-12-25 05:23:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:36',
							'mytime' =&gt; '22:57:17'
					))),
					'Sample' =&gt; array(
						'id' =&gt;'',
						'apple_id' =&gt; '',
						'name' =&gt; ''
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 2,
							'apple_id' =&gt; 1,
							'color' =&gt; 'Bright Red 1',
							'name' =&gt; 'Bright Red Apple',
							'created' =&gt; '2006-11-22 10:43:13',
							'date' =&gt; '2014-01-01',
							'modified' =&gt; '2006-11-30 18:38:10',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							'Sample' =&gt; array(
								'id' =&gt; 2,
								'apple_id' =&gt; 2,
								'name' =&gt; 'sample2'
							),
							'Child' =&gt; array(
								array(
									'id' =&gt; 1,
									'apple_id' =&gt; 2,
									'color' =&gt; 'Red 1',
									'name' =&gt; 'Red Apple 1',
									'created' =&gt; '2006-11-22 10:38:58',
									'date' =&gt; '1951-01-04',
									'modified' =&gt; '2006-12-01 13:31:26',
									'mytime' =&gt; '22:57:17'
								),
								array(
									'id' =&gt; 3,
									'apple_id' =&gt; 2,
									'color' =&gt; 'blue green',
									'name' =&gt; 'green blue',
									'created' =&gt; '2006-12-25 05:13:36',
									'date' =&gt; '2006-12-25',
									'modified' =&gt; '2006-12-25 05:23:24',
									'mytime' =&gt; '22:57:17'
								),
								array(
									'id' =&gt; 4,
									'apple_id' =&gt; 2,
									'color' =&gt; 'Blue Green',
									'name' =&gt; 'Test Name',
									'created' =&gt; '2006-12-25 05:23:36',
									'date' =&gt; '2006-12-25',
									'modified' =&gt; '2006-12-25 05:23:36',
									'mytime' =&gt; '22:57:17'
			))))),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
</codefragment>
  </duplication>
  <duplication lines="122" tokens="323">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="575"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1255"/>
    <codefragment>						'Child' =&gt; array(
							array(
								'id' =&gt; 2,
								'apple_id' =&gt; 1,
								'color' =&gt; 'Bright Red 1',
								'name' =&gt; 'Bright Red Apple',
								'created' =&gt; '2006-11-22 10:43:13',
								'date' =&gt; '2014-01-01',
								'modified' =&gt; '2006-11-30 18:38:10',
								'mytime' =&gt; '22:57:17'
					))),
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2',
						'Apple' =&gt; array(
							'id' =&gt; 2,
							'apple_id' =&gt; 1,
							'color' =&gt; 'Bright Red 1',
							'name' =&gt; 'Bright Red Apple',
							'created' =&gt; '2006-11-22 10:43:13',
							'date' =&gt; '2014-01-01',
							'modified' =&gt; '2006-11-30 18:38:10',
							'mytime' =&gt; '22:57:17'
					)),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 2,
								'apple_id' =&gt; 1,
								'color' =&gt; 'Bright Red 1',
								'name' =&gt; 'Bright Red Apple',
								'created' =&gt; '2006-11-22 10:43:13',
								'date' =&gt; '2014-01-01',
								'modified' =&gt; '2006-11-30 18:38:10',
								'mytime' =&gt; '22:57:17'
							),
							'Sample' =&gt; array(),
							'Child' =&gt; array(
								array(
									'id' =&gt; 2,
									'apple_id' =&gt; 1,
									'color' =&gt; 'Bright Red 1',
									'name' =&gt; 'Bright Red Apple',
									'created' =&gt; '2006-11-22 10:43:13',
									'date' =&gt; '2014-01-01',
									'modified' =&gt; '2006-11-30 18:38:10',
									'mytime' =&gt; '22:57:17'
						))),
						array(
							'id' =&gt; 3,
							'apple_id' =&gt; 2,
							'color' =&gt; 'blue green',
							'name' =&gt; 'green blue',
							'created' =&gt; '2006-12-25 05:13:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:24',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 2,
								'apple_id' =&gt; 1,
								'color' =&gt; 'Bright Red 1',
								'name' =&gt; 'Bright Red Apple',
								'created' =&gt; '2006-11-22 10:43:13',
								'date' =&gt; '2014-01-01',
								'modified' =&gt; '2006-11-30 18:38:10',
								'mytime' =&gt; '22:57:17'
							),
							'Sample' =&gt; array(
								'id' =&gt; 1,
								'apple_id' =&gt; 3,
								'name' =&gt; 'sample1'
						)),
						array(
							'id' =&gt; 4,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Blue Green',
							'name' =&gt; 'Test Name',
							'created' =&gt; '2006-12-25 05:23:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:36',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 2,
								'apple_id' =&gt; 1,
								'color' =&gt; 'Bright Red 1',
								'name' =&gt; 'Bright Red Apple',
								'created' =&gt; '2006-11-22 10:43:13',
								'date' =&gt; '2014-01-01',
								'modified' =&gt; '2006-11-30 18:38:10',
								'mytime' =&gt; '22:57:17'
							),
							'Sample' =&gt; array(
								'id' =&gt; 3,
								'apple_id' =&gt; 4,
								'name' =&gt; 'sample3'
							),
							'Child' =&gt; array(
								array(
									'id' =&gt; 6,
									'apple_id' =&gt; 4,
									'color' =&gt; 'My new appleOrange',
									'name' =&gt; 'My new apple',
									'created' =&gt; '2006-12-25 05:29:39',
									'date' =&gt; '2006-12-25',
									'modified' =&gt; '2006-12-25 05:29:39',
									'mytime' =&gt; '22:57:17'
			))))),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 3,
					'apple_id' =&gt; 2,
					'color' =&gt; 'blue green',
					'name' =&gt; 'green blue',
</codefragment>
  </duplication>
  <duplication lines="74" tokens="191">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1113"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1380"/>
    <codefragment>					'mytime' =&gt; '22:57:17'),
					'Parent' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 1,
						'color' =&gt; 'Bright Red 1',
						'name' =&gt; 'Bright Red Apple',
						'created' =&gt; '2006-11-22 10:43:13',
						'date' =&gt; '2014-01-01',
						'modified' =&gt; '2006-11-30 18:38:10',
						'mytime' =&gt; '22:57:17',
						'Parent' =&gt; array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						'Child' =&gt; array(
							array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 3,
								'apple_id' =&gt; 2,
								'color' =&gt; 'blue green',
								'name' =&gt; 'green blue',
								'created' =&gt; '2006-12-25 05:13:36',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:23:24',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 4,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Blue Green',
								'name' =&gt; 'Test Name',
								'created' =&gt; '2006-12-25 05:23:36',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:23:36',
								'mytime' =&gt; '22:57:17'
					))),
					'Sample' =&gt; array(
						'id' =&gt;'',
						'apple_id' =&gt; '',
						'name' =&gt; ''
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 2,
							'apple_id' =&gt; 1,
							'color' =&gt; 'Bright Red 1',
							'name' =&gt; 'Bright Red Apple',
							'created' =&gt; '2006-11-22 10:43:13',
							'date' =&gt; '2014-01-01',
							'modified' =&gt; '2006-11-30 18:38:10',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
</codefragment>
  </duplication>
  <duplication lines="104" tokens="274">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1113"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1457"/>
    <codefragment>					'mytime' =&gt; '22:57:17'),
					'Parent' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 1,
						'color' =&gt; 'Bright Red 1',
						'name' =&gt; 'Bright Red Apple',
						'created' =&gt; '2006-11-22 10:43:13',
						'date' =&gt; '2014-01-01',
						'modified' =&gt; '2006-11-30 18:38:10',
						'mytime' =&gt; '22:57:17',
						'Parent' =&gt; array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						'Child' =&gt; array(
							array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 3,
								'apple_id' =&gt; 2,
								'color' =&gt; 'blue green',
								'name' =&gt; 'green blue',
								'created' =&gt; '2006-12-25 05:13:36',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:23:24',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 4,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Blue Green',
								'name' =&gt; 'Test Name',
								'created' =&gt; '2006-12-25 05:23:36',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:23:36',
								'mytime' =&gt; '22:57:17'
					))),
					'Sample' =&gt; array(
						'id' =&gt;'',
						'apple_id' =&gt; '',
						'name' =&gt; ''
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 2,
							'apple_id' =&gt; 1,
							'color' =&gt; 'Bright Red 1',
							'name' =&gt; 'Bright Red Apple',
							'created' =&gt; '2006-11-22 10:43:13',
							'date' =&gt; '2014-01-01',
							'modified' =&gt; '2006-11-30 18:38:10',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							'Sample' =&gt; array(
								'id' =&gt; 2,
								'apple_id' =&gt; 2,
								'name' =&gt; 'sample2'
							),
							'Child' =&gt; array(
								array(
									'id' =&gt; 1,
									'apple_id' =&gt; 2,
									'color' =&gt; 'Red 1',
									'name' =&gt; 'Red Apple 1',
									'created' =&gt; '2006-11-22 10:38:58',
									'date' =&gt; '1951-01-04',
									'modified' =&gt; '2006-12-01 13:31:26',
									'mytime' =&gt; '22:57:17'
								),
								array(
									'id' =&gt; 3,
									'apple_id' =&gt; 2,
									'color' =&gt; 'blue green',
									'name' =&gt; 'green blue',
									'created' =&gt; '2006-12-25 05:13:36',
									'date' =&gt; '2006-12-25',
									'modified' =&gt; '2006-12-25 05:23:24',
									'mytime' =&gt; '22:57:17'
								),
								array(
									'id' =&gt; 4,
</codefragment>
  </duplication>
  <duplication lines="67" tokens="176">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="914"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1585"/>
    <codefragment>					'Child' =&gt; array(
						array(
							'id' =&gt; 5,
							'apple_id' =&gt; 5,
							'color' =&gt; 'Green',
							'name' =&gt; 'Blue Green',
							'created' =&gt; '2006-12-25 05:24:06',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:29:16',
							'mytime' =&gt; '22:57:17'
				))),
				'Sample' =&gt; array(
					'id' =&gt; 4,
					'apple_id' =&gt; 5,
					'name' =&gt; 'sample4',
					'Apple' =&gt; array(
						'id' =&gt; 5,
						'apple_id' =&gt; 5,
						'color' =&gt; 'Green',
						'name' =&gt; 'Blue Green',
						'created' =&gt; '2006-12-25 05:24:06',
						'date' =&gt; '2006-12-25',
						'modified' =&gt; '2006-12-25 05:29:16',
						'mytime' =&gt; '22:57:17'
					)),
					'Child' =&gt; array(
						array(
							'id' =&gt; 5,
							'apple_id' =&gt; 5,
							'color' =&gt; 'Green',
							'name' =&gt; 'Blue Green',
							'created' =&gt; '2006-12-25 05:24:06',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:29:16',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 5,
								'apple_id' =&gt; 5,
								'color' =&gt; 'Green',
								'name' =&gt; 'Blue Green',
								'created' =&gt; '2006-12-25 05:24:06',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:29:16',
								'mytime' =&gt; '22:57:17'
							),
							'Sample' =&gt; array(
								'id' =&gt; 4,
								'apple_id' =&gt; 5,
								'name' =&gt; 'sample4'
							),
							'Child' =&gt; array(
								array(
									'id' =&gt; 5,
									'apple_id' =&gt; 5,
									'color' =&gt; 'Green',
									'name' =&gt; 'Blue Green',
									'created' =&gt; '2006-12-25 05:24:06',
									'date' =&gt; '2006-12-25',
									'modified' =&gt; '2006-12-25 05:29:16',
									'mytime' =&gt; '22:57:17'
			))))),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 6,
					'apple_id' =&gt; 4,
					'color' =&gt; 'My new appleOrange',
					'name' =&gt; 'My new apple',
</codefragment>
  </duplication>
  <duplication lines="44" tokens="112">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1010"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1676"/>
    <codefragment>					'Child' =&gt; array(
						array(
							'id' =&gt; 6,
							'apple_id' =&gt; 4,
							'color' =&gt; 'My new appleOrange',
							'name' =&gt; 'My new apple',
							'created' =&gt; '2006-12-25 05:29:39',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:29:39',
							'mytime' =&gt; '22:57:17'
				))),
				'Sample' =&gt; array(
					'id' =&gt; '',
					'apple_id' =&gt; '',
					'name' =&gt; ''
				),
				'Child' =&gt; array(
					array(
						'id' =&gt; 7,
						'apple_id' =&gt; 6,
						'color' =&gt; 'Some wierd color',
						'name' =&gt; 'Some odd color',
						'created' =&gt; '2006-12-25 05:34:21',
						'date' =&gt; '2006-12-25',
						'modified' =&gt; '2006-12-25 05:34:21',
						'mytime' =&gt; '22:57:17',
						'Parent' =&gt; array(
							'id' =&gt; 6,
							'apple_id' =&gt; 4,
							'color' =&gt; 'My new appleOrange',
							'name' =&gt; 'My new apple',
							'created' =&gt; '2006-12-25 05:29:39',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:29:39',
							'mytime' =&gt; '22:57:17'
						),
						'Sample' =&gt; array()
			))),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 7,
					'apple_id' =&gt; 6,
					'color' =&gt;
					'Some wierd color',
</codefragment>
  </duplication>
  <duplication lines="42" tokens="115">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1100"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1769"/>
    <codefragment>		$this-&gt;assertTrue($result);

		$result = $TestModel-&gt;find('all');
		$expected = array(
			array(
				'Apple' =&gt; array(
					'id' =&gt; 1,
					'apple_id' =&gt; 2,
					'color' =&gt; 'Red 1',
					'name' =&gt; 'Red Apple 1',
					'created' =&gt; '2006-11-22 10:38:58',
					'date' =&gt; '1951-01-04',
					'modified' =&gt; '2006-12-01 13:31:26',
					'mytime' =&gt; '22:57:17'),
					'Parent' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 1,
						'color' =&gt; 'Bright Red 1',
						'name' =&gt; 'Bright Red Apple',
						'created' =&gt; '2006-11-22 10:43:13',
						'date' =&gt; '2014-01-01',
						'modified' =&gt; '2006-11-30 18:38:10',
						'mytime' =&gt; '22:57:17',
						'Parent' =&gt; array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						'Child' =&gt; array(
							array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
</codefragment>
  </duplication>
  <duplication lines="29" tokens="81">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="544"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1839"/>
    <codefragment>			array(
				'Apple' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26',
						'mytime' =&gt; '22:57:17',
						'Parent' =&gt; array(
							'id' =&gt; 2,
							'apple_id' =&gt; 1,
							'color' =&gt; 'Bright Red 1',
							'name' =&gt; 'Bright Red Apple',
							'created' =&gt; '2006-11-22 10:43:13',
							'date' =&gt; '2014-01-01',
							'modified' =&gt; '2006-11-30 18:38:10',
							'mytime' =&gt; '22:57:17'
</codefragment>
  </duplication>
  <duplication lines="51" tokens="134">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="689"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1892"/>
    <codefragment>									'mytime' =&gt; '22:57:17'
			))))),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 3,
					'apple_id' =&gt; 2,
					'color' =&gt; 'blue green',
					'name' =&gt; 'green blue',
					'created' =&gt; '2006-12-25 05:13:36',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:23:24',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26',
						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 3,
							'apple_id' =&gt; 2,
</codefragment>
  </duplication>
  <duplication lines="49" tokens="131">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="773"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1969"/>
    <codefragment>			array(
				'Apple' =&gt; array(
					'id' =&gt; 4,
					'apple_id' =&gt; 2,
					'color' =&gt; 'Blue Green',
					'name' =&gt; 'Test Name',
					'created' =&gt; '2006-12-25 05:23:36',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:23:36',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26', 'mytime' =&gt; '22:57:17'),
						'Sample' =&gt; array('id' =&gt; 2, 'apple_id' =&gt; 2, 'name' =&gt; 'sample2'),
						'Child' =&gt; array(
							array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 3,
								'apple_id' =&gt; 2,
								'color' =&gt; 'blue green',
								'name' =&gt; 'green blue',
								'created' =&gt; '2006-12-25 05:13:36',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:23:24',
								'mytime' =&gt; '22:57:17'
</codefragment>
  </duplication>
  <duplication lines="31" tokens="84">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="877"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2042"/>
    <codefragment>								'mytime' =&gt; '22:57:17'
			))))),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 5,
					'apple_id' =&gt; 5,
					'color' =&gt; 'Green',
					'name' =&gt; 'Blue Green',
					'created' =&gt; '2006-12-25 05:24:06',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:16',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 5,
					'apple_id' =&gt; 5,
					'color' =&gt; 'Green',
					'name' =&gt; 'Blue Green',
					'created' =&gt; '2006-12-25 05:24:06',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:16',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 5,
						'apple_id' =&gt; 5,
						'color' =&gt; 'Green',
						'name' =&gt; 'Blue Green',
						'created' =&gt; '2006-12-25 05:24:06',
						'date' =&gt; '2006-12-25',
						'modified' =&gt; '2006-12-25 05:29:16',
						'mytime' =&gt; '22:57:17'
</codefragment>
  </duplication>
  <duplication lines="30" tokens="79">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="965"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2089"/>
    <codefragment>								array(
									'id' =&gt; 5,
									'apple_id' =&gt; 5,
									'color' =&gt; 'Green',
									'name' =&gt; 'Blue Green',
									'created' =&gt; '2006-12-25 05:24:06',
									'date' =&gt; '2006-12-25',
									'modified' =&gt; '2006-12-25 05:29:16',
									'mytime' =&gt; '22:57:17'
			))))),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 6,
					'apple_id' =&gt; 4,
					'color' =&gt; 'My new appleOrange',
					'name' =&gt; 'My new apple',
					'created' =&gt; '2006-12-25 05:29:39',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:39',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 4,
					'apple_id' =&gt; 2,
					'color' =&gt; 'Blue Green',
					'name' =&gt; 'Test Name',
					'created' =&gt; '2006-12-25 05:23:36',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:23:36',
					'mytime' =&gt; '22:57:17',
</codefragment>
  </duplication>
  <duplication lines="20" tokens="54">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1048"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2145"/>
    <codefragment>			array(
				'Apple' =&gt; array(
					'id' =&gt; 7,
					'apple_id' =&gt; 6,
					'color' =&gt;
					'Some wierd color',
					'name' =&gt; 'Some odd color',
					'created' =&gt; '2006-12-25 05:34:21',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:34:21',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 6,
					'apple_id' =&gt; 4,
					'color' =&gt; 'My new appleOrange',
					'name' =&gt; 'My new apple',
					'created' =&gt; '2006-12-25 05:29:39',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:39',
</codefragment>
  </duplication>
  <duplication lines="96" tokens="252">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1100"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2198"/>
    <codefragment>		$this-&gt;assertTrue($result);

		$result = $TestModel-&gt;find('all');
		$expected = array(
			array(
				'Apple' =&gt; array(
					'id' =&gt; 1,
					'apple_id' =&gt; 2,
					'color' =&gt; 'Red 1',
					'name' =&gt; 'Red Apple 1',
					'created' =&gt; '2006-11-22 10:38:58',
					'date' =&gt; '1951-01-04',
					'modified' =&gt; '2006-12-01 13:31:26',
					'mytime' =&gt; '22:57:17'),
					'Parent' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 1,
						'color' =&gt; 'Bright Red 1',
						'name' =&gt; 'Bright Red Apple',
						'created' =&gt; '2006-11-22 10:43:13',
						'date' =&gt; '2014-01-01',
						'modified' =&gt; '2006-11-30 18:38:10',
						'mytime' =&gt; '22:57:17',
						'Parent' =&gt; array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						'Child' =&gt; array(
							array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 3,
								'apple_id' =&gt; 2,
								'color' =&gt; 'blue green',
								'name' =&gt; 'green blue',
								'created' =&gt; '2006-12-25 05:13:36',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:23:24',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 4,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Blue Green',
								'name' =&gt; 'Test Name',
								'created' =&gt; '2006-12-25 05:23:36',
								'date' =&gt; '2006-12-25',
								'modified' =&gt; '2006-12-25 05:23:36',
								'mytime' =&gt; '22:57:17'
					))),
					'Sample' =&gt; array(
						'id' =&gt;'',
						'apple_id' =&gt; '',
						'name' =&gt; ''
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 2,
							'apple_id' =&gt; 1,
							'color' =&gt; 'Bright Red 1',
							'name' =&gt; 'Bright Red Apple',
							'created' =&gt; '2006-11-22 10:43:13',
							'date' =&gt; '2014-01-01',
							'modified' =&gt; '2006-11-30 18:38:10',
							'mytime' =&gt; '22:57:17',
							'Parent' =&gt; array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							'Sample' =&gt; array(
								'id' =&gt; 2,
								'apple_id' =&gt; 2,
								'name' =&gt; 'sample2'
							),
							'Child' =&gt; array(
								array(
</codefragment>
  </duplication>
  <duplication lines="43" tokens="116">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="691"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2320"/>
    <codefragment>			array(
				'Apple' =&gt; array(
					'id' =&gt; 3,
					'apple_id' =&gt; 2,
					'color' =&gt; 'blue green',
					'name' =&gt; 'green blue',
					'created' =&gt; '2006-12-25 05:13:36',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:23:24',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26',
						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
</codefragment>
  </duplication>
  <duplication lines="43" tokens="116">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="773"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2391"/>
    <codefragment>			array(
				'Apple' =&gt; array(
					'id' =&gt; 4,
					'apple_id' =&gt; 2,
					'color' =&gt; 'Blue Green',
					'name' =&gt; 'Test Name',
					'created' =&gt; '2006-12-25 05:23:36',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:23:36',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 1,
						'apple_id' =&gt; 2,
						'color' =&gt; 'Red 1',
						'name' =&gt; 'Red Apple 1',
						'created' =&gt; '2006-11-22 10:38:58',
						'date' =&gt; '1951-01-04',
						'modified' =&gt; '2006-12-01 13:31:26', 'mytime' =&gt; '22:57:17'),
						'Sample' =&gt; array('id' =&gt; 2, 'apple_id' =&gt; 2, 'name' =&gt; 'sample2'),
						'Child' =&gt; array(
							array(
								'id' =&gt; 1,
								'apple_id' =&gt; 2,
								'color' =&gt; 'Red 1',
								'name' =&gt; 'Red Apple 1',
								'created' =&gt; '2006-11-22 10:38:58',
								'date' =&gt; '1951-01-04',
								'modified' =&gt; '2006-12-01 13:31:26',
								'mytime' =&gt; '22:57:17'
							),
							array(
								'id' =&gt; 3,
								'apple_id' =&gt; 2,
</codefragment>
  </duplication>
  <duplication lines="24" tokens="66">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="879"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2462"/>
    <codefragment>			array(
				'Apple' =&gt; array(
					'id' =&gt; 5,
					'apple_id' =&gt; 5,
					'color' =&gt; 'Green',
					'name' =&gt; 'Blue Green',
					'created' =&gt; '2006-12-25 05:24:06',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:16',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 5,
					'apple_id' =&gt; 5,
					'color' =&gt; 'Green',
					'name' =&gt; 'Blue Green',
					'created' =&gt; '2006-12-25 05:24:06',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:16',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 5,
						'apple_id' =&gt; 5,
						'color' =&gt; 'Green',
</codefragment>
  </duplication>
  <duplication lines="24" tokens="66">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="975"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2513"/>
    <codefragment>			array(
				'Apple' =&gt; array(
					'id' =&gt; 6,
					'apple_id' =&gt; 4,
					'color' =&gt; 'My new appleOrange',
					'name' =&gt; 'My new apple',
					'created' =&gt; '2006-12-25 05:29:39',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:39',
					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 4,
					'apple_id' =&gt; 2,
					'color' =&gt; 'Blue Green',
					'name' =&gt; 'Test Name',
					'created' =&gt; '2006-12-25 05:23:36',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:23:36',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 1,
						'color' =&gt; 'Bright Red 1',
</codefragment>
  </duplication>
  <duplication lines="37" tokens="97">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2129"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2548"/>
    <codefragment>				'Child' =&gt; array(
					array(
						'id' =&gt; 6,
						'apple_id' =&gt; 4,
						'color' =&gt; 'My new appleOrange',
						'name' =&gt; 'My new apple',
						'created' =&gt; '2006-12-25 05:29:39',
						'date' =&gt; '2006-12-25',
						'modified' =&gt; '2006-12-25 05:29:39',
						'mytime' =&gt; '22:57:17'
			))),
			'Sample' =&gt; array(
				'id' =&gt; '',
				'apple_id' =&gt; '',
				'name' =&gt; ''
		)),
		array(
			'Apple' =&gt; array(
				'id' =&gt; 7,
				'apple_id' =&gt; 6,
				'color' =&gt; 'Some wierd color',
				'name' =&gt; 'Some odd color',
				'created' =&gt; '2006-12-25 05:34:21',
				'date' =&gt; '2006-12-25',
				'modified' =&gt; '2006-12-25 05:34:21',
				'mytime' =&gt; '22:57:17'
			),
			'Parent' =&gt; array(
				'id' =&gt; 6,
				'apple_id' =&gt; 4,
				'color' =&gt; 'My new appleOrange',
				'name' =&gt; 'My new apple',
				'created' =&gt; '2006-12-25 05:29:39',
				'date' =&gt; '2006-12-25',
				'modified' =&gt; '2006-12-25 05:29:39',
				'mytime' =&gt; '22:57:17',
				'Parent' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="36" tokens="92">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="445"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2640"/>
    <codefragment>						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 3,
							'apple_id' =&gt; 2,
							'color' =&gt; 'blue green',
							'name' =&gt; 'green blue',
							'created' =&gt; '2006-12-25 05:13:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:24',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 4,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Blue Green',
							'name' =&gt; 'Test Name',
							'created' =&gt; '2006-12-25 05:23:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:36',
</codefragment>
  </duplication>
  <duplication lines="20" tokens="54">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="1869"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2703"/>
    <codefragment>					'Child' =&gt; array(
						array(
							'id' =&gt; 2,
							'apple_id' =&gt; 1,
							'color' =&gt; 'Bright Red 1',
							'name' =&gt; 'Bright Red Apple',
							'created' =&gt; '2006-11-22 10:43:13',
							'date' =&gt; '2014-01-01',
							'modified' =&gt; '2006-11-30 18:38:10',
							'mytime' =&gt; '22:57:17'
				))),
				'Sample' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 2,
					'name' =&gt; 'sample2',
					'Apple' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 1,
						'color' =&gt; 'Bright Red 1',
						'name' =&gt; 'Bright Red Apple',
</codefragment>
  </duplication>
  <duplication lines="56" tokens="146">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2630"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2737"/>
    <codefragment>					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 3,
							'apple_id' =&gt; 2,
							'color' =&gt; 'blue green',
							'name' =&gt; 'green blue',
							'created' =&gt; '2006-12-25 05:13:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:24',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 4,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Blue Green',
							'name' =&gt; 'Test Name',
							'created' =&gt; '2006-12-25 05:23:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:36',
							'mytime' =&gt; '22:57:17'
				))),
				'Sample' =&gt; array(
					'id' =&gt;'',
					'apple_id' =&gt; '',
					'name' =&gt; ''
			)),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
</codefragment>
  </duplication>
  <duplication lines="56" tokens="146">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2630"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2807"/>
    <codefragment>					'mytime' =&gt; '22:57:17'
				),
				'Parent' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
					'color' =&gt; 'Bright Red 1',
					'name' =&gt; 'Bright Red Apple',
					'created' =&gt; '2006-11-22 10:43:13',
					'date' =&gt; '2014-01-01',
					'modified' =&gt; '2006-11-30 18:38:10',
					'mytime' =&gt; '22:57:17',
					'Sample' =&gt; array(
						'id' =&gt; 2,
						'apple_id' =&gt; 2,
						'name' =&gt; 'sample2'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 1,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Red 1',
							'name' =&gt; 'Red Apple 1',
							'created' =&gt; '2006-11-22 10:38:58',
							'date' =&gt; '1951-01-04',
							'modified' =&gt; '2006-12-01 13:31:26',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 3,
							'apple_id' =&gt; 2,
							'color' =&gt; 'blue green',
							'name' =&gt; 'green blue',
							'created' =&gt; '2006-12-25 05:13:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:24',
							'mytime' =&gt; '22:57:17'
						),
						array(
							'id' =&gt; 4,
							'apple_id' =&gt; 2,
							'color' =&gt; 'Blue Green',
							'name' =&gt; 'Test Name',
							'created' =&gt; '2006-12-25 05:23:36',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:23:36',
							'mytime' =&gt; '22:57:17'
				))),
				'Sample' =&gt; array(
					'id' =&gt;'',
					'apple_id' =&gt; '',
					'name' =&gt; ''
			)),
			array(
				'Apple' =&gt; array(
					'id' =&gt; 2,
					'apple_id' =&gt; 1,
</codefragment>
  </duplication>
  <duplication lines="24" tokens="64">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="890"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2869"/>
    <codefragment>				'Parent' =&gt; array(
					'id' =&gt; 5,
					'apple_id' =&gt; 5,
					'color' =&gt; 'Green',
					'name' =&gt; 'Blue Green',
					'created' =&gt; '2006-12-25 05:24:06',
					'date' =&gt; '2006-12-25',
					'modified' =&gt; '2006-12-25 05:29:16',
					'mytime' =&gt; '22:57:17',
					'Parent' =&gt; array(
						'id' =&gt; 5,
						'apple_id' =&gt; 5,
						'color' =&gt; 'Green',
						'name' =&gt; 'Blue Green',
						'created' =&gt; '2006-12-25 05:24:06',
						'date' =&gt; '2006-12-25',
						'modified' =&gt; '2006-12-25 05:29:16',
						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 4,
						'apple_id' =&gt; 5,
						'name' =&gt; 'sample4'
					),
</codefragment>
  </duplication>
  <duplication lines="20" tokens="54">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2074"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2894"/>
    <codefragment>				'Child' =&gt; array(
					array(
						'id' =&gt; 5,
						'apple_id' =&gt; 5,
						'color' =&gt; 'Green',
						'name' =&gt; 'Blue Green',
						'created' =&gt; '2006-12-25 05:24:06',
						'date' =&gt; '2006-12-25',
						'modified' =&gt; '2006-12-25 05:29:16',
						'mytime' =&gt; '22:57:17'
			))),
			'Sample' =&gt; array(
				'id' =&gt; 4,
				'apple_id' =&gt; 5,
				'name' =&gt; 'sample4',
				'Apple' =&gt; array(
					'id' =&gt; 5,
					'apple_id' =&gt; 5,
					'color' =&gt; 'Green',
					'name' =&gt; 'Blue Green',
</codefragment>
  </duplication>
  <duplication lines="16" tokens="42">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2541"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="2937"/>
    <codefragment>						'mytime' =&gt; '22:57:17'
					),
					'Sample' =&gt; array(
						'id' =&gt; 3,
						'apple_id' =&gt; 4,
						'name' =&gt; 'sample3'
					),
					'Child' =&gt; array(
						array(
							'id' =&gt; 6,
							'apple_id' =&gt; 4,
							'color' =&gt; 'My new appleOrange',
							'name' =&gt; 'My new apple',
							'created' =&gt; '2006-12-25 05:29:39',
							'date' =&gt; '2006-12-25',
							'modified' =&gt; '2006-12-25 05:29:39',
</codefragment>
  </duplication>
  <duplication lines="19" tokens="44">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="3038"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="3122"/>
    <codefragment>		$expected = array(
			array(
				'Category' =&gt; array(
					'id' =&gt; '1',
					'parent_id' =&gt; '0',
					'name' =&gt; 'Category 1',
					'created' =&gt; '2007-03-18 15:30:23',
					'updated' =&gt; '2007-03-18 15:32:31'
				),
				'children' =&gt; array(
					array(
						'Category' =&gt; array(
							'id' =&gt; '2',
							'parent_id' =&gt; '1',
							'name' =&gt; 'Category 1.1',
							'created' =&gt; '2007-03-18 15:30:23',
							'updated' =&gt; '2007-03-18 15:32:31'
						),
						'children' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="6" tokens="15">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/behaviors/containable.test.php" line="255"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="4042"/>
    <codefragment>		$expected = array(
			array('Article' =&gt; array(
				'id' =&gt; 1, 'user_id' =&gt; 1, 'title' =&gt; 'First Article', 'body' =&gt; 'First Article Body',
				'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:39:23', 'updated' =&gt; '2007-03-18 10:41:31'
			)),
			array('Article' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="58" tokens="136">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="4095"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="4188"/>
    <codefragment>		$this-&gt;assertTrue($result);

		$result = $TestModel-&gt;find('all', array(
			'fields' =&gt; 'User.id, User.user'
		));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; '1',
					'user' =&gt; 'mariano'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '3',
						'article_id' =&gt; '1',
						'user_id' =&gt; '1',
						'comment' =&gt; 'Third Comment for First Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:49:23',
						'updated' =&gt; '2007-03-18 10:51:31'
					),
					array(
						'id' =&gt; '4',
						'article_id' =&gt; '1',
						'user_id' =&gt; '1',
						'comment' =&gt; 'Fourth Comment for First Article',
						'published' =&gt; 'N',
						'created' =&gt; '2007-03-18 10:51:23',
						'updated' =&gt; '2007-03-18 10:53:31'
					),
					array(
						'id' =&gt; '5',
						'article_id' =&gt; '2',
						'user_id' =&gt; '1',
						'comment' =&gt; 'First Comment for Second Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:53:23',
						'updated' =&gt; '2007-03-18 10:55:31'
			))),
			array(
				'User' =&gt; array(
					'id' =&gt; '2',
					'user' =&gt; 'nate'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '1',
						'article_id' =&gt; '1',
						'user_id' =&gt; '2',
						'comment' =&gt; 'First Comment for First Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:45:23',
						'updated' =&gt; '2007-03-18 10:47:31'
					),
					array(
						'id' =&gt; '6',
						'article_id' =&gt; '2',
						'user_id' =&gt; '2',
</codefragment>
  </duplication>
  <duplication lines="56" tokens="135">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="4097"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="4311"/>
    <codefragment>		$result = $TestModel-&gt;find('all', array(
			'fields' =&gt; 'User.id, User.user'
		));
		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; '1',
					'user' =&gt; 'mariano'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '3',
						'article_id' =&gt; '1',
						'user_id' =&gt; '1',
						'comment' =&gt; 'Third Comment for First Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:49:23',
						'updated' =&gt; '2007-03-18 10:51:31'
					),
					array(
						'id' =&gt; '4',
						'article_id' =&gt; '1',
						'user_id' =&gt; '1',
						'comment' =&gt; 'Fourth Comment for First Article',
						'published' =&gt; 'N',
						'created' =&gt; '2007-03-18 10:51:23',
						'updated' =&gt; '2007-03-18 10:53:31'
					),
					array(
						'id' =&gt; '5',
						'article_id' =&gt; '2',
						'user_id' =&gt; '1',
						'comment' =&gt; 'First Comment for Second Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:53:23',
						'updated' =&gt; '2007-03-18 10:55:31'
			))),
			array(
				'User' =&gt; array(
					'id' =&gt; '2',
					'user' =&gt; 'nate'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '1',
						'article_id' =&gt; '1',
						'user_id' =&gt; '2',
						'comment' =&gt; 'First Comment for First Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:45:23',
						'updated' =&gt; '2007-03-18 10:47:31'
					),
					array(
						'id' =&gt; '6',
						'article_id' =&gt; '2',
						'user_id' =&gt; '2',
</codefragment>
  </duplication>
  <duplication lines="27" tokens="64">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="4125"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="4434"/>
    <codefragment>					array(
						'id' =&gt; '5',
						'article_id' =&gt; '2',
						'user_id' =&gt; '1',
						'comment' =&gt; 'First Comment for Second Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:53:23',
						'updated' =&gt; '2007-03-18 10:55:31'
			))),
			array(
				'User' =&gt; array(
					'id' =&gt; '2',
					'user' =&gt; 'nate'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '1',
						'article_id' =&gt; '1',
						'user_id' =&gt; '2',
						'comment' =&gt; 'First Comment for First Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:45:23',
						'updated' =&gt; '2007-03-18 10:47:31'
					),
					array(
						'id' =&gt; '6',
						'article_id' =&gt; '2',
</codefragment>
  </duplication>
  <duplication lines="21" tokens="51">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_integration.test.php" line="241"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5200"/>
    <codefragment>			array(
				'Article' =&gt; array(
					'id' =&gt; '2',
					'user_id' =&gt; '3',
					'title' =&gt; 'Second Article',
					'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y',
					'created' =&gt; '2007-03-18 10:41:23',
					'updated' =&gt; '2007-03-18 10:43:31'
				),
				'User' =&gt; array(
					'id' =&gt; '3',
					'user' =&gt; 'larry',
					'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23',
					'updated' =&gt; '2007-03-17 01:22:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '5',
						'article_id' =&gt; '2',
</codefragment>
  </duplication>
  <duplication lines="26" tokens="72">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5565"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5630"/>
    <codefragment>		$expected = array(
			'CategoryThread' =&gt; array(
				'id' =&gt; 7,
				'parent_id' =&gt; 6,
				'name' =&gt; 'Category 2.1',
				'created' =&gt; '2007-03-18 15:30:23',
				'updated' =&gt; '2007-03-18 15:32:31'
			),
			'ParentCategory' =&gt; array(
				'id' =&gt; 6,
				'parent_id' =&gt; 5,
				'name' =&gt; 'Category 2',
				'created' =&gt; '2007-03-18 15:30:23',
				'updated' =&gt; '2007-03-18 15:32:31',
				'ParentCategory' =&gt; array(
					'id' =&gt; 5,
					'parent_id' =&gt; 4,
					'name' =&gt; 'Category 1.1.1.1',
					'created' =&gt; '2007-03-18 15:30:23',
					'updated' =&gt; '2007-03-18 15:32:31',
					'ParentCategory' =&gt; array(
						'id' =&gt; 4,
						'parent_id' =&gt; 3,
						'name' =&gt; 'Category 1.1.2',
						'created' =&gt; '2007-03-18 15:30:23',
						'updated' =&gt; '2007-03-18 15:32:31',
</codefragment>
  </duplication>
  <duplication lines="12" tokens="30">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5579"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5778"/>
    <codefragment>				'ParentCategory' =&gt; array(
					'id' =&gt; 5,
					'parent_id' =&gt; 4,
					'name' =&gt; 'Category 1.1.1.1',
					'created' =&gt; '2007-03-18 15:30:23',
					'updated' =&gt; '2007-03-18 15:32:31',
					'ParentCategory' =&gt; array(
						'id' =&gt; 4,
						'parent_id' =&gt; 3,
						'name' =&gt; 'Category 1.1.2',
						'created' =&gt; '2007-03-18 15:30:23',
						'updated' =&gt; '2007-03-18 15:32:31',
</codefragment>
  </duplication>
  <duplication lines="18" tokens="48">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5573"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5812"/>
    <codefragment>			'ParentCategory' =&gt; array(
				'id' =&gt; 6,
				'parent_id' =&gt; 5,
				'name' =&gt; 'Category 2',
				'created' =&gt; '2007-03-18 15:30:23',
				'updated' =&gt; '2007-03-18 15:32:31',
				'ParentCategory' =&gt; array(
					'id' =&gt; 5,
					'parent_id' =&gt; 4,
					'name' =&gt; 'Category 1.1.1.1',
					'created' =&gt; '2007-03-18 15:30:23',
					'updated' =&gt; '2007-03-18 15:32:31',
					'ParentCategory' =&gt; array(
						'id' =&gt; 4,
						'parent_id' =&gt; 3,
						'name' =&gt; 'Category 1.1.2',
						'created' =&gt; '2007-03-18 15:30:23',
						'updated' =&gt; '2007-03-18 15:32:31',
</codefragment>
  </duplication>
  <duplication lines="26" tokens="71">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5565"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5851"/>
    <codefragment>		$expected = array(
			'CategoryThread' =&gt; array(
				'id' =&gt; 7,
				'parent_id' =&gt; 6,
				'name' =&gt; 'Category 2.1',
				'created' =&gt; '2007-03-18 15:30:23',
				'updated' =&gt; '2007-03-18 15:32:31'
			),
			'ParentCategory' =&gt; array(
				'id' =&gt; 6,
				'parent_id' =&gt; 5,
				'name' =&gt; 'Category 2',
				'created' =&gt; '2007-03-18 15:30:23',
				'updated' =&gt; '2007-03-18 15:32:31',
				'ParentCategory' =&gt; array(
					'id' =&gt; 5,
					'parent_id' =&gt; 4,
					'name' =&gt; 'Category 1.1.1.1',
					'created' =&gt; '2007-03-18 15:30:23',
					'updated' =&gt; '2007-03-18 15:32:31',
					'ParentCategory' =&gt; array(
						'id' =&gt; 4,
						'parent_id' =&gt; 3,
						'name' =&gt; 'Category 1.1.2',
						'created' =&gt; '2007-03-18 15:30:23',
						'updated' =&gt; '2007-03-18 15:32:31',
</codefragment>
  </duplication>
  <duplication lines="8" tokens="21">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5931"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="6016"/>
    <codefragment>		$expected = array(
			array(
				'User' =&gt; array(
					'id' =&gt; '1',
					'user' =&gt; 'mariano',
					'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23',
					'updated' =&gt; '2007-03-17 01:18:31'
</codefragment>
  </duplication>
  <duplication lines="20" tokens="53">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_integration.test.php" line="242"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="6742"/>
    <codefragment>				'Article' =&gt; array(
					'id' =&gt; '2',
					'user_id' =&gt; '3',
					'title' =&gt; 'Second Article',
					'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y',
					'created' =&gt; '2007-03-18 10:41:23',
					'updated' =&gt; '2007-03-18 10:43:31'
				),
				'User' =&gt; array(
					'id' =&gt; '3',
					'user' =&gt; 'larry',
					'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23',
					'updated' =&gt; '2007-03-17 01:22:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '5',
						'article_id' =&gt; '2',
</codefragment>
  </duplication>
  <duplication lines="42" tokens="103">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_integration.test.php" line="173"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="6809"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; '1',
					'user_id' =&gt; '1',
					'title' =&gt; 'First Article',
					'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y',
					'created' =&gt; '2007-03-18 10:39:23',
					'updated' =&gt; '2007-03-18 10:41:31'
				),
				'User' =&gt; array(
					'id' =&gt; '1',
					'user' =&gt; 'mariano',
					'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:16:23',
					'updated' =&gt; '2007-03-17 01:18:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '1',
						'article_id' =&gt; '1',
						'user_id' =&gt; '2',
						'comment' =&gt; 'First Comment for First Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:45:23',
						'updated' =&gt; '2007-03-18 10:47:31'
					),
					array(
						'id' =&gt; '2',
						'article_id' =&gt; '1',
						'user_id' =&gt; '4',
						'comment' =&gt; 'Second Comment for First Article',
						'published' =&gt; 'Y',
						'created' =&gt; '2007-03-18 10:47:23',
						'updated' =&gt; '2007-03-18 10:49:31'
					),
					array(
						'id' =&gt; '3',
						'article_id' =&gt; '1',
						'user_id' =&gt; '1',
						'comment' =&gt; 'Third Comment for First Article',
</codefragment>
  </duplication>
  <duplication lines="12" tokens="36">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="6808"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="7117"/>
    <codefragment>		$result = $TestModel-&gt;find('all', array('conditions' =&gt; array('Article.user_id' =&gt; 1)));
		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; '1',
					'user_id' =&gt; '1',
					'title' =&gt; 'First Article',
					'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y',
					'created' =&gt; '2007-03-18 10:39:23',
					'updated' =&gt; '2007-03-18 10:41:31'
				),
</codefragment>
  </duplication>
  <duplication lines="6" tokens="15">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="6865"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="7158"/>
    <codefragment>				'Tag' =&gt; array(
					array(
						'id' =&gt; '1',
						'tag' =&gt; 'tag1',
						'created' =&gt; '2007-03-18 12:22:23',
						'updated' =&gt; '2007-03-18 12:24:31'
</codefragment>
  </duplication>
  <duplication lines="30" tokens="80">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="6901"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="7196"/>
    <codefragment>		$result = $TestModel-&gt;find('all', array(
			'conditions' =&gt; array('Article.user_id' =&gt; 3),
			'limit' =&gt; 1,
			'recursive' =&gt; 2
		));

		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; '2',
					'user_id' =&gt; '3',
					'title' =&gt; 'Second Article',
					'body' =&gt; 'Second Article Body',
					'published' =&gt; 'Y',
					'created' =&gt; '2007-03-18 10:41:23',
					'updated' =&gt; '2007-03-18 10:43:31'
				),
				'User' =&gt; array(
					'id' =&gt; '3',
					'user' =&gt; 'larry',
					'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
					'created' =&gt; '2007-03-17 01:20:23',
					'updated' =&gt; '2007-03-17 01:22:31'
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; '5',
						'article_id' =&gt; '2',
						'user_id' =&gt; '1',
						'comment' =&gt; 'First Comment for Second Article',
</codefragment>
  </duplication>
  <duplication lines="23" tokens="58">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_read.test.php" line="5199"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="1134"/>
    <codefragment>		$result = $TestModel-&gt;read(null, 2);
		$expected = array(
			'Article' =&gt; array(
				'id' =&gt; '2',
				'user_id' =&gt; '3',
				'title' =&gt; 'Second Article',
				'body' =&gt; 'Second Article Body',
				'published' =&gt; 'Y',
				'created' =&gt; '2007-03-18 10:41:23',
				'updated' =&gt; '2007-03-18 10:43:31'
			),
			'User' =&gt; array(
				'id' =&gt; '3',
				'user' =&gt; 'larry',
				'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99',
				'created' =&gt; '2007-03-17 01:20:23',
				'updated' =&gt; '2007-03-17 01:22:31'
			),
			'Comment' =&gt; array(
				array(
					'id' =&gt; '5',
					'article_id' =&gt; '2',
					'user_id' =&gt; '1',
</codefragment>
  </duplication>
  <duplication lines="12" tokens="43">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="1223"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="1328"/>
    <codefragment>		$data = array('Article' =&gt; array('id' =&gt; '2'), 'Tag' =&gt; array('Tag' =&gt; array(2, 3)));
		$result = $TestModel-&gt;set($data);
		$this-&gt;assertTrue($result);

		$result = $TestModel-&gt;save();
		$this-&gt;assertTrue($result);

		$TestModel-&gt;unbindModel(array(
			'belongsTo' =&gt; array('User'),
			'hasMany' =&gt; array('Comment')
		));
		$result = $TestModel-&gt;find(array('Article.id'=&gt;2), array('id', 'user_id', 'title', 'body'));
</codefragment>
  </duplication>
  <duplication lines="6" tokens="23">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="1196"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="1370"/>
    <codefragment>		$this-&gt;assertTrue($TestModel-&gt;set($data));
		$this-&gt;assertTrue($TestModel-&gt;save());

		$TestModel-&gt;unbindModel(array('belongsTo' =&gt; array('User'), 'hasMany' =&gt; array('Comment')));
		$result = $TestModel-&gt;find(array('Article.id' =&gt; 2), array('id', 'user_id', 'title', 'body'));
		$expected = array(
</codefragment>
  </duplication>
  <duplication lines="42" tokens="117">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="1912"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="1996"/>
    <codefragment>		$articles = $Article-&gt;find('all', array(
			'fields' =&gt; array('id','title'),
			'recursive' =&gt; -1
		));

		$comments = $Comment-&gt;find('all', array(
			'fields' =&gt; array('id','article_id','user_id','comment','published'), 'recursive' =&gt; -1));

		$this-&gt;assertEqual($articles, array(
			array('Article' =&gt; array(
				'id' =&gt; 1,
				'title' =&gt; 'First Article'
			)),
			array('Article' =&gt; array(
				'id' =&gt; 2,
				'title' =&gt; 'Second Article'
			)),
			array('Article' =&gt; array(
				'id' =&gt; 3,
				'title' =&gt; 'Third Article'
		))));

		$this-&gt;assertEqual($comments, array(
			array('Comment' =&gt; array(
				'id' =&gt; 1,
				'article_id' =&gt; 1,
				'user_id' =&gt; 2,
				'comment' =&gt; 'First Comment for First Article',
				'published' =&gt; 'Y'
			)),
			array('Comment' =&gt; array(
				'id' =&gt; 2,
				'article_id' =&gt; 1,
				'user_id' =&gt; 4,
				'comment' =&gt; 'Second Comment for First Article',
				'published' =&gt; 'Y'
			)),
			array('Comment' =&gt; array(
				'id' =&gt; 3,
				'article_id' =&gt; 1,
				'user_id' =&gt; 1,
				'comment' =&gt; 'Third Comment for First Article',
</codefragment>
  </duplication>
  <duplication lines="15" tokens="49">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="3156"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_write.test.php" line="3225"/>
    <codefragment>		$ts = date('Y-m-d H:i:s');
		$this-&gt;assertFalse($TestModel-&gt;saveAll($data));

		$result = $TestModel-&gt;find('all', array('recursive' =&gt; -1));
		$expected = array(
			array('Post' =&gt; array(
				'id' =&gt; '1',
				'author_id' =&gt; 1,
				'title' =&gt; 'First Post',
				'body' =&gt; 'First Post Body',
				'published' =&gt; 'Y',
				'created' =&gt; '2007-03-18 10:39:23',
				'updated' =&gt; '2007-03-18 10:41:31'
			)),
			array('Post' =&gt; array(
</codefragment>
  </duplication>
  <duplication lines="7" tokens="24">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/router.test.php" line="618"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/router.test.php" line="642"/>
    <codefragment>		$this-&gt;assertEqual($result, $expected);


		Router::reload();
		Router::parse('/');
		Router::setRequestInfo(array(
			array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'admin_add', 'pass' =&gt; array(), 'prefix' =&gt; 'admin', 'admin' =&gt; true, 'form' =&gt; array(), 'url' =&gt; array('url' =&gt; 'admin/pages/add')),
</codefragment>
  </duplication>
  <duplication lines="11" tokens="53">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/router.test.php" line="1458"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/router.test.php" line="1519"/>
    <codefragment>		$this-&gt;assertEqual($result, $expected);

		$result = Router::url(array('action' =&gt; 'edit', 1, 'protected' =&gt; true));
		$expected = '/protected/images/edit/1';
		$this-&gt;assertEqual($result, $expected);

		$result = Router::url(array('controller' =&gt; 'others', 'action' =&gt; 'edit', 1));
		$expected = '/others/edit/1';
		$this-&gt;assertEqual($result, $expected);

		$result = Router::url(array('controller' =&gt; 'others', 'action' =&gt; 'edit', 1, 'protected' =&gt; true));
</codefragment>
  </duplication>
  <duplication lines="10" tokens="103">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_integration.test.php" line="173"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="144"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; '1',
					'user_id' =&gt; '1',
					'title' =&gt; 'First Article',
					'body' =&gt; 'First Article Body',
					'published' =&gt; 'Y',
					'created' =&gt; '2007-03-18 10:39:23',
					'updated' =&gt; '2007-03-18 10:41:31'
</codefragment>
  </duplication>
  <duplication lines="6" tokens="52">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/model/model_integration.test.php" line="173"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="391"/>
    <codefragment>		$expected = array(
			array(
				'Article' =&gt; array(
					'id' =&gt; '1',
					'user_id' =&gt; '1',
					'title' =&gt; 'First Article',
</codefragment>
  </duplication>
  <duplication lines="14" tokens="33">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="657"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="754"/>
    <codefragment>		$this-&gt;assertEqual($r, $expected);

		$habtm = array(
			array(
				'Post' =&gt; array(
					'id' =&gt; 1,
					'title' =&gt; 'great post',
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; 1,
						'text' =&gt; 'foo',
						'User' =&gt; array(
							'id' =&gt; 1,
</codefragment>
  </duplication>
  <duplication lines="44" tokens="62">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="721"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="950"/>
    <codefragment>		$tree = array(
			array(
				'Category' =&gt; array('name' =&gt; 'Category 1'),
				'children' =&gt; array(array('Category' =&gt; array('name' =&gt; 'Category 1.1')))
			),
			array(
				'Category' =&gt; array('name' =&gt; 'Category 2'),
				'children' =&gt; array(
					array('Category' =&gt; array('name' =&gt; 'Category 2.1')),
					array('Category' =&gt; array('name' =&gt; 'Category 2.2'))
				)
			),
			array(
				'Category' =&gt; array('name' =&gt; 'Category 3'),
				'children' =&gt; array(array('Category' =&gt; array('name' =&gt; 'Category 3.1')))
			)
		);

		$expected = array(array('Category' =&gt; $tree[1]['Category']));
		$r = Set::extract('/Category[name=Category 2]', $tree);
		$this-&gt;assertEqual($r, $expected);

		$expected = array(
			array('Category' =&gt; $tree[1]['Category'], 'children' =&gt; $tree[1]['children'])
		);
		$r = Set::extract('/Category[name=Category 2]/..', $tree);
		$this-&gt;assertEqual($r, $expected);

		$expected = array(
			array('children' =&gt; $tree[1]['children'][0]),
			array('children' =&gt; $tree[1]['children'][1])
		);
		$r = Set::extract('/Category[name=Category 2]/../children', $tree);
		$this-&gt;assertEqual($r, $expected);

		$habtm = array(
			array(
				'Post' =&gt; array(
					'id' =&gt; 1,
					'title' =&gt; 'great post',
				),
				'Comment' =&gt; array(
					array(
						'id' =&gt; 1,
</codefragment>
  </duplication>
  <duplication lines="18" tokens="96">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="1789"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="1825"/>
    <codefragment>		$expected = array(2 =&gt; null, 14 =&gt; null, 25 =&gt; null);
		$this-&gt;assertIdentical($result, $expected);

		$result = Set::combine($a, '{n}.User.id', '{n}.User.Data');
		$expected = array(
			2 =&gt; array('user' =&gt; 'mariano.iglesias',	'name' =&gt; 'Mariano Iglesias'),
			14 =&gt; array('user' =&gt; 'phpnut',	'name' =&gt; 'Larry E. Masters'),
			25 =&gt; array('user' =&gt; 'gwoo',	'name' =&gt; 'The Gwoo'));
		$this-&gt;assertIdentical($result, $expected);

		$result = Set::combine($a, '{n}.User.id', '{n}.User.Data.name');
		$expected = array(
			2 =&gt; 'Mariano Iglesias',
			14 =&gt; 'Larry E. Masters',
			25 =&gt; 'The Gwoo');
		$this-&gt;assertIdentical($result, $expected);

		$result = Set::combine($a, '{n}.User.id', '{n}.User.Data', '{n}.User.group_id');
</codefragment>
  </duplication>
  <duplication lines="8" tokens="94">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="1917"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="1961"/>
    <codefragment>		'Array2' =&gt; array(
				0 =&gt; array('Array2Data1' =&gt; 1, 'Array2Data2' =&gt; 'Array2Data2 value 2', 'Array2Data3' =&gt; 'Array2Data3 value 2', 'Array2Data4' =&gt; 'Array2Data4 value 4'),
				1 =&gt; array('Array2Data1' =&gt; 2, 'Array2Data2' =&gt; 'Array2Data2 value 2', 'Array2Data3' =&gt; 'Array2Data3 value 2', 'Array2Data4' =&gt; 'Array2Data4 value 4'),
				2 =&gt; array('Array2Data1' =&gt; 3, 'Array2Data2' =&gt; 'Array2Data2 value 2', 'Array2Data3' =&gt; 'Array2Data3 value 2', 'Array2Data4' =&gt; 'Array2Data4 value 4'),
				3 =&gt; array('Array2Data1' =&gt; 4, 'Array2Data2' =&gt; 'Array2Data2 value 2', 'Array2Data3' =&gt; 'Array2Data3 value 2', 'Array2Data4' =&gt; 'Array2Data4 value 4'),
				4 =&gt; array('Array2Data1' =&gt; 5, 'Array2Data2' =&gt; 'Array2Data2 value 2', 'Array2Data3' =&gt; 'Array2Data3 value 2', 'Array2Data4' =&gt; 'Array2Data4 value 4')),
		'Array3' =&gt; array(
				0 =&gt; array('Array3Data1' =&gt; 1, 'Array3Data2' =&gt; 'Array3Data2 value 2', 'Array3Data3' =&gt; 'Array3Data3 value 2', 'Array3Data4' =&gt; 'Array3Data4 value 4'),
</codefragment>
  </duplication>
  <duplication lines="9" tokens="48">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="1954"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="1977"/>
    <codefragment>		$expected = array(
		'Array1' =&gt; array(
				'Array1Data1' =&gt; 'Array1Data1 value 1', 'Array1Data2' =&gt; 'Array1Data2 value 2', 'Array1Data3' =&gt; 'Array1Data3 value 3','Array1Data4' =&gt; 'Array1Data4 value 4',
				'Array1Data5' =&gt; 'Array1Data5 value 5', 'Array1Data6' =&gt; 'Array1Data6 value 6', 'Array1Data7' =&gt; 'Array1Data7 value 7', 'Array1Data8' =&gt; 'Array1Data8 value 8'),
		'string' =&gt; 1,
		'another' =&gt; 'string',
		'some' =&gt; 'thing else',
		'Array2' =&gt; array(
				0 =&gt; array('Array2Data1' =&gt; 1, 'Array2Data2' =&gt; 'Array2Data2 value 2', 'Array2Data3' =&gt; 'Array2Data3 value 2', 'Array2Data4' =&gt; 'Array2Data4 value 4'),
</codefragment>
  </duplication>
  <duplication lines="9" tokens="69">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="2030"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="2066"/>
    <codefragment>		$result = Set::reverse($class);
		$this-&gt;assertIdentical($result, $expected);

		$expected = array('User' =&gt; array('psword'=&gt; 'whatever',
						'Icon' =&gt; array('id'=&gt; 851),
						'Profile' =&gt; array('name' =&gt; 'Some Name', 'address' =&gt; 'Some Address'),
						'Comment' =&gt; array(
								array('id' =&gt; 1, 'article_id' =&gt; 1, 'user_id' =&gt; 1, 'comment' =&gt; 'First Comment for First Article', 'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31'),
								array('id' =&gt; 2, 'article_id' =&gt; 1, 'user_id' =&gt; 2, 'comment' =&gt; 'Second Comment for First Article', 'published' =&gt; 'Y', 'created' =&gt; '2007-03-18 10:47:23', 'updated' =&gt; '2007-03-18 10:49:31'))));
</codefragment>
  </duplication>
  <duplication lines="7" tokens="17">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="2392"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="2443"/>
    <codefragment>					'Author' =&gt; array('id' =&gt; '3', 'user' =&gt; 'larry', 'password' =&gt; '5f4dcc3b5aa765d61d8327deb882cf99', 'created' =&gt; '2007-03-17 01:20:23', 'updated' =&gt; '2007-03-17 01:22:31', 'test' =&gt; 'working'),
				)
			));

		$expected = new stdClass;
		$expected-&gt;_name_ = 'Post';
		$expected-&gt;id = '1';
</codefragment>
  </duplication>
  <duplication lines="7" tokens="31">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="2362"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="2385"/>
    <codefragment>		$result = $this-&gt;Form-&gt;inputs(false);
		$expected = array(
			'input' =&gt; array('type' =&gt; 'hidden', 'name' =&gt; 'data[Contact][id]', 'id' =&gt; 'ContactId'),
			array('div' =&gt; array('class' =&gt; 'input text')),
			'*/div',
			array('div' =&gt; array('class' =&gt; 'input text')),
			'*/div',
</codefragment>
  </duplication>
  <duplication lines="8" tokens="25">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="2456"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="2484"/>
    <codefragment>		$result = $this-&gt;Form-&gt;inputs('Hello');
		$expected = array(
			'fieldset' =&gt; array(),
			'legend' =&gt; array(),
			'Hello',
			'/legend',
			'input' =&gt; array('type' =&gt; 'hidden', 'name' =&gt; 'data[Contact][id]', 'id' =&gt; 'ContactId'),
			array('div' =&gt; array('class' =&gt; 'input text')),
</codefragment>
  </duplication>
  <duplication lines="6" tokens="18">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="2831"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="2850"/>
    <codefragment>		$expected = array(
			'fieldset' =&gt; array(),
			'legend' =&gt; array(),
			'Field',
			'/legend',
			'input' =&gt; array('type' =&gt; 'hidden', 'name' =&gt; 'data[Model][field]', 'value' =&gt; '', 'id' =&gt; 'ModelField_'),
</codefragment>
  </duplication>
  <duplication lines="21" tokens="77">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4050"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4090"/>
    <codefragment>		$expected = array(
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][day]', 'id' =&gt; 'ContactDateDay')),
			$daysRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][month]', 'id' =&gt; 'ContactDateMonth')),
			$monthsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][year]', 'id' =&gt; 'ContactDateYear')),
			$yearsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][hour]', 'id' =&gt; 'ContactDateHour')),
			$hoursRegex,
			array('option' =&gt; array('value' =&gt; '')),
</codefragment>
  </duplication>
  <duplication lines="21" tokens="78">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4050"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4130"/>
    <codefragment>		$expected = array(
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][day]', 'id' =&gt; 'ContactDateDay')),
			$daysRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][month]', 'id' =&gt; 'ContactDateMonth')),
			$monthsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][year]', 'id' =&gt; 'ContactDateYear')),
			$yearsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][hour]', 'id' =&gt; 'ContactDateHour')),
			$hoursRegex,
			array('option' =&gt; array('value' =&gt; '')),
</codefragment>
  </duplication>
  <duplication lines="10" tokens="36">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4050"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4170"/>
    <codefragment>		$expected = array(
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][day]', 'id' =&gt; 'ContactDateDay')),
			$daysRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][month]', 'id' =&gt; 'ContactDateMonth')),
			$monthsRegex,
			array('option' =&gt; array('value' =&gt; '')),
</codefragment>
  </duplication>
  <duplication lines="26" tokens="97">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4169"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4218"/>
    <codefragment>		$result = $this-&gt;Form-&gt;dateTime('Contact.date', 'DMY', '12', '', array('interval' =&gt; 5));
		$expected = array(
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][day]', 'id' =&gt; 'ContactDateDay')),
			$daysRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][month]', 'id' =&gt; 'ContactDateMonth')),
			$monthsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][year]', 'id' =&gt; 'ContactDateYear')),
			$yearsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][hour]', 'id' =&gt; 'ContactDateHour')),
			$hoursRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			':',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][min]', 'id' =&gt; 'ContactDateMin')),
</codefragment>
  </duplication>
  <duplication lines="20" tokens="77">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4049"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4268"/>
    <codefragment>		$result = $this-&gt;Form-&gt;dateTime('Contact.date', 'DMY', '12');
		$expected = array(
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][day]', 'id' =&gt; 'ContactDateDay')),
			$daysRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][month]', 'id' =&gt; 'ContactDateMonth')),
			$monthsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			'-',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][year]', 'id' =&gt; 'ContactDateYear')),
			$yearsRegex,
			array('option' =&gt; array('value' =&gt; '')),
			'/option',
			'*/select',
			array('select' =&gt; array('name' =&gt; 'data[Contact][date][hour]', 'id' =&gt; 'ContactDateHour')),
</codefragment>
  </duplication>
  <duplication lines="8" tokens="24">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="4368"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/form.test.php" line="6107"/>
    <codefragment>			'label' =&gt; array('for' =&gt; 'ContactPublishedMonth'),
			'Published',
			'/label',
			array('select' =&gt; array('name' =&gt; 'data[Contact][published][month]', 'id' =&gt; 'ContactPublishedMonth')),
			$monthsRegex,
			array('option' =&gt; array('value' =&gt; date('m', $now), 'selected' =&gt; 'selected')),
			date('F', $now),
			'/option',
</codefragment>
  </duplication>
  <duplication lines="7" tokens="32">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/javascript.test.php" line="356"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/js.test.php" line="698"/>
    <codefragment>		$result = $this-&gt;Javascript-&gt;object(array(
			'2007' =&gt; array(
				'Spring' =&gt; array('1' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Josh'), '2' =&gt; array('id' =&gt; 2, 'name' =&gt; 'Becky')),
				'Fall' =&gt; array('1' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Josh'), '2' =&gt; array('id' =&gt; 2, 'name' =&gt; 'Becky'))
			), '2006' =&gt; array(
				'Spring' =&gt; array('1' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Josh'), '2' =&gt; array('id' =&gt; 2, 'name' =&gt; 'Becky')),
				'Fall' =&gt; array('1' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Josh'), '2' =&gt; array('id' =&gt; 2, 'name' =&gt; 'Becky')
</codefragment>
  </duplication>
  <duplication lines="9" tokens="61">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/paginator.test.php" line="1042"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/paginator.test.php" line="1102"/>
    <codefragment>			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:4')), '4', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:5')), '5', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:6')), '6', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:7')), '7', '/a', '/span',
			' | ',
			array('span' =&gt; array('class' =&gt; 'current')), '8', '/span',
</codefragment>
  </duplication>
  <duplication lines="7" tokens="43">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/paginator.test.php" line="1133"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/paginator.test.php" line="1189"/>
    <codefragment>			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:2')), '2', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:3')), '3', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:4')), '4', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:5')), '5', '/a', '/span',
</codefragment>
  </duplication>
  <duplication lines="13" tokens="82">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/paginator.test.php" line="1185"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/view/helpers/paginator.test.php" line="1207"/>
    <codefragment>		$result = $this-&gt;Paginator-&gt;numbers(array('first' =&gt; 1));
		$expected = array(
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:1')), '1', '/a', '/span',
			' | ',
			array('span' =&gt; array('class' =&gt; 'current')), '2', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:3')), '3', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:4')), '4', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:5')), '5', '/a', '/span',
			' | ',
			array('span' =&gt; array()), array('a' =&gt; array('href' =&gt; '/index/page:6')), '6', '/a', '/span',
</codefragment>
  </duplication>
  <duplication lines="6" tokens="56">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="66"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="298"/>
    <codefragment>		$input = array(
			array(
				'Project' =&gt; array('id' =&gt; 1, 'title' =&gt; null, 'client_id' =&gt; 1, 'show' =&gt; 1, 'is_spotlight' =&gt; null, 'style_id' =&gt; 0, 'job_type_id' =&gt; 1, 'industry_id' =&gt; 1, 'modified' =&gt; null, 'created' =&gt; null),
				'Style' =&gt; array('id' =&gt; null, 'name' =&gt; null),
				'JobType' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Touch Screen Kiosk'),
				'Industry' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Financial')
</codefragment>
  </duplication>
  <duplication lines="9" tokens="71">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="401"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="435"/>
    <codefragment>		$input = array(
			array(
				'Project' =&gt; array('id' =&gt; 1, 'title' =&gt; null, 'client_id' =&gt; 1, 'show' =&gt; '1', 'is_spotlight' =&gt; null, 'style_id' =&gt; 0, 'job_type_id' =&gt; '1.89', 'industry_id' =&gt; '1.56', 'modified' =&gt; null, 'created' =&gt; null),
				'Style' =&gt; array('id' =&gt; null, 'name' =&gt; null),
				'JobType' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Touch Screen Kiosk'),
				'Industry' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Financial')
			),
			array(
				'Project' =&gt; array('id' =&gt; 2, 'title' =&gt; null, 'client_id' =&gt; 2, 'show' =&gt; '1', 'is_spotlight' =&gt; null, 'style_id' =&gt; 0, 'job_type_id' =&gt; '2.2', 'industry_id' =&gt; 2.2, 'modified' =&gt; '2007-11-26 14:48:36', 'created' =&gt; null),
</codefragment>
  </duplication>
  <duplication lines="6" tokens="56">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="401"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="663"/>
    <codefragment>		$input = array(
			array(
				'Project' =&gt; array('id' =&gt; 1, 'title' =&gt; null, 'client_id' =&gt; 1, 'show' =&gt; '1', 'is_spotlight' =&gt; null, 'style_id' =&gt; 0, 'job_type_id' =&gt; '1.89', 'industry_id' =&gt; '1.56', 'modified' =&gt; null, 'created' =&gt; null),
				'Style' =&gt; array('id' =&gt; null, 'name' =&gt; null),
				'JobType' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Touch Screen Kiosk'),
				'Industry' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Financial')
</codefragment>
  </duplication>
  <duplication lines="6" tokens="57">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="66"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="699"/>
    <codefragment>		$input = array(
			array(
				'Project' =&gt; array('id' =&gt; 1, 'title' =&gt; null, 'client_id' =&gt; 1, 'show' =&gt; 1, 'is_spotlight' =&gt; null, 'style_id' =&gt; 0, 'job_type_id' =&gt; 1, 'industry_id' =&gt; 1, 'modified' =&gt; null, 'created' =&gt; null),
				'Style' =&gt; array('id' =&gt; null, 'name' =&gt; null),
				'JobType' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Touch Screen Kiosk'),
				'Industry' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Financial')
</codefragment>
  </duplication>
  <duplication lines="6" tokens="61">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="66"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="727"/>
    <codefragment>		$input = array(
			array(
				'Project' =&gt; array('id' =&gt; 1, 'title' =&gt; null, 'client_id' =&gt; 1, 'show' =&gt; 1, 'is_spotlight' =&gt; null, 'style_id' =&gt; 0, 'job_type_id' =&gt; 1, 'industry_id' =&gt; 1, 'modified' =&gt; null, 'created' =&gt; null),
				'Style' =&gt; array('id' =&gt; null, 'name' =&gt; null),
				'JobType' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Touch Screen Kiosk'),
				'Industry' =&gt; array('id' =&gt; 1, 'name' =&gt; 'Financial')
</codefragment>
  </duplication>
  <duplication lines="6" tokens="20">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="2762"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="1022"/>
    <codefragment>		$expected = array('Rss' =&gt; array(
			'version' =&gt; '2.0',
			'Channel' =&gt; array(
				'title' =&gt; 'Cake PHP Google Group',
				'link' =&gt; 'http://groups.google.com/group/cake-php',
				'description' =&gt; 'Search this group before posting anything. There are over 20,000 posts and it&amp;#39;s very likely your question was answered before. Visit the IRC channel #cakephp at irc.freenode.net for live chat with users and developers of Cake. If you post, tell us the version of Cake, PHP, and database.',
</codefragment>
  </duplication>
  <duplication lines="10" tokens="30">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/set.test.php" line="2872"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/cases/libs/xml.test.php" line="1144"/>
    <codefragment>		$expected = array('Rss' =&gt; array(
			'version' =&gt; '2.0',
			'Channel' =&gt; array(
				'title' =&gt; 'Cake PHP Google Group',
				'link' =&gt; 'http://groups.google.com/group/cake-php',
				'description' =&gt; 'Search this group before posting anything. There are over 20,000 posts and it&amp;#39;s very likely your question was answered before. Visit the IRC channel #cakephp at irc.freenode.net for live chat with users and developers of Cake. If you post, tell us the version of Cake, PHP, and database.',
				'language' =&gt; 'en',
				'Item' =&gt; array(
					array(
						'title' =&gt; 'constructng result array when using findall',
</codefragment>
  </duplication>
  <duplication lines="6" tokens="44">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/fixtures/article_featured_fixture.php" line="43"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/fixtures/article_fixture.php" line="43"/>
    <codefragment>	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'key' =&gt; 'primary'),
		'user_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false),
		'title' =&gt; array('type' =&gt; 'string', 'null' =&gt; false),
		'body' =&gt; 'text',
		'published' =&gt; array('type' =&gt; 'string', 'length' =&gt; 1, 'default' =&gt; 'N'),
</codefragment>
  </duplication>
  <duplication lines="6" tokens="38">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/fixtures/something_else_fixture.php" line="43"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/fixtures/something_fixture.php" line="43"/>
    <codefragment>	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'key' =&gt; 'primary'),
		'title' =&gt; array('type' =&gt; 'string', 'default' =&gt; ''),
		'body' =&gt; array('type' =&gt; 'text'),
		'published' =&gt; array('type' =&gt; 'string', 'default' =&gt; ''),
		'created' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true),
</codefragment>
  </duplication>
  <duplication lines="30" tokens="335">
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/fixtures/translate_fixture.php" line="51"/>
    <file path="/Users/cary/Dropbox/mpd-gallery/src/cake/tests/fixtures/translate_with_prefix_fixture.php" line="53"/>
    <codefragment>	var $fields = array(
		'id' =&gt; array('type' =&gt; 'integer', 'key' =&gt; 'primary'),
		'locale' =&gt; array('type' =&gt; 'string', 'length' =&gt; 6, 'null' =&gt; false),
		'model' =&gt; array('type' =&gt; 'string', 'null' =&gt; false),
		'foreign_key' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false),
		'field' =&gt; array('type' =&gt; 'string', 'null' =&gt; false),
		'content' =&gt; array('type' =&gt; 'text')
	);

/**
 * records property
 *
 * @var array
 * @access public
 */
	var $records = array(
		array('id' =&gt; 1, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'title', 'content' =&gt; 'Title #1'),
		array('id' =&gt; 2, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'content', 'content' =&gt; 'Content #1'),
		array('id' =&gt; 3, 'locale' =&gt; 'deu', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'title', 'content' =&gt; 'Titel #1'),
		array('id' =&gt; 4, 'locale' =&gt; 'deu', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'content', 'content' =&gt; 'Inhalt #1'),
		array('id' =&gt; 5, 'locale' =&gt; 'cze', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'title', 'content' =&gt; 'Titulek #1'),
		array('id' =&gt; 6, 'locale' =&gt; 'cze', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 1, 'field' =&gt; 'content', 'content' =&gt; 'Obsah #1'),
		array('id' =&gt; 7, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 2, 'field' =&gt; 'title', 'content' =&gt; 'Title #2'),
		array('id' =&gt; 8, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 2, 'field' =&gt; 'content', 'content' =&gt; 'Content #2'),
		array('id' =&gt; 9, 'locale' =&gt; 'deu', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 2, 'field' =&gt; 'title', 'content' =&gt; 'Titel #2'),
		array('id' =&gt; 10, 'locale' =&gt; 'deu', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 2, 'field' =&gt; 'content', 'content' =&gt; 'Inhalt #2'),
		array('id' =&gt; 11, 'locale' =&gt; 'cze', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 2, 'field' =&gt; 'title', 'content' =&gt; 'Titulek #2'),
		array('id' =&gt; 12, 'locale' =&gt; 'cze', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 2, 'field' =&gt; 'content', 'content' =&gt; 'Obsah #2'),
		array('id' =&gt; 13, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 3, 'field' =&gt; 'title', 'content' =&gt; 'Title #3'),
		array('id' =&gt; 14, 'locale' =&gt; 'eng', 'model' =&gt; 'TranslatedItem', 'foreign_key' =&gt; 3, 'field' =&gt; 'content', 'content' =&gt; 'Content #3'),
</codefragment>
  </duplication>
</pmd-cpd>
